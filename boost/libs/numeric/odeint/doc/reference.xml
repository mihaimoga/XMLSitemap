<?xml version="1.0" standalone="yes"?>
<library-reference id="odeint_reference"><title>odeint Reference</title><header id="doxygen.odeint_reference.check__adapter_8hpp" name="boost/numeric/odeint/integrate/check_adapter.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__observer" name="checked_observer"><template>
      <template-type-parameter name="Observer"/>
      <template-type-parameter name="Checker"/>
    </template><purpose>Adapter to combine observer and checker. </purpose><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__observer_1a3006966712ec9dbd289bd7d783d7ac08" name="observer_type"><type>Observer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__observer_1adbc15f95eaf27450967369b9d6e4272c" name="checker_type"><type>Checker</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__observer_1aa58e5f5ee55feb1339b945d4833f0976"><parameter name="observer"><paramtype>observer_type &amp;</paramtype></parameter><parameter name="checker"><paramtype>checker_type &amp;</paramtype></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__observer_1a112f65c225279e080f6e5c487de13f94" name="operator()" cv="const"><type>void</type><template>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="state"><paramtype>const State &amp;</paramtype></parameter><parameter name="t"><paramtype>Time</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper" name="checked_stepper"><template>
      <template-type-parameter name="Stepper"/>
      <template-type-parameter name="Checker"/>
      <template-type-parameter name="StepperCategory"><default>typename base_tag&lt;typename Stepper::stepper_category&gt;::type</default></template-type-parameter>
    </template></class><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4" name="checked_stepper"><template>
      <template-type-parameter name="ControlledStepper"/>
      <template-type-parameter name="Checker"/>
    </template><specialization><template-arg>ControlledStepper</template-arg><template-arg>Checker</template-arg><template-arg>controlled_stepper_tag</template-arg></specialization><purpose>Adapter to combine controlled stepper and checker. </purpose><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1a1d86450b7e4b91f5771cab04a2a98508" name="stepper_type"><type>ControlledStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1a8ed06217ea3f63ce1fbe9c21ff0aede2" name="checker_type"><type>Checker</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1a16a9035fc7331e04c47bb3d36bbc7b99" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1acbc065e8fb528316049c8d49ce266d62" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1a1b01097adfd893ca16f3abfca425f9a7" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1aa82fddc6d9990aae76d3fc374e783c62" name="time_type"><type>stepper_type::time_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1ae678c004a6475a5e73dc5edec909cf14"><parameter name="stepper"><paramtype>stepper_type &amp;</paramtype></parameter><parameter name="checker"><paramtype>checker_type &amp;</paramtype></parameter><purpose>Construct the checked_stepper. </purpose></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_controlled_stepper_00_01_checker_00_01controlled__stepper__tag_01_4_1a7312985081d74d04f4638140e34f6e0a" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="state"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter><purpose>forward of the do_step method </purpose></method>
</method-group>
</class-specialization><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4" name="checked_stepper"><template>
      <template-type-parameter name="DenseOutStepper"/>
      <template-type-parameter name="Checker"/>
    </template><specialization><template-arg>DenseOutStepper</template-arg><template-arg>Checker</template-arg><template-arg>dense_output_stepper_tag</template-arg></specialization><purpose>Adapter to combine dense out stepper and checker. </purpose><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a46797e31952493c21fe691dc54b4c896" name="stepper_type"><type>DenseOutStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1acb5663382255bd4ee107478f10a9dee7" name="checker_type"><type>Checker</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1ad0f96b911bbed86e1f6f321dc1db92ae" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a27ac44b45124b664f66ec74e67fe5c2c" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a4ea7a5be4d098813e9d85b78da8959db" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1afc2ff5bc06de9d3eea41f0dc0c2fb254" name="time_type"><type>stepper_type::time_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a7bf383f51c145402e81055b64aa64437"><parameter name="stepper"><paramtype>stepper_type &amp;</paramtype></parameter><parameter name="checker"><paramtype>checker_type &amp;</paramtype></parameter><purpose>Construct the checked_stepper. </purpose></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1aa63f85380db4e644f13317e0f77e6aa8" name="do_step"><type>std::pair&lt; time_type, time_type &gt;</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a2f76655646d088ec07c45a2bebbc093b" name="initialize"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x0"><paramtype>const StateType &amp;</paramtype></parameter><parameter name="t0"><paramtype>time_type</paramtype></parameter><parameter name="dt0"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a597417acf328511e3c81588fb26fd18e" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1abfe0d0ce2157e3c6aa0172a6bf1b28f2" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>const StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1af285c44761dc2a74c1ab00ae694f9463" name="current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a81037967368191238a685e7016a0997e" name="current_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a037be2781f8bbea5b16353e771bf4e26" name="previous_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a6c1005cb4ff2bf0758ee29b27f8b8a95" name="previous_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_dense_out_stepper_00_01_checker_00_01dense__output__stepper__tag_01_4_1a5f23595d0c88d3c161d76c3767357dea" name="current_time_step" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
</class-specialization><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4" name="checked_stepper"><template>
      <template-type-parameter name="Stepper"/>
      <template-type-parameter name="Checker"/>
    </template><specialization><template-arg>Stepper</template-arg><template-arg>Checker</template-arg><template-arg>stepper_tag</template-arg></specialization><purpose>Adapter to combine basic stepper and checker. </purpose><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a58d7cb11ed8de523a20f4730d0e11a69" name="stepper_type"><type>Stepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a1f3c517226153ced907ebd55b09ad726" name="checker_type"><type>Checker</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a2632b5f4fcefaa28e223e2b593b91cda" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1af2bc126a74b352a5aa69e8500c19b4ec" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1afccc34f1446e3ca24e4fb27918c19c6c" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a70c960dc572abed453378eef400ba675" name="time_type"><type>stepper_type::time_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a7d09334cb80a719ac1ca2406bb706ffb"><parameter name="stepper"><paramtype>stepper_type &amp;</paramtype></parameter><parameter name="checker"><paramtype>checker_type &amp;</paramtype></parameter><purpose>Construct the checked_stepper. </purpose></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1checked__stepper_3_01_stepper_00_01_checker_00_01stepper__tag_01_4_1a49aed6a6ab8fbc8fb679b3d116a69714" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="state"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>const time_type</paramtype></parameter><parameter name="dt"><paramtype>const time_type</paramtype></parameter><purpose>forward of the do_step method </purpose></method>
</method-group>
</class-specialization>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.integrate_8hpp" name="boost/numeric/odeint/integrate/integrate.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
























<function id="doxygen.odeint_reference.integrate_8hpp_1a72842b716327475b2194090017168c9a" name="integrate"><type>boost::enable_if&lt; typenamehas_value_type&lt; State &gt;::type, size_t &gt;::type</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial state. </para></description></parameter><parameter name="start_time"><paramtype>Time</paramtype><description><para>Start time of the integration. </para></description></parameter><parameter name="end_time"><paramtype>Time</paramtype><description><para>End time of the integration. </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>Initial step size, will be adjusted during the integration. </para></description></parameter><parameter name="observer"><paramtype>Observer</paramtype><description><para>Observer that will be called after each time step. </para></description></parameter><purpose>Integrates the ODE. </purpose><description><para>Integrates the ODE given by system from start_time to end_time starting with start_state as initial condition and dt as initial time step. This function uses a dense output dopri5 stepper and performs an adaptive integration with step size control, thus dt changes during the integration. This method uses standard error bounds of 1E-6. After each step, the observer is called.</para><para><important><para>A second version of this function template exists which explicitly expects the value type as template parameter, i.e. integrate&lt; double &gt;( sys , x , t0 , t1 , dt , obs );</para>
</important>


</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate_8hpp_1a0ca07e6e45ac85accc590ea867106b43" name="integrate"><type>size_t</type><template>
          <template-type-parameter name="Value"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter></function>
<function id="doxygen.odeint_reference.integrate_8hpp_1ab7703fab833564e83647f0ffb9bca008" name="integrate"><type>size_t</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial state. </para></description></parameter><parameter name="start_time"><paramtype>Time</paramtype><description><para>Start time of the integration. </para></description></parameter><parameter name="end_time"><paramtype>Time</paramtype><description><para>End time of the integration. </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>Initial step size, will be adjusted during the integration. </para></description></parameter><purpose>Integrates the ODE without observer calls. </purpose><description><para>Integrates the ODE given by system from start_time to end_time starting with start_state as initial condition and dt as initial time step. This function uses a dense output dopri5 stepper and performs an adaptive integration with step size control, thus dt changes during the integration. This method uses standard error bounds of 1E-6. No observer is called.</para><para><important><para>A second version of this function template exists which explicitly expects the value type as template parameter, i.e. integrate&lt; double &gt;( sys , x , t0 , t1 , dt );</para>
</important>


</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate_8hpp_1af635fd45a206fe403582fc7e457ac03b" name="integrate"><type>size_t</type><template>
          <template-type-parameter name="Value"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter></function>
























</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.integrate__adaptive_8hpp" name="boost/numeric/odeint/integrate/integrate_adaptive.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">




















<function id="doxygen.odeint_reference.integrate__adaptive_8hpp_1a81bdb267efab16d48b9e94dc6862a830" name="integrate_adaptive"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to be used for numerical integration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>Function/Functor defining the rhs of the ODE. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial condition x0. </para></description></parameter><parameter name="start_time"><paramtype>Time</paramtype><description><para>The initial time t0. </para></description></parameter><parameter name="end_time"><paramtype>Time</paramtype><description><para>The final integration time tend. </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>The time step between observer calls, <emphasis>not</emphasis> necessarily the time step of the integration. </para></description></parameter><parameter name="observer"><paramtype>Observer</paramtype><description><para>Function/Functor called at equidistant time intervals. </para></description></parameter><purpose>Integrates the ODE with adaptive step size. </purpose><description><para>This function integrates the ODE given by system with the given stepper. The observer is called after each step. If the stepper has no error control, the step size remains constant and the observer is called at equidistant time points t0+n*dt. If the stepper is a ControlledStepper, the step size is adjusted and the observer is called in non-equidistant intervals.</para><para>

</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate__adaptive_8hpp_1a338ba3df6bd13895599edbea7b7d71e5" name="integrate_adaptive"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__adaptive_8hpp_1ae747d9fe7fa9bae276475fb0ec2420b3" name="integrate_adaptive"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><purpose>integrate_adaptive without an observer. </purpose></function>
<function id="doxygen.odeint_reference.integrate__adaptive_8hpp_1ab42bac8c2a0337c801c0cf1942c72835" name="integrate_adaptive"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>




























</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.integrate__const_8hpp" name="boost/numeric/odeint/integrate/integrate_const.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">














<function id="doxygen.odeint_reference.integrate__const_8hpp_1adb873f16e6ac5c9354a592e251db0012" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to be used for numerical integration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>Function/Functor defining the rhs of the ODE. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial condition x0. </para></description></parameter><parameter name="start_time"><paramtype>Time</paramtype><description><para>The initial time t0. </para></description></parameter><parameter name="end_time"><paramtype>Time</paramtype><description><para>The final integration time tend. </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>The time step between observer calls, <emphasis>not</emphasis> necessarily the time step of the integration. </para></description></parameter><parameter name="observer"><paramtype>Observer</paramtype><description><para>[optional] Function/Functor called at equidistant time intervals. </para></description></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype><description><para>[optional] Functor to check for step count overflows, if no checker is provided, no exception is thrown. </para></description></parameter><purpose>Integrates the ODE with constant step size. </purpose><description><para>Integrates the ODE defined by system using the given stepper. This method ensures that the observer is called at constant intervals dt. If the Stepper is a normal stepper without step size control, dt is also used for the numerical scheme. If a ControlledStepper is provided, the algorithm might reduce the step size to meet the error bounds, but it is ensured that the observer is always called at equidistant time points t0 + n*dt. If a DenseOutputStepper is used, the step size also may vary and the dense output is used to call the observer at equidistant time points. If a <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link> is provided as StepOverflowChecker, a no_progress_error is thrown if too many steps (default: 500) are performed without progress, i.e. in between observer calls. If no checker is provided, no such overflow check is performed.</para><para>

</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate__const_8hpp_1aba6a1db32f53dc3d2302daafc5945a69" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__const_8hpp_1a90036cd70d2abaa40cb669c043cb5b9b" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>integrate_const without step overflow checker </purpose></function>
<function id="doxygen.odeint_reference.integrate__const_8hpp_1a85682e926cf68ec2fc1f7254354a8d3c" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__const_8hpp_1ac79b0724dfb865189e35f2f91b960eb3" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><purpose>integrate_const without observer calls </purpose></function>
<function id="doxygen.odeint_reference.integrate__const_8hpp_1a26a2073b8436f61da545f44a8a513a64" name="integrate_const"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="end_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.integrate__n__steps_8hpp" name="boost/numeric/odeint/integrate/integrate_n_steps.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">








<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1af8d72beea266b30702a3b1e8547e7e42" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter></function>
<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1a322e72b007ddef673ed201f23e83fe96" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1a893e1658394a8479b50125d0f76899f3" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to be used for numerical integration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>Function/Functor defining the rhs of the ODE. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial condition x0. </para></description></parameter><parameter name="start_time"><paramtype>Time</paramtype><description><para>The initial time t0. </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>The time step between observer calls, <emphasis>not</emphasis> necessarily the time step of the integration. </para></description></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype><description><para>Number of steps to be performed </para></description></parameter><parameter name="observer"><paramtype>Observer</paramtype><description><para>Function/Functor called at equidistant time intervals. </para></description></parameter><purpose>The same function as above, but without checker. </purpose><description><para>Integrates the ODE with constant step size.</para><para>This function is similar to integrate_const. The observer is called at equidistant time intervals t0 + n*dt. If the Stepper is a normal stepper without step size control, dt is also used for the numerical scheme. If a ControlledStepper is provided, the algorithm might reduce the step size to meet the error bounds, but it is ensured that the observer is always called at equidistant time points t0 + n*dt. If a DenseOutputStepper is used, the step size also may vary and the dense output is used to call the observer at equidistant time points. The final integration time is always t0 + num_of_steps*dt. If a <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link> is provided as StepOverflowChecker, a no_progress_errror is thrown if too many steps (default: 500) are performed without progress, i.e. in between observer calls. If no checker is provided, no such overflow check is performed.</para><para>

</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1a05d9a427d9c85686c33d358ec7b77e52" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1a4d9ac82ad7e48e47da987b595313f943" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter><purpose>The same function as above, but without observer calls. </purpose></function>
<function id="doxygen.odeint_reference.integrate__n__steps_8hpp_1a75156c2a96200ca69c1e8ad25711dfec" name="integrate_n_steps"><type>Time</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="start_time"><paramtype>Time</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>






































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.integrate__times_8hpp" name="boost/numeric/odeint/integrate/integrate_times.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<function id="doxygen.odeint_reference.integrate__times_8hpp_1a1a0e5937752e0cee5e02c8a4d58b2466" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="times_start"><paramtype>TimeIterator</paramtype></parameter><parameter name="times_end"><paramtype>TimeIterator</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1a926eb2c8349a5ff5a17c1a53ca66b839" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="times_start"><paramtype>TimeIterator</paramtype></parameter><parameter name="times_end"><paramtype>TimeIterator</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1ad5d7187ae5b2aecaf81d3be7b204c7a9" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeRange"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="times"><paramtype>const TimeRange &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter><purpose>The same function as above, but with the observation times given as range. </purpose></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1a0849eb7eef7eea25ab48b0b0d1104f18" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeRange"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
          <template-type-parameter name="StepOverflowChecker"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="times"><paramtype>const TimeRange &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><parameter name="checker"><paramtype>StepOverflowChecker</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1ae98dab9b92a7bdf2f47349bc8136e89a" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to be used for numerical integration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>Function/Functor defining the rhs of the ODE. </para></description></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype><description><para>The initial condition x0. </para></description></parameter><parameter name="times_start"><paramtype>TimeIterator</paramtype><description><para>Iterator to the start time </para></description></parameter><parameter name="times_end"><paramtype>TimeIterator</paramtype><description><para>Iterator to the end time </para></description></parameter><parameter name="dt"><paramtype>Time</paramtype><description><para>The time step between observer calls, <emphasis>not</emphasis> necessarily the time step of the integration. </para></description></parameter><parameter name="observer"><paramtype>Observer</paramtype><description><para>Function/Functor called at equidistant time intervals. </para></description></parameter><purpose>Integrates the ODE with observer calls at given time points. </purpose><description><para>Integrates the ODE given by system using the given stepper. This function does observer calls at the subsequent time points given by the range times_start, times_end. If the stepper has not step size control, the step size might be reduced occasionally to ensure observer calls exactly at the time points from the given sequence. If the stepper is a ControlledStepper, the step size is adjusted to meet the error bounds, but also might be reduced occasionally to ensure correct observer calls. If a DenseOutputStepper is provided, the dense output functionality is used to call the observer at the given times. The end time of the integration is always *(end_time-1). If a <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link> is provided as StepOverflowChecker, a no_progress_error is thrown if too many steps (default: 500) are performed without progress, i.e. in between observer calls. If no checker is provided, no such overflow check is performed.</para><para>

</para></description><returns><para>The number of steps performed. </para>
</returns></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1a7d972d19a8042951dcacc39e59cc0668" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="times_start"><paramtype>TimeIterator</paramtype></parameter><parameter name="times_end"><paramtype>TimeIterator</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1a1610c506045fde55541491ec089d459f" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeRange"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>State &amp;</paramtype></parameter><parameter name="times"><paramtype>const TimeRange &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>The same function as above, but with the observation times given as range. </purpose></function>
<function id="doxygen.odeint_reference.integrate__times_8hpp_1ae41aa974719927ba2c66e0d59b298d5f" name="integrate_times"><type>size_t</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeRange"/>
          <template-type-parameter name="Time"/>
          <template-type-parameter name="Observer"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="start_state"><paramtype>const State &amp;</paramtype></parameter><parameter name="times"><paramtype>const TimeRange &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter><parameter name="observer"><paramtype>Observer</paramtype></parameter><purpose>Solves the forwarding problem, can be called with Boost.Range as start_state. </purpose></function>












































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.max__step__checker_8hpp" name="boost/numeric/odeint/integrate/max_step_checker.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1failed__step__checker" name="failed_step_checker"><inherit access="public">boost::numeric::odeint::max_step_checker</inherit><purpose>A class for performing overflow checks on the failed step count in step size adjustments. </purpose><description><para>Used internally within the dense output stepper and integrate routines. </para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1failed__step__checker_1a88e8b9fb00ae6480d6028c8902bddd73"><parameter name="max_steps"><paramtype>const int</paramtype><default>500</default></parameter><purpose>Construct the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1failed__step__checker">failed_step_checker</link>. max_steps is the maximal number of iterations allowed before runtime_error is thrown. </purpose></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1failed__step__checker_1ad8fe4d44ca3847e0d233a1e556450dad" name="operator()"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Increases the counter and performs the iteration check. </purpose></method>
<method name="reset"><type>void</type><purpose>Resets the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link> by setting the internal counter to 0. </purpose></method>
</method-group>
</class><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker" name="max_step_checker"><purpose>A class for performing overflow checks on the step count in integrate functions. </purpose><description><para>Provide an instance of this class to integrate functions if you want to throw a runtime error if too many steps are performed without progress during the integrate routine. </para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker_1a8d5cc50b2fdeb716a91585651decf95e"><parameter name="max_steps"><paramtype>const int</paramtype><default>500</default></parameter><purpose>Construct the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link>. max_steps is the maximal number of iterations allowed before runtime_error is thrown. </purpose></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker_1abbd6f96adc7702fd8cd76eead2667bcb" name="reset"><type>void</type><purpose>Resets the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker">max_step_checker</link> by setting the internal counter to 0. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1max__step__checker_1afa982f957e2bc155620df388f9dc66f8" name="operator()"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Increases the counter and performs the iteration check. </purpose></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adaptive__iterator_8hpp" name="boost/numeric/odeint/iterator/adaptive_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator" name="adaptive_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with adaptive step size. The value type of this iterator is the state type of the stepper. </purpose><description><para>Implements an iterator representing the solution of an ODE from t_start to t_end evaluated at steps with an adaptive step size dt. After each iteration the iterator dereferences to the state x at the next time t+dt where dt is controlled by the stepper. This iterator can be used with ControlledSteppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_adaptive routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator">adaptive_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is the state type of the stepper. Hence one can only access the state and not the current time.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator_1a6e7d4bd006c1b7bc12303678517cda63"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>time_type</paramtype></parameter><parameter name="t_end"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator_1a421ca58741efd79464d4aeb7399d21ba"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>
















































<function id="doxygen.odeint_reference.adaptive__iterator_8hpp_1a990361c26f434ded48151049840aca07" name="make_adaptive_iterator_begin"><type><classname>adaptive_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator">adaptive_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The adaptive iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.adaptive__iterator_8hpp_1a99ef9feb4a0adcc9b57677bd349bb9e3" name="make_adaptive_iterator_end"><type><classname>adaptive_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator">adaptive_iterator</link>. Constructs a end iterator. </purpose><description><para>

</para></description><returns><para>The adaptive iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.adaptive__iterator_8hpp_1a829dc5213903c2ce21091ee09bbe3e18" name="make_adaptive_range"><type>std::pair&lt; <classname>adaptive_iterator</classname>&lt; Stepper, System, State &gt;, <classname>adaptive_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of adaptive iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator">adaptive_iterator</link>. </purpose><description><para>

</para></description><returns><para>The adaptive range. </para>
</returns></function>
</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adaptive__time__iterator_8hpp" name="boost/numeric/odeint/iterator/adaptive_time_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator" name="adaptive_time_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with adaptive step size. The value type of this iterator is a std::pair containing state and time. </purpose><description><para>Implements an iterator representing the solution of an ODE from t_start to t_end evaluated at steps with an adaptive step size dt. After each iteration the iterator dereferences to a pair containing state and time at the next time point t+dt where dt is controlled by the stepper. This iterator can be used with ControlledSteppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_adaptive routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__iterator">adaptive_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is a std::pair of state and time of the stepper.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator_1ac74ffe311a01603cce1903466b0afaf2"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>time_type</paramtype></parameter><parameter name="t_end"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator_1a19d96d1df2b8c3167bbf6d17847ee224"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>













































<function id="doxygen.odeint_reference.adaptive__time__iterator_8hpp_1a7db4223a072412374929e4e72950e7c9" name="make_adaptive_time_iterator_begin"><type><classname>adaptive_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator">adaptive_time_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator">adaptive_time_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The adaptive time iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.adaptive__time__iterator_8hpp_1a68a19f9dc271d5046d1b4997d25748d3" name="make_adaptive_time_iterator_end"><type><classname>adaptive_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator">adaptive_time_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator">adaptive_time_iterator</link>. Constructs a end iterator. </purpose><description><para>

</para></description><returns><para>The adaptive time iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.adaptive__time__iterator_8hpp_1a2b29c744ad5d0d8443b0d1ce28a3737b" name="make_adaptive_time_range"><type>std::pair&lt; <classname>adaptive_time_iterator</classname>&lt; Stepper, System, State &gt;, <classname>adaptive_time_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__time__iterator">adaptive_time_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of adaptive time iterators. A range is here a pair of adaptive_time_iterators. </purpose><description><para>

</para></description><returns><para>The adaptive time range. </para>
</returns></function>



</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.const__step__iterator_8hpp" name="boost/numeric/odeint/iterator/const_step_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator" name="const_step_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with constant step size. The value type of this iterator is the state type of the stepper. </purpose><description><para>Implements an iterator representing the solution of an ODE from t_start to t_end evaluated at steps with constant step size dt. After each iteration the iterator dereferences to the state x at the next time t+dt. This iterator can be used with Steppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_const routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is the state type of the stepper. Hence one can only access the state and not the current time.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator_1a05579ccf419f1cc59f2c54fb922363a4"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>time_type</paramtype></parameter><parameter name="t_end"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator_1a0bbb666fe882a4f499129ad4ba610cf7"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>










































<function id="doxygen.odeint_reference.const__step__iterator_8hpp_1a25a66e884ecabaddbec4520747230426" name="make_const_step_iterator_begin"><type><classname>const_step_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The const step iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.const__step__iterator_8hpp_1a3d4e1121d4bd5ee6dae18981a572d718" name="make_const_step_iterator_end"><type><classname>const_step_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. Constructs a end iterator. </purpose><description><para>

</para></description><returns><para>The <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. </para>
</returns></function>
<function id="doxygen.odeint_reference.const__step__iterator_8hpp_1a856311cea1390f4a2cd29a4c3036c798" name="make_const_step_range"><type>std::pair&lt; <classname>const_step_iterator</classname>&lt; Stepper, System, State &gt;, <classname>const_step_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of const step iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. </purpose><description><para>

</para></description><returns><para>The const step range. </para>
</returns></function>






</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.const__step__time__iterator_8hpp" name="boost/numeric/odeint/iterator/const_step_time_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator" name="const_step_time_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with constant step size. The value type of this iterator is a std::pair containing state and time. </purpose><description><para>Implements an iterator representing the solution of an ODE from t_start to t_end evaluated at steps with constant step size dt. After each iteration the iterator dereferences to a pair containing state and time at the next time point t+dt.. This iterator can be used with Steppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_const routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is a pair with the state type and time type of the stepper.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator_1a74625b5c8a1a692ff8ce2cda47f54f87"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>time_type</paramtype></parameter><parameter name="t_end"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator_1ab10753c700146f437c62faaad71f68be"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>







































<function id="doxygen.odeint_reference.const__step__time__iterator_8hpp_1a258de5779599ebdfcc4ba7828c10d937" name="make_const_step_time_iterator_begin"><type><classname>const_step_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The const step time iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.const__step__time__iterator_8hpp_1a8cefb77b3fe49b7fa4ca0fbf6fc5d736" name="make_const_step_time_iterator_end"><type><classname>const_step_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link>. Constructs a end iterator. </purpose><description><para>

</para></description><returns><para>The const step time iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.const__step__time__iterator_8hpp_1ac4d91bf4c290f8b73aefbf4ab6b85273" name="make_const_step_time_range"><type>std::pair&lt; <classname>const_step_time_iterator</classname>&lt; Stepper, System, State &gt;, <classname>const_step_time_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype></parameter><parameter name="t_end"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The end time, at which the iteration should stop. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link>. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__time__iterator">const_step_time_iterator</link>. </purpose><description><para>

</para></description><returns><para>The const step time range. </para>
</returns></function>









</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.n__step__iterator_8hpp" name="boost/numeric/odeint/iterator/n_step_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator" name="n_step_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with constant step size. The value type of this iterator is the state type of the stepper. </purpose><description><para>Implements an iterator representing the solution of an ODE starting from t with n steps and a constant step size dt. After each iteration the iterator dereferences to the state x at the next time t+dt. This iterator can be used with Steppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_n_steps routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator">n_step_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is the state type of the stepper. Hence one can only access the state and not the current time.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator_1a0caa28cbfa75222319ae6dabfb24516e"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator_1a0ec789722c82a71fe6422fb00e8b0f68"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>




































<function id="doxygen.odeint_reference.n__step__iterator_8hpp_1afae5930d7833a488f3d2d7a23a4dae6a" name="make_n_step_iterator_begin"><type><classname>n_step_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype><description><para>The number of steps to be executed. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator">n_step_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The n-step iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.n__step__iterator_8hpp_1a3c7da906e5bad5adf83b8d541f3c755a" name="make_n_step_iterator_end"><type><classname>n_step_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator">n_step_iterator</link>. Constructs an end iterator. </purpose><description><para>

</para></description><returns><para>The <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. </para>
</returns></function>
<function id="doxygen.odeint_reference.n__step__iterator_8hpp_1a77021f428b93d4db209525652ba6b96e" name="make_n_step_range"><type>std::pair&lt; <classname>n_step_iterator</classname>&lt; Stepper, System, State &gt;, <classname>n_step_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype><description><para>The number of steps to be executed. </para></description></parameter><purpose>Factory function to construct a single pass range of n-step iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__iterator">n_step_iterator</link>. </purpose><description><para>

</para></description><returns><para>The n-step range. </para>
</returns></function>












</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.n__step__time__iterator_8hpp" name="boost/numeric/odeint/iterator/n_step_time_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator" name="n_step_time_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with constant step size. The value type of this iterator is a std::pair containing state and time. </purpose><description><para>Implements an iterator representing the solution of an ODE starting from t with n steps and a constant step size dt. After each iteration the iterator dereferences to a pair of state and time at the next time t+dt. This iterator can be used with Steppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_n_steps routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator">n_step_time_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is pair of state and time.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator_1a5596c5efd29e57e4b9e1cb115f7f1d3e"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator_1a4a7bfc8be18fac12897360a93dc35231"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>

































<function id="doxygen.odeint_reference.n__step__time__iterator_8hpp_1a58960ae2304afdd717f15d05673437cd" name="make_n_step_time_iterator_begin"><type><classname>n_step_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype><description><para>The number of steps to be executed. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator">n_step_time_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The n-step iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.n__step__time__iterator_8hpp_1a3cea89a7b817f7ff50d2cf03aa71bce3" name="make_n_step_time_iterator_end"><type><classname>n_step_time_iterator</classname>&lt; Stepper, System, State &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator">n_step_time_iterator</link>. Constructs an end iterator. </purpose><description><para>

</para></description><returns><para>The <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link>. </para>
</returns></function>
<function id="doxygen.odeint_reference.n__step__time__iterator_8hpp_1a9110d5e99a26fb51ba6ec67cd305923a" name="make_n_step_time_range"><type>std::pair&lt; <classname>n_step_time_iterator</classname>&lt; Stepper, System, State &gt;, <classname>n_step_time_iterator</classname>&lt; Stepper, System, State &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><parameter name="num_of_steps"><paramtype>size_t</paramtype><description><para>The number of steps to be executed. </para></description></parameter><purpose>Factory function to construct a single pass range of n-step iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1n__step__time__iterator">n_step_time_iterator</link>. </purpose><description><para>

</para></description><returns><para>The n-step range. </para>
</returns></function>















</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.times__iterator_8hpp" name="boost/numeric/odeint/iterator/times_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator" name="times_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="TimeIterator"><purpose><para>The iterator type for the sequence of time points. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with given evaluation points. The value type of this iterator is the state type of the stepper. </purpose><description><para>Implements an iterator representing the solution of an ODE from *t_start to *t_end evaluated at time points given by the sequence t_start to t_end. t_start and t_end are iterators representing a sequence of time points where the solution of the ODE should be evaluated. After each iteration the iterator dereferences to the state x at the next time *t_start++ until t_end is reached. This iterator can be used with Steppers, ControlledSteppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_times routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator">times_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is the state type of the stepper. Hence one can only access the state and not the current time.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator_1a8168e759d4800f1a27973be886ff30f1"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator_1a91c0bf264cac7ec6eca725510b52d13f"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>






























<function id="doxygen.odeint_reference.times__iterator_8hpp_1ac4af32ffb9f6b1039570961df7e9db85" name="make_times_iterator_begin"><type><classname>times_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype><description><para>Begin iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype><description><para>End iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator">times_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The times iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.times__iterator_8hpp_1a22774f8bc0b73964e7f5c1637d60d30e" name="make_times_iterator_end"><type><classname>times_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;</type><template>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator">times_iterator</link>. Constructs an end iterator. </purpose><description><para>


This function needs the TimeIterator type specifically defined as a template parameter. </para></description><returns><para>The times iterator.</para>
</returns></function>
<function id="doxygen.odeint_reference.times__iterator_8hpp_1a7795d9bb94289bad8bd9dc803a0de567" name="make_times_range"><type>std::pair&lt; <classname>times_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;, <classname>times_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype><description><para>Begin iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype><description><para>End iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of times iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator">times_iterator</link>. </purpose><description><para>

</para></description><returns><para>The times iterator range. </para>
</returns></function>


















</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.times__time__iterator_8hpp" name="boost/numeric/odeint/iterator/times_time_iterator.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator" name="times_time_iterator"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type which should be used during the iteration. </para></purpose></template-type-parameter>
      <template-type-parameter name="System"><purpose><para>The type of the system function (ODE) which should be solved. </para></purpose></template-type-parameter>
      <template-type-parameter name="State"><purpose><para>The state type of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="TimeIterator"><purpose><para>The iterator type for the sequence of time points. </para></purpose></template-type-parameter>
    </template><purpose>ODE Iterator with given evaluation points. The value type of this iterator is a std::pair containing state and time. </purpose><description><para>Implements an iterator representing the solution of an ODE from *t_start to *t_end evaluated at time points given by the sequence t_start to t_end. t_start and t_end are iterators representing a sequence of time points where the solution of the ODE should be evaluated. After each iteration the iterator dereferences to a pair with the state and the time at the next evaluation point *t_start++ until t_end is reached. This iterator can be used with Steppers, ControlledSteppers and DenseOutputSteppers and it always makes use of the all the given steppers capabilities. A for_each over such an iterator range behaves similar to the integrate_times routine.</para><para><link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator">times_time_iterator</link> is a model of single-pass iterator.</para><para>The value type of this iterator is a pair of state and time type.</para><para>
</para></description><method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator_1aee235d22148731642902d32db1c38d37"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator_1a9ebe2d7bf6a2370adbcfeb5b3e567894"><parameter name="stepper"><paramtype>Stepper</paramtype></parameter><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="s"><paramtype>State &amp;</paramtype></parameter></constructor>
</method-group>
</class>



























<function id="doxygen.odeint_reference.times__time__iterator_8hpp_1a9bbe45d360bcda04247b1daeba9c8684" name="make_times_time_iterator_begin"><type><classname>times_time_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype><description><para>Begin iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype><description><para>End iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator">times_time_iterator</link>. Constructs a begin iterator. </purpose><description><para>

</para></description><returns><para>The times_time iterator. </para>
</returns></function>
<function id="doxygen.odeint_reference.times__time__iterator_8hpp_1ae6a166240e1e7c422fcbf093b674f31a" name="make_times_time_iterator_end"><type><classname>times_time_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;</type><template>
          <template-type-parameter name="TimeIterator"/>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> stores a reference of s and changes its value during the iteration. </para></description></parameter><purpose>Factory function for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__time__iterator">times_time_iterator</link>. Constructs an end iterator. </purpose><description><para>


This function needs the TimeIterator type specifically defined as a template parameter. </para></description><returns><para>The times_time iterator.</para>
</returns></function>
<function id="doxygen.odeint_reference.times__time__iterator_8hpp_1affedb844111bd6b8e57edfbad8516f60" name="make_times_time_range"><type>std::pair&lt; <classname>times_time_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt;, <classname>times_time_iterator</classname>&lt; Stepper, System, State, TimeIterator &gt; &gt;</type><template>
          <template-type-parameter name="Stepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="State"/>
          <template-type-parameter name="TimeIterator"/>
        </template><parameter name="stepper"><paramtype>Stepper</paramtype><description><para>The stepper to use during the iteration. </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function (ODE) to solve. </para></description></parameter><parameter name="x"><paramtype>State &amp;</paramtype><description><para>The initial state. <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1const__step__iterator">const_step_iterator</link> store a reference of s and changes its value during the iteration. </para></description></parameter><parameter name="t_start"><paramtype>TimeIterator</paramtype><description><para>Begin iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="t_end"><paramtype>TimeIterator</paramtype><description><para>End iterator of the sequence of evaluation time points. </para></description></parameter><parameter name="dt"><paramtype>typename traits::time_type&lt; Stepper &gt;::type</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Factory function to construct a single pass range of times_time iterators. A range is here a pair of <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1times__iterator">times_iterator</link>. </purpose><description><para>

</para></description><returns><para>The times_time iterator range. </para>
</returns></function>





















</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adams__bashforth_8hpp" name="boost/numeric/odeint/stepper/adams_bashforth.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth" name="adams_bashforth"><template>
      <template-nontype-parameter name="Steps"><type>size_t</type><purpose><para>The number of steps (maximal 8). </para></purpose></template-nontype-parameter>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
      <template-type-parameter name="InitializingStepper"><default>extrapolation_stepper&lt; order_helper&lt;Steps&gt;::value, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</default><purpose><para>The stepper for the first two steps. </para></purpose></template-type-parameter>
    </template><inherit access="public">algebra_stepper_base&lt; typename algebra_dispatcher&lt; State &gt;::algebra_type, typename operations_dispatcher&lt; State &gt;::operations_type &gt;</inherit><purpose>The Adams-Bashforth multistep algorithm. </purpose><description><para>The Adams-Bashforth method is a multi-step algorithm with configurable step number. The step number is specified as template parameter Steps and it then uses the result from the previous Steps steps. See also <ulink url="http://en.wikipedia.org/wiki/Linear_multistep_method">en.wikipedia.org/wiki/Linear_multistep_method</ulink>. Currently, a maximum of Steps=8 is supported. The method is explicit and fulfills the Stepper concept. Step size control or continuous output are not provided.</para><para>This class derives from algebra_base and inherits its interface via CRTP (current recurring template pattern). For more details see algebra_stepper_base.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a7b218549b36d16331f35fc22c18c376a" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ad08120dea5b601bbf4ea36a53e571ed8" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a98dca1b1ee4adb9be28b8c7a93e28828" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a48eba16ccd36af6af0f2928ca7f95937" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a3bef83ccda481942b6c6878de48d2c95" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a6234d58510386e78d72aec9a403349f8" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1aa506832b4a3d85e25ae3e0bc45ed21f0" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a1e95670abc1f025e062ef919110017cc" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a9bc17b2ce2c51bcfca0050357ea7a5a8" name="initializing_stepper_type"><type>InitializingStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1aad100bfa59d7956edd79825052809546" name="algebra_stepper_base_type"><type>algebra_stepper_base&lt; Algebra, Operations &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1aa6e2abe40f07605fa836f51530884f6d" name="algebra_type"><type>algebra_stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a469c7dff291304ce027869758ddc5057" name="operations_type"><type>algebra_stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ace6061ea3153d1c52ceb22603d10d018" name="order_type"><type>unsigned short</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ad176b7ae59467ae733cd1ab6633667e7" name="step_storage_type"><type><emphasis>unspecified</emphasis></type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a39477d55ca3f0230d7ba407aed87e4af" name="steps" specifiers="static"><type>const size_t</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a1bb88171df957be47bf10960556987bd" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ab2a78c1ae005beafcd8890b54b61b905" name="order" cv="const"><type>order_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the order of the algorithm, which is equal to the number of steps. </purpose><description><para>
</para></description><returns><para>order of the method. </para>
</returns></method>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a8a8ea2c45e0fffe871c6f1b308c63151"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth">adams_bashforth</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a7cd9a9057a7cf04d85bf6f1940b3eb0d" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. After calling do_step the result is updated in x. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. It transforms the result in-place. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1abbc2b5135207332bce4cc260621b1fcf" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as StateInOut. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a5e9e0c17452d5eded98d3876045b773d" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>The method performs one step with the stepper passed by Stepper. The state of the ODE is updated out-of-place. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1abf736504a93ee9738f0c44a41b58a17b" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>const StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as StateOut. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a7c836238b894fa397a5b2908412be64e" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1aecd73c7777458936046597eb62654298" name="step_storage" cv="const"><type>const step_storage_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the storage of intermediate results. </purpose><description><para>
</para></description><returns><para>The storage of intermediate results. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a08794b42eb4b6c5612124ef67fbd9dff" name="step_storage"><type>step_storage_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the storage of intermediate results. </purpose><description><para>
</para></description><returns><para>The storage of intermediate results. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ac1c3ca57238ddc053a8fb87ad652db24" name="initialize"><type>void</type><template>
          <template-type-parameter name="ExplicitStepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="explicit_stepper"><paramtype>ExplicitStepper</paramtype><description><para>the stepper used to fill the buffer of previous step results </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. After calling do_step the result is updated in x. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>Initialized the stepper. Does Steps-1 steps with the explicit_stepper to fill the buffer. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a446b9076cb708d41d9a8981a9288f400" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateIn &amp;</paramtype><description><para>The initial state of the ODE which should be solved, updated in this method. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The initial value of the time, updated in this method. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>Initialized the stepper. Does Steps-1 steps with an internal instance of InitializingStepper to fill the buffer. </purpose><description><para><note><para>The state x and time t are updated to the values after Steps-1 initial steps. </para>
</note>

</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a0a757e65c4b39ba380b72219e77ec294" name="reset"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Resets the internal buffer of the stepper. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1af233898d0193779ca4ee1e42d3cff3fa" name="is_initialized" cv="const"><type>bool</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns true if the stepper has been initialized. </purpose><description><para>
</para></description><returns><para>bool true if stepper is initialized, false otherwise </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a40147bae0c8ebf357af41736619fb239" name="initializing_stepper" cv="const"><type>const initializing_stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the internal initializing stepper instance. </purpose><description><para>
</para></description><returns><para>initializing_stepper </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1ad4d74b6593ad51898cf46e20480f8d0f" name="initializing_stepper"><type>initializing_stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the internal initializing stepper instance. </purpose><description><para>
</para></description><returns><para>initializing_stepper </para>
</returns></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a56c25d7ede7e4f00010039d01602434d" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth_1a2d0156cce83e211b20bedd6bbe057572" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1order__helper" name="order_helper"><template>
      <template-nontype-parameter name="N"><type>int</type></template-nontype-parameter>
    </template><inherit access="public">mpl::max::type</inherit></struct>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adams__bashforth__moulton_8hpp" name="boost/numeric/odeint/stepper/adams_bashforth_moulton.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton" name="adams_bashforth_moulton"><template>
      <template-nontype-parameter name="Steps"><type>size_t</type><purpose><para>The number of steps (maximal 8). </para></purpose></template-nontype-parameter>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
      <template-type-parameter name="InitializingStepper"><default>runge_kutta4&lt; State , Value , Deriv , Time , Algebra , Operations, Resizer &gt;</default><purpose><para>The stepper for the first two steps. </para></purpose></template-type-parameter>
    </template><purpose>The Adams-Bashforth-Moulton multistep algorithm. </purpose><description><para>The Adams-Bashforth method is a multi-step predictor-corrector algorithm with configurable step number. The step number is specified as template parameter Steps and it then uses the result from the previous Steps steps. See also <ulink url="http://en.wikipedia.org/wiki/Linear_multistep_method">en.wikipedia.org/wiki/Linear_multistep_method</ulink>. Currently, a maximum of Steps=8 is supported. The method is explicit and fulfills the Stepper concept. Step size control or continuous output are not provided.</para><para>This class derives from algebra_base and inherits its interface via CRTP (current recurring template pattern). For more details see algebra_stepper_base.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1ad11fa01a3755c1e631edd1db44be255f" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1aea9ec7cbc29e7935d2417c10f7421be5" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1adf6fa465314e851dfce2f070641c31ce" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a4761f432704dc66c9120e98af3e5f5bb" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a0ea40dd1a5912a7181c0632ee14769c5" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a1c07a3e5b105a6f7e0c0f0f38f030a4f" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a8a23b1971019ff8a05c305e58e6711b5" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a5b9efb58524423d67ba0fe5a9f385721" name="operations_type"><type>Operations</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1ade405169b4e0946e7a0ca8e682f9393c" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a5856048a02dcd6d2ff2218313b6d99cf" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a09e8e3d932e6dce221d0f727d7834a6a" name="initializing_stepper_type"><type>InitializingStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a6912e5c0b74aee6ebcb58bda0554767e" name="order_type"><type>unsigned short</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a7db6a423f6ec275c996d07f1593debe4" name="steps" specifiers="static"><type>const size_t</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1aa9b40249663606c1a7f555b892ad6e09" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1ada87fca67ac7253a5f14daed2443c658"><parameter name=""><paramtype>void</paramtype></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth">adams_bashforth</link> class. </purpose></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a71a9c33dbd243e245401f80e186a3d61"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><description><para>A copy of algebra is made and stored. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth">adams_bashforth</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a4acdbda778f5e18993450cf5c505e38c" name="order" cv="const"><type>order_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the order of the algorithm, which is equal to the number of steps+1. </purpose><description><para>
</para></description><returns><para>order of the method. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1ac37cf21ff1295b6ed98fa49d2490a1c2" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. After calling do_step the result is updated in x. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. It transforms the result in-place. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a7b340e00b5ee8f6c924a29e8257c810b" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as StateInOut. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1aea19de5b489ecf975d065976ad713840" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>const StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>The method performs one step with the stepper passed by Stepper. The state of the ODE is updated out-of-place. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1afd2c785a13b650f01c18213acd153f81" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be called with Boost.Range as StateOut. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1aab2fdf7e894e3647a66c4ee5fc54e1ad" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1adb0ed00348432e58414af9f5f01f647d" name="initialize"><type>void</type><template>
          <template-type-parameter name="ExplicitStepper"/>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="explicit_stepper"><paramtype>ExplicitStepper</paramtype><description><para>the stepper used to fill the buffer of previous step results </para></description></parameter><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateIn &amp;</paramtype><description><para>The initial state of the ODE which should be solved, updated after in this method. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The initial time, updated in this method. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>Initialized the stepper. Does Steps-1 steps with the explicit_stepper to fill the buffer. </purpose><description><para><note><para>The state x and time t are updated to the values after Steps-1 initial steps. </para>
</note>

</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1adf62823b52593ffe300bebb76d92d81f" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. After calling do_step the result is updated in x. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>Initialized the stepper. Does Steps-1 steps using the standard initializing stepper of the underlying <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth">adams_bashforth</link> stepper. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1af6f905a39ae068a13a95097dd299b6ed" name="reset"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Resets the internal buffers of the stepper. </purpose></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1afc52a261062a5c3e1c2db0356f41a334" name="do_step_impl1"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1ad707b1cfb4aacbc68bbcff07453eb4c3" name="do_step_impl2"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>StateIn const &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__bashforth__moulton_1a1a26fb7b8ec23f9eea3b9f74b2347fe0" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adams__moulton_8hpp" name="boost/numeric/odeint/stepper/adams_moulton.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton" name="adams_moulton"><template>
      <template-nontype-parameter name="Steps"><type>size_t</type></template-nontype-parameter>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1adc007207215502c0346f39f144aa6a47" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a49b776c7d159b7ca9014acf11fb0e7fc" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a31257679ab07dd57c1dabfc2954d9c3e" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a8dedc3a4f49db930a284cd38a5248a23" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a23c952e840f94f5f23672758568a7045" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1acff977ba31cc3feea5f3339f9b86ee7b" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1aa5991e2ef43086b275a5a8ac19496188" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ae51e2d56aa7c9ebfb5e627c69962f4f8" name="operations_type"><type>Operations</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1af3cd817196a216aa193569bd63630a7f" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a5b2c762d617fa3ad5eca631cd0fbf357" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1af838e53998a43318ce536d2a9da169ca" name="stepper_type"><type>adams_moulton&lt; Steps, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ae253647addf1f005111dfd21bf938f3b" name="order_type"><type>unsigned short</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a2ca1b671534033a8535d853dddfd346d" name="step_storage_type"><type><emphasis>unspecified</emphasis></type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a992469a1d8a988c577bac5404808cbb7" name="steps" specifiers="static"><type>const size_t</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a917b50d89667a6c7e2f6b86475a6d4cf" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a8fa5bb23ea94e68cd6f9851a251b7ebb"/>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a3770d04610fd6928b921065221846f41"><parameter name="algebra"><paramtype>algebra_type &amp;</paramtype></parameter></constructor>
<copy-assignment id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a7e6532960faa7e7ef94faf7fb51c5ab8"><type>adams_moulton &amp;</type><parameter name="stepper"><paramtype>const adams_moulton &amp;</paramtype></parameter></copy-assignment>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ac41c47c6518fc5a01aef4bfb0e26cb59" name="order" cv="const"><type>order_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ad71b7959abace9d5b9987ceae1064dcd" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="ABBuf"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="pred"><paramtype>StateIn const &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="buf"><paramtype>const ABBuf &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ab4634b854081aef66e9846a68852164e" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="ABBuf"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype></parameter><parameter name="pred"><paramtype>StateIn const &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="buf"><paramtype>const ABBuf &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1aeae221479e4e02898fedec29d1356e38" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="PredIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="ABBuf"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="pred"><paramtype>const PredIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="buf"><paramtype>const ABBuf &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a8949469e1919ef3fe9ab7c685098711f" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="PredIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="ABBuf"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="pred"><paramtype>const PredIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>const StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="buf"><paramtype>const ABBuf &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a28aab1ae62684d2c4c213b0086bc3353" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a5ce94e97daccfce6d694a31024d4b166" name="algebra"><type>algebra_type &amp;</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1aba91af6aa614bc6b36dd680c42c84c53" name="algebra" cv="const"><type>const algebra_type &amp;</type></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1a42b9354880885f11e43751fa1f9a483e" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="PredIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="ABBuf"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="pred"><paramtype>const PredIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="buf"><paramtype>const ABBuf &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adams__moulton_1ab144dbc7abae66828330749fa48909c7" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.adaptive__adams__bashforth__moulton_8hpp" name="boost/numeric/odeint/stepper/adaptive_adams_bashforth_moulton.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton" name="adaptive_adams_bashforth_moulton"><template>
      <template-nontype-parameter name="Steps"><type>size_t</type></template-nontype-parameter>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><inherit access="public">algebra_stepper_base&lt; typename algebra_dispatcher&lt; State &gt;::algebra_type, typename operations_dispatcher&lt; State &gt;::operations_type &gt;</inherit><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1acca140f26ff0d8fe7e3093b22b6b54ec" name="order_type"><type>unsigned short</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a16ef60f0d785305fd7d51256a42dd26c" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ab9ac3fa8e2cd592188cb7b599998a7d4" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a3daef9bf2e66f6402491b5f534b225da" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a46a40f180bee723a85bde2536d799163" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a53941b453cd8f47848770f7067e83397" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a7a2349080623c256ffb5ab59667ea21b" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a6f1ae215fac403f71cdd17cdcd07e6ea" name="algebra_stepper_base_type"><type>algebra_stepper_base&lt; Algebra, Operations &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ac95546e745c2bc74af3efe19e7864e1a" name="algebra_type"><type>algebra_stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ad8cdc68e80d697dc0691709c31136778" name="operations_type"><type>algebra_stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a6cb6f6708be60b0cff566417b7307b7b" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a2e3c3b3940bc0fc3f36e605274d690f9" name="stepper_category"><type>error_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a9d1dd0cf04db2b94adb1911295dfe727" name="coeff_type"><type><emphasis>unspecified</emphasis></type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a5e94c91fa8694dcf362cff94a102c2ac" name="stepper_type"><type>adaptive_adams_bashforth_moulton&lt; Steps, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1aade1f4b86dc0b544f9d87d0ad9270543" name="steps" specifiers="static"><type>const size_t</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a3c7c4ce28ca796a7f4d156d41d9e9873" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a7da096c6771d202e82cb2e9977a4b84b" name="order" cv="const"><type>order_type</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a17c0053467b749153013491ff9b3e9c0" name="stepper_order" cv="const"><type>order_type</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ad3ec2ec51e9f28809b8421aea17dc52d" name="error_order" cv="const"><type>order_type</type></method>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a754c5e8940b489d6430b599b7ea7c39c"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ae2935a84069835c9a1dfce3fc4989ed0" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a260f9c056254953273f1d22a16b64ed8" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ab149a4b49df70b681b68a2cf9cc2e247" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1abc01b2fdc6312df7017049269d24f99e" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1af5f99afc7b3bbcd551d8a7b04ffd1b26" name="initialize"><type>void</type><template>
          <template-type-parameter name="ExplicitStepper"/>
          <template-type-parameter name="System"/>
        </template><parameter name="stepper"><paramtype>ExplicitStepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a79a4c4bca6b58cdfb7f70753a8819acd" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ac1b94ea1b9b7bbab27d1211c4173c602" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter><parameter name="xerr"><paramtype>state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a4d9bdc4ba73a77ee5908ead56f248473" name="coeff" cv="const"><type>const coeff_type &amp;</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1ac795beb24eabce134f393b47a7f54958" name="coeff"><type>coeff_type &amp;</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a961ab51ea4568d76e8a59618e4319242" name="reset"><type>void</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a121246556e8a9113047b5191a980bf3a" name="dxdt" cv="const"><type>const deriv_type &amp;</type></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1aae10c8686defad1df4d7f4ce10df09bc" name="resize_dxdt_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1a9ac882fa0012e9bdbe02ddf86d4b5721" name="resize_xnew_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1adaptive__adams__bashforth__moulton_1afa5fb6d0a7650658d69f830c38e55ab6" name="resize_xerr_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.bulirsch__stoer_8hpp" name="boost/numeric/odeint/stepper/bulirsch_stoer.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer" name="bulirsch_stoer"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><purpose>The Bulirsch-Stoer algorithm. </purpose><description><para>The Bulirsch-Stoer is a controlled stepper that adjusts both step size and order of the method. The algorithm uses the modified midpoint and a polynomial extrapolation compute the solution.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a48231ee8be55ed1ee09cd6a614fe4aae" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1ab0ef804a5c9bc92b30b7cfd92edaa9fa" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a8998990b1b74d487d495b9bddcc23b0f" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a67365993e47086a7723e9e952e9bf790" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1abd150e774c5a1eb4124d7727ce5beb8f" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a539d999fe10ae5281dffacdaf6661787" name="operations_type"><type>Operations</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a8e18d021c15d1d720cdf5d6e1ca709e9" name="resizer_type"><type>Resizer</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a1f144f7be6b00d4d244e5fa929c287cf" name="m_k_max" specifiers="static"><type>const size_t</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a8114b6a29cd6c490c96eff4f279e9898"><parameter name="eps_abs"><paramtype>value_type</paramtype><default>1E-6</default><description><para>Absolute tolerance level. </para></description></parameter><parameter name="eps_rel"><paramtype>value_type</paramtype><default>1E-6</default><description><para>Relative tolerance level. </para></description></parameter><parameter name="factor_x"><paramtype>value_type</paramtype><default>1.0</default><description><para>Factor for the weight of the state. </para></description></parameter><parameter name="factor_dxdt"><paramtype>value_type</paramtype><default>1.0</default><description><para>Factor for the weight of the derivative. </para></description></parameter><parameter name="max_dt"><paramtype>time_type</paramtype><default>static_cast&lt; time_type &gt;(0)</default></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer">bulirsch_stoer</link> class, including initialization of the error bounds. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1adad5928ba0b3b8a43ac04aa111345b6e" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed. Also, the internal order of the stepper is adjusted if required.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a3f7e67df04525b3a7f2f4942b00e414d" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter><purpose>Second version to solve the forwarding problem, can be used with Boost.Range as StateInOut. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1ae8f468ab204651cc79ccd115cea8a967" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed. Also, the internal order of the stepper is adjusted if required.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a069f5cb34f2969ff5298adb2d039ce15" name="try_step"><type>boost::disable_if&lt; boost::is_same&lt; StateIn, time_type &gt;, controlled_step_result &gt;::type</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para><note><para>This method is disabled if state_type=time_type to avoid ambiguity.</para>
</note>
This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed. Also, the internal order of the stepper is adjusted if required.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a42059091d188bf4db87d728af1ed79c5" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed. Also, the internal order of the stepper is adjusted if required.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a1378dc1b38438f07db1b28a133c578d7" name="reset"><type>void</type><purpose>Resets the internal state of the stepper. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a6251c227301dffd028cb1ed042a9fa03" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a62fb659e36e05949b877e01049c57def" name="resize_m_dxdt"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a6d6a1a3a3867fe14adbd6f6f5a9d8da2" name="resize_m_xnew"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a565ede6ea0038fe0bfea508ea67068fe" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a7491cde3828aceb3d02ea0c3c53e2e0a" name="try_step_v1"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a581203bce129f0c7afcaea20ce879454" name="extrapolate"><type>void</type><template>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="k"><paramtype>size_t</paramtype></parameter><parameter name="table"><paramtype>state_table_type &amp;</paramtype></parameter><parameter name="coeff"><paramtype>const value_matrix &amp;</paramtype></parameter><parameter name="xest"><paramtype>StateInOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a867b8af7b1e573f517896b1a12ebac36" name="calc_h_opt" cv="const"><type>time_type</type><parameter name="h"><paramtype>time_type</paramtype></parameter><parameter name="error"><paramtype>value_type</paramtype></parameter><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a90fc0d5f243e6ede162d06bfc0d670ba" name="set_k_opt"><type>controlled_step_result</type><parameter name="k"><paramtype>size_t</paramtype></parameter><parameter name="work"><paramtype>const inv_time_vector &amp;</paramtype></parameter><parameter name="h_opt"><paramtype>const time_vector &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1aaaf9f699d3bbb486891ff2af6aee0f08" name="in_convergence_window" cv="const"><type>bool</type><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer_1a9b829da630f61302f4c84cca8016f5b5" name="should_reject" cv="const"><type>bool</type><parameter name="error"><paramtype>value_type</paramtype></parameter><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.bulirsch__stoer__dense__out_8hpp" name="boost/numeric/odeint/stepper/bulirsch_stoer_dense_out.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out" name="bulirsch_stoer_dense_out"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><purpose>The Bulirsch-Stoer algorithm. </purpose><description><para>The Bulirsch-Stoer is a controlled stepper that adjusts both step size and order of the method. The algorithm uses the modified midpoint and a polynomial extrapolation compute the solution. This class also provides dense output facility.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ae85e7dc8d30918b16e02d0b44a98d578" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a6dc4fbf8768df23cf52c94461afbc553" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a92c226ada5680251b25e6344626c69cf" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a5574201ec2d2afb559d98ccb6f37b538" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1aa20ca505be2b2cecf6bf3f731b387cdb" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a5d255f81b0690ab5dfd28b741abcd790" name="operations_type"><type>Operations</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1afc0a6e15458bb78f73cd1757a8fd827c" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a7e77062f91749ba3dbc3220dd7aed2c7" name="stepper_category"><type>dense_output_stepper_tag</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a4956f904874ec2166c1b7a4bff6e77ac" name="m_k_max" specifiers="static"><type>const size_t</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a31f8edfc61f66a2a7bcb8cbb66c2578f"><parameter name="eps_abs"><paramtype>value_type</paramtype><default>1E-6</default><description><para>Absolute tolerance level. </para></description></parameter><parameter name="eps_rel"><paramtype>value_type</paramtype><default>1E-6</default><description><para>Relative tolerance level. </para></description></parameter><parameter name="factor_x"><paramtype>value_type</paramtype><default>1.0</default><description><para>Factor for the weight of the state. </para></description></parameter><parameter name="factor_dxdt"><paramtype>value_type</paramtype><default>1.0</default><description><para>Factor for the weight of the derivative. </para></description></parameter><parameter name="max_dt"><paramtype>time_type</paramtype><default>static_cast&lt; time_type &gt;(0)</default></parameter><parameter name="control_interpolation"><paramtype>bool</paramtype><default>false</default><description><para>Set true to additionally control the error of the interpolation. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer">bulirsch_stoer</link> class, including initialization of the error bounds. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a9fe4b9844cc5a57f82638eb12c6ad2d7" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="DerivOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dxdt_new"><paramtype>DerivOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed. Also, the internal order of the stepper is adjusted if required.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ad6b9b0da52ec68aa6e92f8827e571224" name="initialize"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x0"><paramtype>const StateType &amp;</paramtype><description><para>The initial state. </para></description></parameter><parameter name="t0"><paramtype>const time_type &amp;</paramtype><description><para>The initial time. </para></description></parameter><parameter name="dt0"><paramtype>const time_type &amp;</paramtype><description><para>The initial time step. </para></description></parameter><purpose>Initializes the dense output stepper. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a27d892c5fcacf062364eb4b84526e66f" name="do_step"><type>std::pair&lt; time_type, time_type &gt;</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><purpose>Does one time step. This is the main method that should be used to integrate an ODE with this stepper. </purpose><description><para><note><para>initialize has to be called before using this method to set the initial conditions x,t and the stepsize. </para>
</note>


</para></description><returns><para>Pair with start and end time of the integration step. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a8f5d17e693603fe0520a3c319d38e801" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype><description><para>The time at which the solution should be calculated, has to be in the current time interval. </para></description></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype><description><para>The output variable where the result is written into. </para></description></parameter><purpose>Calculates the solution at an intermediate point within the last step. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1abc1965076c988659a0880e7a15d28b24" name="current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current state of the solution. </purpose><description><para>
</para></description><returns><para>The current state of the solution x(t). </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a5f480ea8952851cf6e27104d4e87286f" name="current_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current time of the solution. </purpose><description><para>
</para></description><returns><para>The current time of the solution t. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a49fc03e4fbbaa033e02a65df08e76ee4" name="previous_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the last state of the solution. </purpose><description><para>
</para></description><returns><para>The last state of the solution x(t-dt). </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ad67a744497c69a4aad9ff5ad260c35fa" name="previous_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the last time of the solution. </purpose><description><para>
</para></description><returns><para>The last time of the solution t-dt. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ad9689f4182172e87e4f21fd4ad748d86" name="current_time_step" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current step size. </purpose><description><para>
</para></description><returns><para>The current step size. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1abed6f03dc7036922f745f91df2f98460" name="reset"><type>void</type><purpose>Resets the internal state of the stepper. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a37ded7dc4d606014791c0d17b83a0290" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ae31198d992766902e360147f59122eb1" name="extrapolate"><type>void</type><template>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="StateVector"/>
        </template><parameter name="k"><paramtype>size_t</paramtype></parameter><parameter name="table"><paramtype>StateVector &amp;</paramtype></parameter><parameter name="coeff"><paramtype>const value_matrix &amp;</paramtype></parameter><parameter name="xest"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="order_start_index"><paramtype>size_t</paramtype><default>0</default></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a549037dc40424fa5f26262469e61195b" name="extrapolate_dense_out"><type>void</type><template>
          <template-type-parameter name="StateVector"/>
        </template><parameter name="k"><paramtype>size_t</paramtype></parameter><parameter name="table"><paramtype>StateVector &amp;</paramtype></parameter><parameter name="coeff"><paramtype>const value_matrix &amp;</paramtype></parameter><parameter name="order_start_index"><paramtype>size_t</paramtype><default>0</default></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a11e28c2bb18d04a74d9113e06c3a6ee9" name="calc_h_opt" cv="const"><type>time_type</type><parameter name="h"><paramtype>time_type</paramtype></parameter><parameter name="error"><paramtype>value_type</paramtype></parameter><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a44f9221cb988428e16704ba24ad82511" name="in_convergence_window" cv="const"><type>bool</type><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ade86713274d003a6cd38c3c53c4419c8" name="should_reject" cv="const"><type>bool</type><parameter name="error"><paramtype>value_type</paramtype></parameter><parameter name="k"><paramtype>size_t</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1aa75fa3543f4b844fae32c78d1e2d2127" name="prepare_dense_output"><type>value_type</type><template>
          <template-type-parameter name="StateIn1"/>
          <template-type-parameter name="DerivIn1"/>
          <template-type-parameter name="StateIn2"/>
          <template-type-parameter name="DerivIn2"/>
        </template><parameter name="k"><paramtype>int</paramtype></parameter><parameter name="x_start"><paramtype>const StateIn1 &amp;</paramtype></parameter><parameter name="dxdt_start"><paramtype>const DerivIn1 &amp;</paramtype></parameter><parameter name=""><paramtype>const StateIn2 &amp;</paramtype></parameter><parameter name=""><paramtype>const DerivIn2 &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ae81e83c0f24bd6fc8db9aaad970ce512" name="calculate_finite_difference"><type>void</type><template>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="j"><paramtype>size_t</paramtype></parameter><parameter name="kappa"><paramtype>size_t</paramtype></parameter><parameter name="fac"><paramtype>value_type</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a9a3d0fc03c5dca56e926143dc24bf4c2" name="do_interpolation" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a82e412e0f7bf82b759f08929827ab9db" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a275edd618e08b6e590bb328e786bacf9" name="get_current_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ac7e21e4bbe8e7ee6d56cc9da5cbd5037" name="get_current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a10f32257fc20b7c7526cfa5491fa7e1a" name="get_old_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1aaf0b803c1b38599c03a4ce8372751c43" name="get_old_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a5942b2b61a8707d94a493532a52fdb75" name="get_current_deriv"><type>deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a8e9c72ce803062da890f125dc2f9064f" name="get_current_deriv" cv="const"><type>const deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1ac3f6f71b54f0614e3b4dadd398c8a6ce" name="get_old_deriv"><type>deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a2fb323aace08ae142dbec6e4c8fbdea8" name="get_old_deriv" cv="const"><type>const deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer__dense__out_1a925d9392465f12868e480528ebf0aa51" name="toggle_current_state"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.controlled__adams__bashforth__moulton_8hpp" name="boost/numeric/odeint/stepper/controlled_adams_bashforth_moulton.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton" name="controlled_adams_bashforth_moulton"><template>
      <template-type-parameter name="ErrorStepper"/>
      <template-type-parameter name="StepAdjuster"><default><emphasis>unspecified</emphasis></default></template-type-parameter>
      <template-type-parameter name="OrderAdjuster"><default>default_order_adjuster&lt; ErrorStepper::order_value, typename ErrorStepper::state_type, typename ErrorStepper::value_type, typename ErrorStepper::algebra_type &gt;</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a7b153bfe359f3e591cbeb3521403b512" name="stepper_type"><type>ErrorStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a7a1115d9383ccda442ba8bff9e06d458" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a3568459f9e51231b51def8111b45c130" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a9c40109dcfd4e30df51576db8e43a89b" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a3ed494317ef027c0278d1d50d641f602" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1ac7af06d056aaa3dce86ae0ef2d8a6b4f" name="algebra_type"><type>stepper_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1adb5ee6049813ff36b873a568bb8b3c13" name="operations_type"><type>stepper_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1af8e65e21b505eae88a31c5e99100452e" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a43680e413bd7559959f6788b40f48196" name="step_adjuster_type"><type>StepAdjuster</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1adcefaf9c4d5548b8c156db269113d69b" name="order_adjuster_type"><type>OrderAdjuster</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1adff10791a9b3e1ea7fc31fc4331dc531" name="stepper_category"><type>controlled_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1aa9c59d620955c92c4d145da2f43f3209" name="wrapped_state_type"><type>stepper_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1ac1bd5d4751eaf242cb0bc2aa880441f6" name="wrapped_deriv_type"><type>stepper_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a24407ccdb4403a841628c7988d4e05ee" name="error_storage_type"><type>std::array&lt; wrapped_state_type, 4 &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a8ce6c04ba962acbadd6a951dcdddb693" name="coeff_type"><type>stepper_type::coeff_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a64ba65420270d045edb3dd2adfe7848d" name="controlled_stepper_type"><type>controlled_adams_bashforth_moulton&lt; ErrorStepper, StepAdjuster, OrderAdjuster, Resizer &gt;</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1ad2d0e8ea8250781af28b88b84eb40103" name="order_value" specifiers="static"><type>const stepper_type::order_type</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a42aeb23b9bc138c60ef8bef25a256e36"><parameter name="step_adjuster"><paramtype>step_adjuster_type</paramtype><default>step_adjuster_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a8a5fc85e23c831712991f70c2430c8f4" name="initialize"><type>void</type><template>
          <template-type-parameter name="ExplicitStepper"/>
          <template-type-parameter name="System"/>
        </template><parameter name="stepper"><paramtype>ExplicitStepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1aa89f8739966dc9a567a85f700f3285ff" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a32cdae0398e5f9b396597e46210b2a81" name="initialize_controlled"><type>void</type><template>
          <template-type-parameter name="ExplicitStepper"/>
          <template-type-parameter name="System"/>
        </template><parameter name="stepper"><paramtype>ExplicitStepper</paramtype></parameter><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a2f41f11783a69c4a132562b9648e30fc" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inOut"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a34cdc84319cfcfed16b18102c02ce422" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="out"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1ab707fb9243db47b3b32e02e0fb7e093f" name="reset"><type>void</type></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a7bb46d33de7575f8002b1b88477eced7" name="resize_dxdt_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1ab7ae29fda7e55d3cc500e57377730ec7" name="resize_xerr_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__adams__bashforth__moulton_1a8ef5809715bec9fe0adddb0882a3a9b1" name="resize_xnew_impl"><type>bool</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster" name="default_order_adjuster"><template>
      <template-nontype-parameter name="MaxOrder"><type>size_t</type></template-nontype-parameter>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1a609d055785a3a09889ac08d5a7e21473" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1a1bcfb38a2964bdd4d8b88ada57d7a414" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1a055df04f23b7787ef40f2d9feff48b90" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1a3731686008c99bae00689c991a2603e9" name="algebra_type"><type>Algebra</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1abfbc89aae0b561ce5eae2c29292e8075"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__order__adjuster_1a65a0a05ac7be8ae0204b02b30f4c6dec" name="adjust_order"><type>size_t</type><parameter name="order"><paramtype>size_t</paramtype></parameter><parameter name="init"><paramtype>size_t</paramtype></parameter><parameter name="xerr"><paramtype>std::array&lt; wrapped_state_type, 4 &gt; &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.controlled__runge__kutta_8hpp" name="boost/numeric/odeint/stepper/controlled_runge_kutta.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta" name="controlled_runge_kutta"><template>
      <template-type-parameter name="ErrorStepper"/>
      <template-type-parameter name="ErrorChecker"><default>default_error_checker&lt; typename ErrorStepper::value_type , typename ErrorStepper::algebra_type , typename ErrorStepper::operations_type &gt;</default></template-type-parameter>
      <template-type-parameter name="StepAdjuster"><default>default_step_adjuster&lt; typename ErrorStepper::value_type , typename ErrorStepper::time_type &gt;</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>typename ErrorStepper::resizer_type</default></template-type-parameter>
      <template-type-parameter name="ErrorStepperCategory"><default>typename ErrorStepper::stepper_category</default></template-type-parameter>
    </template></class><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205" name="controlled_runge_kutta"><template>
      <template-type-parameter name="ErrorStepper"><purpose><para>The stepper type with error estimation, has to fulfill the ErrorStepper concept. </para></purpose></template-type-parameter>
      <template-type-parameter name="ErrorChecker"><purpose><para>The error checker </para></purpose></template-type-parameter>
      <template-type-parameter name="StepAdjuster"/>
      <template-type-parameter name="Resizer"><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><specialization><template-arg>ErrorStepper</template-arg><template-arg>ErrorChecker</template-arg><template-arg>StepAdjuster</template-arg><template-arg>Resizer</template-arg><template-arg>explicit_error_stepper_fsal_tag</template-arg></specialization><purpose>Implements step size control for Runge-Kutta FSAL steppers with error estimation. </purpose><description><para>This class implements the step size control for FSAL Runge-Kutta steppers with error estimation.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a16a91628d39c4f767b841b50fb9d3f37" name="stepper_type"><type>ErrorStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1ad43bba96d76b1ebd7e1e29dd9fe660f7" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a5a074d6cd614c053c078e86b257b54c3" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a719a721459693f91b13431908913bc18" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a076ca95fb7faa5c91b8d8ec07eafe0e8" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1aa127aee2242b1b6e6bcb8314a15e7d7a" name="algebra_type"><type>stepper_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1aa64fd5f5ba0edf984e631e750d100dfe" name="operations_type"><type>stepper_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a93fde01dd13a114534f331e4aa16d7ae" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1aaf417681bcdd498a6d627575270593b7" name="error_checker_type"><type>ErrorChecker</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a4acb55d0b83c5efc9c662f1099e46e8f" name="step_adjuster_type"><type>StepAdjuster</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a76083635b7cee7e00584bd059758f0ed" name="stepper_category"><type>explicit_controlled_stepper_fsal_tag</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1aa4914ae7ceed0174c69b0dd656db9794"><parameter name="error_checker"><paramtype>const error_checker_type &amp;</paramtype><default>error_checker_type()</default><description><para>An instance of the error checker. </para></description></parameter><parameter name="step_adjuster"><paramtype>const step_adjuster_type &amp;</paramtype><default>step_adjuster_type()</default></parameter><parameter name="stepper"><paramtype>const stepper_type &amp;</paramtype><default>stepper_type()</default><description><para>An instance of the underlying stepper. </para></description></parameter><purpose>Constructs the controlled Runge-Kutta stepper. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a0f0326adddbfa72f45c3842ef5b34e9f" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1abc5c8caf0a2c16b816c4c3a4cc00f984" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. Can be a boost range. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. Solves the forwarding problem and allows for using boost range as state_type. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1ae33261792f0111258ab92090dd601be5" name="try_step"><type>boost::disable_if&lt; boost::is_same&lt; StateIn, time_type &gt;, controlled_step_result &gt;::type</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para><note><para>This method is disabled if state_type=time_type to avoid ambiguity.</para>
</note>
This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a0afbc5e77f1e9d97dc510546c0045048" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="dxdt"><paramtype>DerivInOut &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a30ab904f8305681bd60d4055da2c8961" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="DerivOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="dxdt_in"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dxdt_out"><paramtype>DerivOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1aeaca0defd69e47183657507b74c3a882" name="reset"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Resets the internal state of the underlying FSAL stepper. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a45fb1ef565277e284088d07016463d42" name="initialize"><type>void</type><template>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="deriv"><paramtype>const DerivIn &amp;</paramtype><description><para>The initial derivative of the ODE. </para></description></parameter><purpose>Initializes the internal state storing an internal copy of the derivative. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a81b641bcad0f0cafc4ce0b5bd5be5834" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>The initial state of the ODE which should be solved. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The initial time. </para></description></parameter><purpose>Initializes the internal state storing an internal copy of the derivative. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1adeafedcde37d0206cb5c695468a47d4f" name="is_initialized" cv="const"><type>bool</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns true if the stepper has been initialized, false otherwise. </purpose><description><para>
</para></description><returns><para>true, if the stepper has been initialized, false otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a6a559b5f09f44461ee23b413870c552c" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a172085cfd9a2a89dc9f9d19d424e703d" name="stepper"><type>stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the instance of the underlying stepper. </purpose><description><para>
</para></description><returns><para>The instance of the underlying stepper. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a2948501aa0c9f27a0153a502f0b75e26" name="stepper" cv="const"><type>const stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the instance of the underlying stepper. </purpose><description><para>
</para></description><returns><para>The instance of the underlying stepper. </para>
</returns></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a3fff4ea358f84ae900d38905fe00b2a5" name="resize_m_xerr_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a12967905757ce2e2aa1d7728c8c08ed7" name="resize_m_dxdt_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a0a1c168dd793602ce02efc9c60f90273" name="resize_m_dxdt_new_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a0af0c4ad14f2c2828b950c90404aaaeb" name="resize_m_xnew_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_checkefe86d846b91906257e891a676d38205_1a7454ab15b449a61fce380dfde03df7a9" name="try_step_v1"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
</method-group>
</class-specialization><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76" name="controlled_runge_kutta"><template>
      <template-type-parameter name="ErrorStepper"><purpose><para>The stepper type with error estimation, has to fulfill the ErrorStepper concept. </para></purpose></template-type-parameter>
      <template-type-parameter name="ErrorChecker"><purpose><para>The error checker </para></purpose></template-type-parameter>
      <template-type-parameter name="StepAdjuster"/>
      <template-type-parameter name="Resizer"><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><specialization><template-arg>ErrorStepper</template-arg><template-arg>ErrorChecker</template-arg><template-arg>StepAdjuster</template-arg><template-arg>Resizer</template-arg><template-arg>explicit_error_stepper_tag</template-arg></specialization><purpose>Implements step size control for Runge-Kutta steppers with error estimation. </purpose><description><para>This class implements the step size control for standard Runge-Kutta steppers with error estimation.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a7b0a759adf5d463a2b021d5fb395d3bf" name="stepper_type"><type>ErrorStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1ac36955adab67e8e1dfc15a3de53b7c68" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1ac9988fd8ad5fda09c9e5866dc0df2e6b" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a7d0b3d86b33c03a9f908f3d1f2f1a88f" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a50e64e1141f3388a569ac53e0e41ebbd" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a645bf5e7f6d559c397becec281d6d99b" name="algebra_type"><type>stepper_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a062cab04dfce2ae9c9b46a431e2ac8c4" name="operations_type"><type>stepper_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a8ff21c7ae99b387587d6838a3a04e31a" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a2357c01d2213d204afaf73800726b226" name="error_checker_type"><type>ErrorChecker</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a80505bc2e3cb713b9b84277053a438b8" name="step_adjuster_type"><type>StepAdjuster</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1af399f63d9e364d957577b5e0e88f5412" name="stepper_category"><type>explicit_controlled_stepper_tag</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a5eacb9218fa04e1adcf22f86e008d5ff"><parameter name="error_checker"><paramtype>const error_checker_type &amp;</paramtype><default>error_checker_type()</default><description><para>An instance of the error checker. </para></description></parameter><parameter name="step_adjuster"><paramtype>const step_adjuster_type &amp;</paramtype><default>step_adjuster_type()</default></parameter><parameter name="stepper"><paramtype>const stepper_type &amp;</paramtype><default>stepper_type()</default><description><para>An instance of the underlying stepper. </para></description></parameter><purpose>Constructs the controlled Runge-Kutta stepper. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a654814cbc5e515e5cb9bc27504fff86c" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is too large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a13b92575d5aac9fa1e3310f600e44f54" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. Can be a boost range. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. Solves the forwarding problem and allows for using boost range as state_type. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a2cfc4998c535513e880709f90b0f5183" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. Overwritten if the step is successful. </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1ac6db367c5028588f2e2208c8d55a6af6" name="try_step"><type>boost::disable_if&lt; boost::is_same&lt; StateIn, time_type &gt;, controlled_step_result &gt;::type</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para><note><para>This method is disabled if state_type=time_type to avoid ambiguity.</para>
</note>
This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a9e146e2ba2a5f1ac8e98efa78c973fe1" name="try_step"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of state. </para></description></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype><description><para>The value of the time. Updated if the step is successful. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>Used to store the result of the step. </para></description></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype><description><para>The step size. Updated. </para></description></parameter><purpose>Tries to perform one step. </purpose><description><para>This method tries to do one step with step size dt. If the error estimate is to large, the step is rejected and the method returns fail and the step size dt is reduced. If the error estimate is acceptably small, the step is performed, success is returned and dt might be increased to make the steps as large as possible. This method also updates t if a step is performed.</para><para>

</para></description><returns><para>success if the step was accepted, fail otherwise. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a897cd3c2ec1edd80e3f36771e8d37131" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a668d9b24bf26189f23f04eeab686014b" name="stepper"><type>stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the instance of the underlying stepper. </purpose><description><para>
</para></description><returns><para>The instance of the underlying stepper. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1af9f252ec6316ef7de2f45cdfa85b12b5" name="stepper" cv="const"><type>const stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the instance of the underlying stepper. </purpose><description><para>
</para></description><returns><para>The instance of the underlying stepper. </para>
</returns></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a66310c1f794b8837ef0e2619b531f02b" name="try_step_v1"><type>controlled_step_result</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1ac38dcf6ff1e5ea5e42f8c2bd1f866342" name="resize_m_xerr_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1abc64dc663fc776defe5d6bf090c042b3" name="resize_m_dxdt_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1controlled__runge__kutta_3_01_error_stepper_00_01_error_check592db9567ffc54f6c26dc0342435fa76_1a45999c76cdd67101fe32ba454203254f" name="resize_m_xnew_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class-specialization><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker" name="default_error_checker"><template>
      <template-type-parameter name="Value"><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><purpose><para>The operations type. </para></purpose></template-type-parameter>
    </template><purpose>The default error checker to be used with Runge-Kutta error steppers. </purpose><description><para>This class provides the default mechanism to compare the error estimates reported by Runge-Kutta error steppers with user defined error bounds. It is used by the controlled_runge_kutta steppers.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1acf97aa679ee23cde24171b3bdd62af79" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1a7729e8b005fa5a4cdc1e9a8c4f8c567b" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1a35be2998e7081a830212a297ed275f19" name="operations_type"><type>Operations</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1acd68bd4d6d79650241e0635a3b2bf619"><parameter name="eps_abs"><paramtype>value_type</paramtype><default>static_cast&lt; value_type &gt;(1.0e-6)</default></parameter><parameter name="eps_rel"><paramtype>value_type</paramtype><default>static_cast&lt; value_type &gt;(1.0e-6)</default></parameter><parameter name="a_x"><paramtype>value_type</paramtype><default>static_cast&lt; value_type &gt;(1)</default></parameter><parameter name="a_dxdt"><paramtype>value_type</paramtype><default>static_cast&lt; value_type &gt;(1)</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1ac80cf766da933c0b1dbbce62e5957fb0" name="error" cv="const"><type>value_type</type><template>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Deriv"/>
          <template-type-parameter name="Err"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="x_old"><paramtype>const State &amp;</paramtype></parameter><parameter name="dxdt_old"><paramtype>const Deriv &amp;</paramtype></parameter><parameter name="x_err"><paramtype>Err &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__error__checker_1a8fa47da590e948bd36c2c93ea9314cf2" name="error" cv="const"><type>value_type</type><template>
          <template-type-parameter name="State"/>
          <template-type-parameter name="Deriv"/>
          <template-type-parameter name="Err"/>
          <template-type-parameter name="Time"/>
        </template><parameter name="algebra"><paramtype>algebra_type &amp;</paramtype></parameter><parameter name="x_old"><paramtype>const State &amp;</paramtype></parameter><parameter name="dxdt_old"><paramtype>const Deriv &amp;</paramtype></parameter><parameter name="x_err"><paramtype>Err &amp;</paramtype></parameter><parameter name="dt"><paramtype>Time</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster" name="default_step_adjuster"><template>
      <template-type-parameter name="Value"/>
      <template-type-parameter name="Time"/>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1a4ffe43d1611e008a2a719c4c637f3571" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1a5b8ccfac583f9475305e082b1812dd32" name="value_type"><type>Value</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1a378b29b6f7e8814c3733794062e5036a"><parameter name="max_dt"><paramtype>const time_type</paramtype><default>static_cast&lt; time_type &gt;(0)</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1a17d80ce750144abbfd7d74bb22337986" name="decrease_step" cv="const"><type>time_type</type><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="error"><paramtype>const value_type</paramtype></parameter><parameter name="error_order"><paramtype>const int</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1ae130128bc97ec7971537d66350ebf5ea" name="increase_step" cv="const"><type>time_type</type><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="error"><paramtype>value_type</paramtype></parameter><parameter name="stepper_order"><paramtype>const int</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1ad462b47ff9a451f19fb91f75f743c1ce" name="check_step_size_limit"><type>bool</type><parameter name="dt"><paramtype>const time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1default__step__adjuster_1a9d17342e01b29216a591e61b85185bc2" name="get_max_dt"><type>time_type</type></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.controlled__step__result_8hpp" name="boost/numeric/odeint/stepper/controlled_step_result.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<enum id="doxygen.odeint_reference.controlled__step__result_8hpp_1ae001d7bcc6ae63bfe56ffae14d086d9d" name="controlled_step_result"><enumvalue id="doxygen.odeint_reference.controlled__step__result_8hpp_1ae001d7bcc6ae63bfe56ffae14d086d9daaeba711603e432c6a1d4cfca1f8959e2" name="success"><description><para>The trial step was successful, hence the state and the time have been advanced. </para></description></enumvalue><enumvalue id="doxygen.odeint_reference.controlled__step__result_8hpp_1ae001d7bcc6ae63bfe56ffae14d086d9da164af947090a6256d9e60d384aa888f4" name="fail"><description><para>The step was not successful and might possibly be repeated with a small step size. </para></description></enumvalue><purpose>Enum representing the return values of the controlled steppers. </purpose></enum>




















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.dense__output__runge__kutta_8hpp" name="boost/numeric/odeint/stepper/dense_output_runge_kutta.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta" name="dense_output_runge_kutta"><template>
      <template-type-parameter name="Stepper"/>
      <template-type-parameter name="StepperCategory"><default>typename Stepper::stepper_category</default></template-type-parameter>
    </template></class><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4" name="dense_output_runge_kutta"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type of the underlying algorithm. </para></purpose></template-type-parameter>
    </template><specialization><template-arg>Stepper</template-arg><template-arg>explicit_controlled_stepper_fsal_tag</template-arg></specialization><purpose>The class representing dense-output Runge-Kutta steppers with FSAL property. </purpose><description><para>The interface is the same as for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4">dense_output_runge_kutta&lt; Stepper , stepper_tag &gt;</link>. This class provides dense output functionality based on methods with step size controlled</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a18605fdba52707560132e5ac494e4928" name="controlled_stepper_type"><type>Stepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a9670879fd9174241075aca701146a13f" name="stepper_type"><type>controlled_stepper_type::stepper_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a85f2bb3ede4e49f4bc1bdd1ca6ff4f35" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a7277004a14b9f52d57dde8739fd88a8a" name="wrapped_state_type"><type>stepper_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a35faf7f312a69e8b2948e75c9acd8f32" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1aca4dfe3dc0085e70258b39351a2c4b2f" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1ae4e796d03d411595f62fd4ab7e1c8109" name="wrapped_deriv_type"><type>stepper_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1ad302e4b68fc870b6b911883d71554f81" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1ae33ff039a9959affa4a377668a78e729" name="algebra_type"><type>stepper_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1af9d954d4e4e4b400502015b70487ac10" name="operations_type"><type>stepper_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a811ae1e5d13f7d008d55238ba4416a7f" name="resizer_type"><type>stepper_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a9656bf81472d188cdac6683f5bf65ccd" name="stepper_category"><type>dense_output_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1ad6232a6c639d682ba446c989bff3e927" name="dense_output_stepper_type"><type>dense_output_runge_kutta&lt; Stepper &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a3ca178da99b5428aa8cbe15a6978d646"><parameter name="stepper"><paramtype>const controlled_stepper_type &amp;</paramtype><default>controlled_stepper_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a677a0142259e08ab9d06956993a4e46e" name="initialize"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x0"><paramtype>const StateType &amp;</paramtype></parameter><parameter name="t0"><paramtype>time_type</paramtype></parameter><parameter name="dt0"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a5031984c1a66b8124f846fd18679300e" name="do_step"><type>std::pair&lt; time_type, time_type &gt;</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1aab0b6cb9c05ddfc8d59e66448ac18e4b" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a1e8576b1d3cc548cab4d898271c99494" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>const StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a836d6a3b83e932baa21e13fda7badd52" name="resize"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a7020d3354c2200e42ca8067b1f7635d1" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a881c6b70733c6d9c7f1e793070406575" name="current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a9b7827f2a5b7a8d490d4df25a2216960" name="current_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1abc1f63f817ccdd6ccf2d7d86356ea33a" name="previous_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a9d97b96f69d4d5fb34b6707ea5af78f3" name="previous_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1ac9b43345a45f8babec4328a17c1b4688" name="current_time_step" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a572ac8a5f0ceda71ffeffb5f85a23490" name="get_current_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1aa1437f75b162a45869480c696caff606" name="get_current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1aa6c43552d5c5b35a7fbc60bb4b4d6a34" name="get_old_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a0333414b8162d25fc60b86d6bbeb1320" name="get_old_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a63afe514fd4b39be09352d4dac06df9c" name="get_current_deriv"><type>deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a28369532b478f2f5ac4f897c178b07df" name="get_current_deriv" cv="const"><type>const deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a131f5dd0f420c3c59c60a24e4dec6e19" name="get_old_deriv"><type>deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1aacd593ab6acd88f142ff094bb02adc79" name="get_old_deriv" cv="const"><type>const deriv_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01explicit__controlled__stepper__fsal__tag_01_4_1a8f5bbb03afa355b5242d1bd6ce9078e6" name="toggle_current_state"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
</class-specialization><class-specialization id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4" name="dense_output_runge_kutta"><template>
      <template-type-parameter name="Stepper"><purpose><para>The stepper type of the underlying algorithm. </para></purpose></template-type-parameter>
    </template><specialization><template-arg>Stepper</template-arg><template-arg>stepper_tag</template-arg></specialization><purpose>The class representing dense-output Runge-Kutta steppers. </purpose><description><para><note><para>In this stepper, the initialize method has to be called before using the do_step method.</para>
</note>
The dense-output functionality allows to interpolate the solution between subsequent integration points using intermediate results obtained during the computation. This version works based on a normal stepper without step-size control.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a4772b2c7e7522581c51d648acf7dfae2" name="stepper_type"><type>Stepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a11e32927af665204afd8c84e770b84a1" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1aa3b01a4474400e77a91c667923bc372b" name="wrapped_state_type"><type>stepper_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a824897a44decf4d1680751cd637fac94" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1afb213a60c3dc12a5b9912e8c2bf62d7b" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1aa74aeba88e1ea353d283a07bfbd81e4a" name="wrapped_deriv_type"><type>stepper_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a8c44cf53e325e951093c05c1c5db0cb9" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a139c83844e5539e0f157eed4a60b0728" name="algebra_type"><type>stepper_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1afa26845971f9b773e81c212f3502a0c2" name="operations_type"><type>stepper_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a907c045210f864759605b0f984b81434" name="resizer_type"><type>stepper_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a511166111b81ad59e7a70cba1f613546" name="stepper_category"><type>dense_output_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1ab7c7420ba0160387607b2fbd165d153d" name="dense_output_stepper_type"><type>dense_output_runge_kutta&lt; Stepper &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a0b833c205648c7b4cfedcaee9dfab4cf"><parameter name="stepper"><paramtype>const stepper_type &amp;</paramtype><default>stepper_type()</default><description><para>An instance of the underlying stepper. </para></description></parameter><purpose>Constructs the dense_output_runge_kutta class. An instance of the underlying stepper can be provided. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1aa9464d647c5eb0790ecd81f5b3b8369f" name="initialize"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x0"><paramtype>const StateType &amp;</paramtype><description><para>The initial state of the ODE which should be solved. </para></description></parameter><parameter name="t0"><paramtype>time_type</paramtype><description><para>The initial time, at which the step should be performed. </para></description></parameter><parameter name="dt0"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>Initializes the stepper. Has to be called before do_step can be used to set the initial conditions and the step size. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a05f42cbd8d212d6c88ed8d6f07ac1fd5" name="do_step"><type>std::pair&lt; time_type, time_type &gt;</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Simple System concept. </para></description></parameter><purpose>Does one time step. </purpose><description><para><note><para>initialize has to be called before using this method to set the initial conditions x,t and the stepsize. </para>
</note>


</para></description><returns><para>Pair with start and end time of the integration step. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a6c6b267cd8fb46d259a5c5d8f31e37f1" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype><description><para>The time at which the solution should be calculated, has to be in the current time interval. </para></description></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype><description><para>The output variable where the result is written into. </para></description></parameter><purpose>Calculates the solution at an intermediate point. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a5401fd1194cf1ef829a996b1ac05259b" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype><description><para>The time at which the solution should be calculated, has to be in the current time interval. </para></description></parameter><parameter name="x"><paramtype>const StateOut &amp;</paramtype><description><para>The output variable where the result is written into, can be a boost range. </para></description></parameter><purpose>Calculates the solution at an intermediate point. Solves the forwarding problem. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a553a02be6b1a45a062249b0b0fb8ffd6" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a73eef261addfc717da0e2d36dda82a45" name="current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current state of the solution. </purpose><description><para>
</para></description><returns><para>The current state of the solution x(t). </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a4eb784541816d81806d7f01e40b54b00" name="current_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current time of the solution. </purpose><description><para>
</para></description><returns><para>The current time of the solution t. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a2445df890d0a16443c38bdbf33d6eee9" name="previous_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the last state of the solution. </purpose><description><para>
</para></description><returns><para>The last state of the solution x(t-dt). </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1ab64c828c4ee6add71918ede8d549d352" name="previous_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the last time of the solution. </purpose><description><para>
</para></description><returns><para>The last time of the solution t-dt. </para>
</returns></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1ad4e2fd92f6222fe2fa6ed447aceec9fd" name="current_time_step" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Returns the current time step. </purpose><description><para>
</para></description><returns><para>dt. </para>
</returns></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1ace207dd273e372778244077254c8f0a3" name="get_current_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1af3b2f7037842cb13846e231fcebb1d83" name="get_current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1abd5aca69a2ee71593f414ca7593ce98c" name="get_old_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1ae01dcabe91086e0bc2ab744522e292be" name="get_old_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a4aea44b37017407f40ce8e6110539614" name="toggle_current_state"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1dense__output__runge__kutta_3_01_stepper_00_01stepper__tag_01_4_1a09e1c2cc7ce42c15c74605438dac41bf" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class-specialization>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.euler_8hpp" name="boost/numeric/odeint/stepper/euler.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler" name="euler"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_stepper_base</inherit><purpose>An implementation of the Euler method. </purpose><description><para>The Euler method is a very simply solver for ordinary differential equations. This method should not be used for real applications. It is only useful for demonstration purposes. Step size control is not provided but trivial continuous output is available.</para><para>This class derives from explicit_stepper_base and inherits its interface via CRTP (current recurring template pattern), see explicit_stepper_base</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a3b0985c8b32ac2ac0d4a23b5406fb20f" name="stepper_base_type"><type>explicit_stepper_base&lt; <classname>euler</classname>&lt; ... &gt;,... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1accb5330ffe022d568f070f3ed0b3e28f" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a5123898c619e85e4b2d1c495cae4cf79" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a2ed3e27903b4b36bff852b16579603b9" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1af4a74ef1991ae1ec30cb3d5b2aead610" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a89aa8e29f4e1991460b07c053a007769" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a01cb68d7d8c6d25a2ccc7a0c711af7bf" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a6b69ddd4ae3cb690eb4f37c5230589dc" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a5458f1d97d1c8e5f485d3589774cb316"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the euler class. This constructor can be used as a default constructor of the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1a3de9dca19908a54c5be558b0ea0d2b37" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name=""><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name=""><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out of place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1ad3375f29237ef6d2cce30ac2f5fd4bb6" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="StateIn1"/>
          <template-type-parameter name="StateIn2"/>
        </template><parameter name="x"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="old_state"><paramtype>const StateIn1 &amp;</paramtype></parameter><parameter name="t_old"><paramtype>time_type</paramtype></parameter><parameter name=""><paramtype>const StateIn2 &amp;</paramtype></parameter><parameter name=""><paramtype>time_type</paramtype></parameter><purpose>This method is used for continuous output and it calculates the state <computeroutput>x</computeroutput> at a time <computeroutput>t</computeroutput> from the knowledge of two states <computeroutput>old_state</computeroutput> and <computeroutput>current_state</computeroutput> at time points <computeroutput>t_old</computeroutput> and <computeroutput>t_new</computeroutput>. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1euler_1acf37b5eac561e18567c75e99a1d8abe4" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.explicit__error__generic__rk_8hpp" name="boost/numeric/odeint/stepper/explicit_error_generic_rk.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk" name="explicit_error_generic_rk"><template>
      <template-nontype-parameter name="StageCount"><type>size_t</type><purpose><para>The number of stages of the Runge-Kutta algorithm. </para></purpose></template-nontype-parameter>
      <template-nontype-parameter name="Order"><type>size_t</type><purpose><para>The order of a stepper if the stepper is used without error estimation. </para></purpose></template-nontype-parameter>
      <template-nontype-parameter name="StepperOrder"><type>size_t</type><purpose><para>The order of a step if the stepper is used with error estimation. Usually Order and StepperOrder have the same value. </para></purpose></template-nontype-parameter>
      <template-nontype-parameter name="ErrorOrder"><type>size_t</type><purpose><para>The order of the error step if the stepper is used with error estimation. </para></purpose></template-nontype-parameter>
      <template-type-parameter name="State"><purpose><para>The type representing the state of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The floating point type which is used in the computations. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The type representing the independent variable - the time - of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_error_stepper_base</inherit><purpose>A generic implementation of explicit Runge-Kutta algorithms with error estimation. This class is as a base class for all explicit Runge-Kutta steppers with error estimation. </purpose><description><para>This class implements the explicit Runge-Kutta algorithms with error estimation in a generic way. The Butcher tableau is passed to the stepper which constructs the stepper scheme with the help of a template-metaprogramming algorithm. ToDo : Add example!</para><para>This class derives explicit_error_stepper_base which provides the stepper interface.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1afb5204bb2c7c6d82df5cdd57e38d55ef" name="stepper_base_type"><type>explicit_stepper_base&lt; ... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1aefe6270fc74186a3edf92a6fd3566495" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ae7c78fa25c1562fb45abedb670cc42f0" name="wrapped_state_type"><type>stepper_base_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1aa485513d0e750611bfe6dd6a41a23731" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1adae622a828e5fed4889df276159d6f82" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1a78cb727cc3b072f431444e3c51af5098" name="wrapped_deriv_type"><type>stepper_base_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ac87385089dddb990ec7b770e0d1d624f" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ae15285a098de1fc771e5c51a5146e714" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1aa2ace1e3ec2dc73d5fffcbfe01d022c0" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ad9cc8a96190b3ba9276b0d96a1b67284" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1a3e2829c23189e1ea79e48b7007d7f035" name="rk_algorithm_type"><type><emphasis>unspecified</emphasis></type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1aa4e2d045e216065ee4277b3e5c33d846" name="coef_a_type"><type>rk_algorithm_type::coef_a_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1a863c1ee40e04209adc831cd09e3a1da1" name="coef_b_type"><type>rk_algorithm_type::coef_b_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1af1b061e4017143ca882cdebd8f69ffdc" name="coef_c_type"><type>rk_algorithm_type::coef_c_type</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1afc64f3c062d724c65258fd244d06a2bc" name="stage_count" specifiers="static"><type>const size_t</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1a8bdafcabcd5bb055ecc0743711997f99"><parameter name="a"><paramtype>const coef_a_type &amp;</paramtype><description><para>Triangular matrix of parameters b in the Butcher tableau. </para></description></parameter><parameter name="b"><paramtype>const coef_b_type &amp;</paramtype><description><para>Last row of the butcher tableau. </para></description></parameter><parameter name="b2"><paramtype>const coef_b_type &amp;</paramtype><description><para>Parameters for lower-order evaluation to estimate the error. </para></description></parameter><parameter name="c"><paramtype>const coef_c_type &amp;</paramtype><description><para>Parameters to calculate the time points in the Butcher tableau. </para></description></parameter><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the explicit_error_generik_rk class with the given parameters a, b, b2 and c. See examples section for details on the coefficients. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ac86c6628bcc93a80049196083b34c277" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype><description><para>The result of the error estimation is written in xerr. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Futhermore, an estimation of the error is stored in <computeroutput>xerr</computeroutput>. <computeroutput>do_step_impl</computeroutput> is used by explicit_error_stepper_base. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ae5d90aa3977cab76d936d2bad875031b" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1ab00b250d6ded00de22f2cc0054da663b" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk_1a38adb1578bc6eb9aef53521e2c9df6a5" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.explicit__generic__rk_8hpp" name="boost/numeric/odeint/stepper/explicit_generic_rk.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk" name="explicit_generic_rk"><template>
      <template-nontype-parameter name="StageCount"><type>size_t</type><purpose><para>The number of stages of the Runge-Kutta algorithm. </para></purpose></template-nontype-parameter>
      <template-nontype-parameter name="Order"><type>size_t</type><purpose><para>The order of the stepper. </para></purpose></template-nontype-parameter>
      <template-type-parameter name="State"><purpose><para>The type representing the state of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><purpose><para>The floating point type which is used in the computations. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"/>
      <template-type-parameter name="Time"><purpose><para>The type representing the independent variable - the time - of the ODE. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_stepper_base</inherit><purpose>A generic implementation of explicit Runge-Kutta algorithms. This class is as a base class for all explicit Runge-Kutta steppers. </purpose><description><para>This class implements the explicit Runge-Kutta algorithms without error estimation in a generic way. The Butcher tableau is passed to the stepper which constructs the stepper scheme with the help of a template-metaprogramming algorithm. ToDo : Add example!</para><para>This class derives explicit_stepper_base which provides the stepper interface.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a72a64f9b6189dd04c0e227933c7d4a33" name="stepper_base_type"><type>explicit_stepper_base&lt; ... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a4153d54f20cd2e28cbcb622ce5a2baa3" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1ae515e4b5a0885824e0758550c48624a0" name="wrapped_state_type"><type>stepper_base_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a7e0e75c338a437f96660ee006874bb4b" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a673661e5c6e3b8e6d12000ea5db75347" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a2e5b916ca8660eed273b6251c3b60c30" name="wrapped_deriv_type"><type>stepper_base_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a4d5004e689066f7ee8b485668fe2e315" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a98cc57d55dd7dc056eaec7fa355dc4fa" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a7528673b9c666bae99b5bfab9a50b64c" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1aa6046bb2316eadbb65ce4ab618e0569f" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1ab0c164cf1a2128f225019d2af6324994" name="rk_algorithm_type"><type><emphasis>unspecified</emphasis></type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a75b152dd7a80c989c2ef38526b02e73d" name="coef_a_type"><type>rk_algorithm_type::coef_a_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a65c9aae2b92e645e71cad998e671bdb9" name="coef_b_type"><type>rk_algorithm_type::coef_b_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a4cae9e7b9a7f423b3290e0906201fbb5" name="coef_c_type"><type>rk_algorithm_type::coef_c_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a4a11a736509b029f89fe8952deaa8405"><parameter name="a"><paramtype>const coef_a_type &amp;</paramtype><description><para>Triangular matrix of parameters b in the Butcher tableau. </para></description></parameter><parameter name="b"><paramtype>const coef_b_type &amp;</paramtype><description><para>Last row of the butcher tableau. </para></description></parameter><parameter name="c"><paramtype>const coef_c_type &amp;</paramtype><description><para>Parameters to calculate the time points in the Butcher tableau. </para></description></parameter><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk">explicit_generic_rk</link> class. See examples section for details on the coefficients. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a5d9c841e328c01189cda6bdf579893d2" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out of place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1a2f5f10b139cd373209ebdd9e5f4329b1" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk_1ac3a2ec0b30e2cf2d15f55bbf65fa232c" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.extrapolation__stepper_8hpp" name="boost/numeric/odeint/stepper/extrapolation_stepper.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper" name="extrapolation_stepper"><template>
      <template-nontype-parameter name="Order"><type>unsigned short</type></template-nontype-parameter>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><inherit access="public">explicit_error_stepper_base</inherit><purpose>Extrapolation stepper with configurable order, and error estimation. </purpose><description><para>The extrapolation stepper is a stepper with error estimation and configurable order. The order is given as template parameter and needs to be an <emphasis>odd</emphasis> number. The stepper is based on several executions of the modified midpoint method and a Richardson extrapolation. This is essentially the same technique as for <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1bulirsch__stoer">bulirsch_stoer</link>, but without the variable order.</para><para><note><para>The Order parameter has to be an even number greater 2. </para>
</note>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ae52ef751e79f32e9281397d8dd97128c" name="stepper_base_type"><type>explicit_error_stepper_base&lt; <classname>extrapolation_stepper</classname>&lt; ... &gt;,... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1af0a629b165eed38382fb2cfb8d06e8c9" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a6814ca6907d70c98f6f6b2325a43c51c" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ac49fc2ec2d193b2a989e82dd765063b5" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a8388451aa448810a0c347bfddfbe49a1" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a0655cd1a319d2d875eda60fd6fb70f39" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ad03d18e9bc2efe4e68f69b2790313dd1" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a95a07c3cdaa2ed6fb33cd216a76fd35d" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a3ceef83456481baf40e51ebaf634c30f" name="order_type"><type>unsigned short</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a4c0cd9e92472c8cccfa77fa8d8700dd3" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ab2e4f58f57357cc4267ef457711691ab" name="stepper_order_value" specifiers="static"><type>const order_type</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a6cb75a9470bf35f7087799294a511861" name="error_order_value" specifiers="static"><type>const order_type</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a73cae64583f3d1c519067d90ecc63d5b" name="m_k_max" specifiers="static"><type>const size_t</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a2987e9ce0c7468b9bc38b126892d3167"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a0f6306ccaebd107d6412c352480d0f62" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a8d2e75977c6d9e8454c9a0644116de87" name="do_step_impl_io"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inout"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a7cd7b16b0c3425f6670e8294f6b5d4e6" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1aad743328bfd6c7bda63b46182585b6c3" name="do_step_impl_io"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="inout"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ae913acf3e5270d6fc26b6116547bcf3f" name="do_step_dxdt_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
          <template-type-parameter name="DerivIn"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a14ee00e546bc6fc06aa1c592b192ac80" name="do_step_dxdt_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ae9cf75deb717e6476fe9780c9234063f" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1ad07c113da229ec7fce73e3cb0552d367" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a5387b423c675e8ab3b32a2a29f266954" name="resize_m_xout"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1extrapolation__stepper_1a5a506c64c6c31ab8a9a0d633f0f4625e" name="extrapolate"><type>void</type><template>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="k"><paramtype>size_t</paramtype></parameter><parameter name="table"><paramtype>state_table_type &amp;</paramtype></parameter><parameter name="coeff"><paramtype>const value_matrix &amp;</paramtype></parameter><parameter name="xest"><paramtype>StateInOut &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.generation_8hpp" name="boost/numeric/odeint/stepper/generation.hpp">
</header>
<header id="doxygen.odeint_reference.implicit__euler_8hpp" name="boost/numeric/odeint/stepper/implicit_euler.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler" name="implicit_euler"><template>
      <template-type-parameter name="ValueType"/>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a063d22e460d42738d08466b57bbea891" name="value_type"><type>ValueType</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1ac161f18476be96ab997f52182fc3f485" name="time_type"><type>value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1aebde4a3c63af7b77411899084cf54ecc" name="state_type"><type>boost::numeric::ublas::vector&lt; value_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1ab12780900ebeb3d7c46d753f8c7db7d6" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a281350b6e42e438f792dfad3b2efd07d" name="deriv_type"><type>state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1aec8905dcee92509f401b97a094c14e91" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a6a223ad79da332fc2a63e98809da6305" name="matrix_type"><type>boost::numeric::ublas::matrix&lt; value_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a0f9b3f3ddc60423130449ff953560eb2" name="wrapped_matrix_type"><type>state_wrapper&lt; matrix_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a5ca83fdb66524858ef1eb80a18cf4db0" name="pmatrix_type"><type>boost::numeric::ublas::permutation_matrix&lt; size_t &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1adb8af38e3599fabf12b554d7d7a82426" name="wrapped_pmatrix_type"><type>state_wrapper&lt; pmatrix_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1ab5bcdf80982ae662de268c56b667a89d" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a98e3909779b294d585c1bbd14642a65d" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1adf59e9969bb9174dbf062969230c042c" name="stepper_type"><type>implicit_euler&lt; ValueType, Resizer &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a1c10466f48fa6edffad8499068703e4e"><parameter name="epsilon"><paramtype>value_type</paramtype><default>1E-6</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1abbc0a5a692b9214b3cf40f491053ca57" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1ad60eb14906d815fe276170e5f1a8eb7e" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a0fe92a854c7ab3dddbcec455c5aa4f5b" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1implicit__euler_1a2c1b9be10816582c95f6976b60e03346" name="solve"><type>void</type><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="m"><paramtype>matrix_type &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.modified__midpoint_8hpp" name="boost/numeric/odeint/stepper/modified_midpoint.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint" name="modified_midpoint"><template>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><inherit access="public">explicit_stepper_base</inherit><description><para>Implementation of the modified midpoint method with a configurable number of intermediate steps. This class is used by the Bulirsch-Stoer algorithm and is not meant for direct usage. </para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a04413bccfb9c5d3f7a8067350a9e1b34" name="stepper_base_type"><type>explicit_stepper_base&lt; <classname>modified_midpoint</classname>&lt; State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;, 2, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ad23a1e783913322bd2516902bc8c1570" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a3c460ff70483e5b0f9f3e8f0826fecce" name="wrapped_state_type"><type>stepper_base_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ab25a131a9282aff8abef09f71e74bb3e" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ab29533c631f57914d21b2742bc743a07" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ab235dd0861084d76bdfaddd3003c0acd" name="wrapped_deriv_type"><type>stepper_base_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a0aa0c84bea761c6e06c9c19dcf78416d" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ab69bd9b21dcc13c28dfb64bdbb53e781" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a2e9f6e4db84d6ecc94895f2235f02bcd" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a09d6409c262e5f3f4065e10972fc30f9" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a21811b5c627db145626773affda7df57" name="stepper_type"><type>stepper_base_type::stepper_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1abd3fa138c8e4f8cab0f182a25f17c9fd"><parameter name="steps"><paramtype>unsigned short</paramtype><default>2</default></parameter><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a4c5c7a9ca7a8dc88313b3ba744faf888" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1ab707b052d73e2c40b5ec1a9f6daeafee" name="set_steps"><type>void</type><parameter name="steps"><paramtype>unsigned short</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a34d2dea99bd9153f14a383a209293b39" name="steps" cv="const"><type>unsigned short</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a1563569dbdbd4f55f7b5153e7eaefbe7" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint_1a6f78a21e0945bef6f9555348c9463fd9" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out" name="modified_midpoint_dense_out"><template>
      <template-type-parameter name="State"/>
      <template-type-parameter name="Value"><default>double</default></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><description><para>Implementation of the modified midpoint method with a configurable number of intermediate steps. This class is used by the dense output Bulirsch-Stoer algorithm and is not meant for direct usage. <note><para>This stepper is for internal use only and does not meet any stepper concept. </para>
</note>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1acb2b7b5e957b85b938fc857a63c4c0f0" name="state_type"><type>State</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1aff97c0d1cd25f02efd8aaf36c68c0c51" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a2b52f8860836a92de61c0feaf7175a72" name="deriv_type"><type>Deriv</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1af53ad1b5f6837b4b73ba0d5fb6cbbcaf" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a1b25ee76d6efeb6390d7e5b6dada3352" name="algebra_type"><type>Algebra</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1aa891a5994de2c15642291b38548d25cb" name="operations_type"><type>Operations</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1ac80990576a8e48c4e4922126d9bc7426" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1ab9fcb909078f16bce935286a6c8b5ad4" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a26953c339a040172955cf2c023152170" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a069ee22442d763ad142149ead43863d7" name="stepper_type"><type><classname>modified_midpoint_dense_out</classname>&lt; State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a71ececed4aa383a2d69f5229846ea45f" name="deriv_table_type"><type>std::vector&lt; wrapped_deriv_type &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a61b8aa96a996314496d07b386bbd34f1"><parameter name="steps"><paramtype>unsigned short</paramtype><default>2</default></parameter><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a0724d8a43f17d51d190c27ff691eefae" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="x_mp"><paramtype>state_type &amp;</paramtype></parameter><parameter name="derivs"><paramtype>deriv_table_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a82ffc7c88a512e9b7f93609d78251c8b" name="set_steps"><type>void</type><parameter name="steps"><paramtype>unsigned short</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a9bcade6b17ace2d33b1743c3f613b1ba" name="steps" cv="const"><type>unsigned short</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1a48135b140c4f749a69502a29bd87546b" name="resize"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1modified__midpoint__dense__out_1aadb68f250bd0e4e801a1369e75ec89cc" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.rosenbrock4_8hpp" name="boost/numeric/odeint/stepper/rosenbrock4.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients" name="default_rosenbrock_coefficients"><template>
      <template-type-parameter name="Value"/>
    </template><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a5e3dc0541074e22895d4a425a2320c48" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a8b7ac7a47894973eeb11f62d86576009" name="order_type"><type>unsigned short</type></typedef>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1aed1a96ee26ace0cca716639307bd6e18" name="gamma"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a2903bd8c5d84a55d8a6194772eeff5d9" name="d1"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1abd5247ecea93c835adc673e792b3fa19" name="d2"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a9c83ac4bdae49cf87d03615dd962e3da" name="d3"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a37072576e662eb715026d3c7cbd8fd76" name="d4"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1aed84c9387c2ac02d794f10e8297d185c" name="c2"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1acdbf94bcf199305a7eb9b0c86f497cdd" name="c3"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae3aca7f10ad21b88e41eed72e6b52d66" name="c4"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a6ea237b6bbd9b7b0ce4c49e19044191b" name="c21"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a94f50e9ccccbae927ec99f31ad494679" name="a21"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a13a471a6d4cd0c4134c2bd7092109e8b" name="c31"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a62e885f90e908442e1365884aff27777" name="c32"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1abefdb7da83b21dfbe2c76e0bf8cabf2f" name="a31"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a88f3f19240d45614c093b59a1287664c" name="a32"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a68f7a52132fb80294e263aa401e51ddd" name="c41"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae3d34b711b2ac7dc751d95749a4df75b" name="c42"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a8084261f0028f0d1c75d555f27f76ede" name="c43"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a0bde884ad1a6a9f249fead8634869b99" name="a41"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae5a0a0f58d739178108a768247341a6d" name="a42"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a48965237b53b02d854a6893d2b381f98" name="a43"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a89c8202ced6533e463167c3d8da28c20" name="c51"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a0b30d7a9b50dd2065c0b4cc5d20c4eda" name="c52"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a05094f30fb8f167a236245cd22382375" name="c53"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a6c69d03abe31862dd273c801dc901b7e" name="c54"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae04576c74588590e883bcd77dc502f96" name="a51"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a479c9cbe23fd0831c35cd5d37c91a3cd" name="a52"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1aad98ee95adce4d2f957e0e418c83b02e" name="a53"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a43ef80427466559dad6858a3d68bef37" name="a54"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1abeca76cac9298721d27f39a56f3d17ac" name="c61"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a88f90a01fca5557c0373d91d10fc7ea8" name="c62"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae3d88dcbdf4cfd10cf7c1a5708a19d63" name="c63"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a4bc0fc95483fe71ab67422c883c41b6e" name="c64"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a05882464e378b231e529705d5ecdfa6c" name="c65"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a0d49c8aa363c8c33a963ccf0acb0088a" name="d21"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a6e88dd1e017439483e2e8e58b3d4e740" name="d22"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1afe501c3918b2160efd73f96d07acc1c1" name="d23"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a9c5a30c2cb2bb7b3306520bd914daa98" name="d24"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ae1cfb715c164818e64383e188dbfdc29" name="d25"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1ac34100d0f7ab245340c9021499d48019" name="d31"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a1a65a861876261a7caa19828c5fa572b" name="d32"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a04f8aeefb097ea3a55b95a8dc44dd477" name="d33"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a00f4d2fd8c97b1f08448ce1507f98321" name="d34"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a4c27d0dd62eba012c0a6e1aea4544c0f" name="d35"><type>const value_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1aece8653e57c082273f398bf21322acb6" name="stepper_order" specifiers="static"><type>const order_type</type></data-member>
<data-member id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1a3a71aee6dfec4ba34ac2c1a30438652e" name="error_order" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1default__rosenbrock__coefficients_1aee65d5289d3b1cb0d6fb034d47c38933"><parameter name=""><paramtype>void</paramtype></parameter></constructor>
</method-group>
</struct><class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4" name="rosenbrock4"><template>
      <template-type-parameter name="Value"/>
      <template-type-parameter name="Coefficients"><default>default_rosenbrock_coefficients&lt; Value &gt;</default></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default></template-type-parameter>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a992d6e7b8256f71070980e3865fd4103" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a9f6d96e2fc8195eabb4a5d7b87156d14" name="state_type"><type>boost::numeric::ublas::vector&lt; value_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a1ad5110626ca3127dcfc16d1ac842056" name="deriv_type"><type>state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ab00fd90f96af57b0edd84ea051fa69b0" name="time_type"><type>value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ac3db39fddb518314277393593fd12a8c" name="matrix_type"><type>boost::numeric::ublas::matrix&lt; value_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ad5f5e715a42028c03436ee7a5099dcd0" name="pmatrix_type"><type>boost::numeric::ublas::permutation_matrix&lt; size_t &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a999a559d95d11e0c96ff696a54ce5737" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ad04ece5320fd0f3d6a34cbe36c1611fd" name="rosenbrock_coefficients"><type>Coefficients</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a83e12d34dd576ebbb1ef4e5ceecc35c7" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a06d50c9584edeb828d4d33c96fc47aaf" name="order_type"><type>unsigned short</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1afd970f778e372a8639c90d9260e9d60e" name="wrapped_state_type"><type>state_wrapper&lt; state_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1af045f8409e0c3d90f0b80408485a7b74" name="wrapped_deriv_type"><type>state_wrapper&lt; deriv_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a629c576f55c0e12625a6ef01d917bb4e" name="wrapped_matrix_type"><type>state_wrapper&lt; matrix_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a438daf1a05e5f4d0cf46b47e97f174a2" name="wrapped_pmatrix_type"><type>state_wrapper&lt; pmatrix_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a6d0ea7c226100a7da7999fbc91deeb1d" name="stepper_type"><type>rosenbrock4&lt; Value, Coefficients, Resizer &gt;</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ad548de63f58fc25f6341d269c54c7132" name="stepper_order" specifiers="static"><type>const order_type</type></data-member>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a69638615ee2f530bfe9c521c23902e1a" name="error_order" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1ab9d799d3915bae20cbc79fe3f728dd41"><parameter name=""><paramtype>void</paramtype></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a4d40ad62c1ea389ea37bf5f1dd52c27e" name="order" cv="const"><type>order_type</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a35b4857f6805dd3d60b2fc04f721f607" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="xout"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a288b987d4aba7a7667b21c18a3ada85b" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter><parameter name="xerr"><paramtype>state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a27e151833bf92dd6db41e3bbeec6e441" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="xout"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a0ba30956172ae69bfc001985ba0ad67f" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a3606620c1556de38b4940b4d1e272560" name="prepare_dense_output"><type>void</type></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a8f0637d3216355ab1a1da101fb23d000" name="calc_state"><type>void</type><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="x_old"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t_old"><paramtype>time_type</paramtype></parameter><parameter name="x_new"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t_new"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1af84bbf050b670b95417a72d1bc6f4305" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a7ce3dbe8828ce95b011ff842c408fd68" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4_1a96c5b9af2d602990db4b839129521b25" name="resize_x_err"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.rosenbrock4__controller_8hpp" name="boost/numeric/odeint/stepper/rosenbrock4_controller.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller" name="rosenbrock4_controller"><template>
      <template-type-parameter name="Stepper"/>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a97a0fce25eb739376b11be7a12766d4f" name="stepper_type"><type>Stepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a1cc4efc76101b90f6ae5e4f00873aea6" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a5c078959e45bc2c62c847d118388ccc3" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1ad6a13df5ecadd9907d3a9d19ba53459c" name="wrapped_state_type"><type>stepper_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1ab426484d0972d30e75cc7aca9d8c39ae" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1ab8e2d1d92e957f10d4c160fe7d48fca9" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1abe27c662d483daa8e2b46fa9aafb4245" name="wrapped_deriv_type"><type>stepper_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a95308bab640c056909a1e351ffdac777" name="resizer_type"><type>stepper_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1ad5074ffbbd33214afa1978db8985106b" name="stepper_category"><type>controlled_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a77f65e36587eafba1e429d1eaa73aeec" name="controller_type"><type>rosenbrock4_controller&lt; Stepper &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a4c802c720ff2efda6865e9d119d561a7"><parameter name="atol"><paramtype>value_type</paramtype><default>1.0e-6</default></parameter><parameter name="rtol"><paramtype>value_type</paramtype><default>1.0e-6</default></parameter><parameter name="stepper"><paramtype>const stepper_type &amp;</paramtype><default>stepper_type()</default></parameter></constructor>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1afe03b2ad46809c96f1dd8be1f32fc8ba"><parameter name="atol"><paramtype>value_type</paramtype></parameter><parameter name="rtol"><paramtype>value_type</paramtype></parameter><parameter name="max_dt"><paramtype>time_type</paramtype></parameter><parameter name="stepper"><paramtype>const stepper_type &amp;</paramtype><default>stepper_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a744f978a69d5ce637247916699fa63ff" name="error"><type>value_type</type><parameter name="x"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="xold"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="xerr"><paramtype>const state_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1af16f7e3f699f0a62732c5753c6ea9eeb" name="last_error" cv="const"><type>value_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a7dda2502bf085435360ca5da84b4135f" name="try_step"><type>boost::numeric::odeint::controlled_step_result</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a7f535ca6dbdee8369837a28cc43616ba" name="try_step"><type>boost::numeric::odeint::controlled_step_result</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="sys"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>const state_type &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type &amp;</paramtype></parameter><parameter name="xout"><paramtype>state_type &amp;</paramtype></parameter><parameter name="dt"><paramtype>time_type &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a1c23e625eed24094c9946742e033a729" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a329635aef4e7a0ad6f48b2792aefa755" name="stepper"><type>stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1ab65cf23f516a5508597a9e6e0b3661da" name="stepper" cv="const"><type>const stepper_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1aa26492fedb74be5a6360b559ed0e6e1a" name="resize_m_xerr"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__controller_1a3c684c890b02a269e6c3d8fb0261bb33" name="resize_m_xnew"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.rosenbrock4__dense__output_8hpp" name="boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output" name="rosenbrock4_dense_output"><template>
      <template-type-parameter name="ControlledStepper"/>
    </template><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1aade6a99520ee35c88d4efb951b0c0cd6" name="controlled_stepper_type"><type>ControlledStepper</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a01ea4dec6cd55ace1dab811832762156" name="unwrapped_controlled_stepper_type"><type>unwrap_reference&lt; controlled_stepper_type &gt;::type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a23ca877690b2c64e199ebc61031a53a8" name="stepper_type"><type>unwrapped_controlled_stepper_type::stepper_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a96c344b7427893effbbd9c9377278ab4" name="value_type"><type>stepper_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1ac4ec5be9fc231986221c087275a4e9f4" name="state_type"><type>stepper_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a364062f45e3c32f1723743e6714872d5" name="wrapped_state_type"><type>stepper_type::wrapped_state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1abe73003da27c010bece0dd0a47c3d5e9" name="time_type"><type>stepper_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1afe019ff8189f3dede4d024bc38836dc6" name="deriv_type"><type>stepper_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a7e2505778266bd3e90e05c1a9aca8d1d" name="wrapped_deriv_type"><type>stepper_type::wrapped_deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1ac9d4c576f5d0b7335baa522ea585161d" name="resizer_type"><type>stepper_type::resizer_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1ad19b86cbcbf3720959c58a4e61511d4a" name="stepper_category"><type>dense_output_stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a6e1108a8675eee1a7d1d9e2bc45b5749" name="dense_output_stepper_type"><type>rosenbrock4_dense_output&lt; ControlledStepper &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a090c810fd301abb7dd2e146c33d10bf4"><parameter name="stepper"><paramtype>const controlled_stepper_type &amp;</paramtype><default>controlled_stepper_type()</default></parameter></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a17b611301d792c46ab1371cc37a1fef0" name="initialize"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x0"><paramtype>const StateType &amp;</paramtype></parameter><parameter name="t0"><paramtype>time_type</paramtype></parameter><parameter name="dt0"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1aa9f5ffc757fe57adfc9796118c0dda63" name="do_step"><type>std::pair&lt; time_type, time_type &gt;</type><template>
          <template-type-parameter name="System"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a331369958201183edb23c4878051d7a9" name="calc_state"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1aad45271109fd60587a57fdb0914a7895" name="calc_state"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>const StateOut &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a3e89939027b3f3a8d9709f85660e7517" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a92d139c55d669e9c5bacb6cbf50b5610" name="current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1ad0092b5fcdf635fef23ea2e622efa1ea" name="current_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a93c302a1b5878049adbc7ac73ed287e5" name="previous_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1af220186fb04ffaa1dd50718343a2af91" name="previous_time" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a28fabb2481f7efd2c9dc0ee90e294e3b" name="current_time_step" cv="const"><type>time_type</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1af55ec14c5bc5be3ea7a1cef43538e873" name="get_current_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1aa2325315be2d4498a0491ec9a0b8430d" name="get_current_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a5526db05df07dd1b76393296a3653747" name="get_old_state"><type>state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a45fd7c658e693b0b4e60e06ec353df80" name="get_old_state" cv="const"><type>const state_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a3f2b8865f12f265f347c9157ee695a17" name="toggle_current_state"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1rosenbrock4__dense__output_1a6f48394ad0ee559e4773050d103d5bb6" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta4_8hpp" name="boost/numeric/odeint/stepper/runge_kutta4.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4" name="runge_kutta4"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">boost::numeric::odeint::explicit_generic_rk&lt; StageCount, Order, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</inherit><purpose>The classical Runge-Kutta stepper of fourth order. </purpose><description><para>The Runge-Kutta method of fourth order is one standard method for solving ordinary differential equations and is widely used, see also <ulink url="http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods">en.wikipedia.org/wiki/Runge-Kutta_methods</ulink> The method is explicit and fulfills the Stepper concept. Step size control or continuous output are not provided.</para><para>This class derives from explicit_stepper_base and inherits its interface via CRTP (current recurring template pattern). Furthermore, it derivs from <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk">explicit_generic_rk</link> which is a generic Runge-Kutta algorithm. For more details see explicit_stepper_base and <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__generic__rk">explicit_generic_rk</link>.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1ac427e6f0c884ceb3b543b53da8d690bd" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1aa1a37bf7a1ad75d80b3a3606533c0a54" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1ad4eb004b6fb6594258417082d413f9b1" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1a32bb86d44720f6a5ea1310784490d3e5" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1a52cddd8d455991d4dd29e02809a2a654" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1af4998c30314b0f0bbaea757e78e766ab" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1ab04a4430ee089d4ff05802df2e107d08" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4_1ac5e9a5ed687ba8a9e5985eb75c8fb57c"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4">runge_kutta4</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out of place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta4__classic_8hpp" name="boost/numeric/odeint/stepper/runge_kutta4_classic.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic" name="runge_kutta4_classic"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_stepper_base</inherit><purpose>The classical Runge-Kutta stepper of fourth order. </purpose><description><para>The Runge-Kutta method of fourth order is one standard method for solving ordinary differential equations and is widely used, see also <ulink url="http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods">en.wikipedia.org/wiki/Runge-Kutta_methods</ulink> The method is explicit and fulfills the Stepper concept. Step size control or continuous output are not provided. This class implements the method directly, hence the generic Runge-Kutta algorithm is not used.</para><para>This class derives from explicit_stepper_base and inherits its interface via CRTP (current recurring template pattern). For more details see explicit_stepper_base.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a939290b6c1458f02c93e7ec5a03b2593" name="stepper_base_type"><type>explicit_stepper_base&lt; <classname>runge_kutta4_classic</classname>&lt; ... &gt;,... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a6eaa9891d564ac2806c28120aca9210d" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a90c0ec864911ad0583174fe8fa81c70d" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1ab38aea0f1ccd5557a8051d98bd6e2433" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1abe43a7c2fb456b5a6bd47fa7e82602e8" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1ab324c05c521371f4a95d2870d7e73309" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a124d970e1809c575f5aad6f46b28a3d7" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a421509f1bb317ba6af164599468b6fe0" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1ad88ea529f5063f116ef00f5383844176"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic">runge_kutta4_classic</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1ab2645483c2b9306837b5b3941844c957" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out of place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a5b199746961a8a6f318c660541b747a6" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateType"/>
        </template><parameter name="x"><paramtype>const StateType &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta4__classic_1a2a6704d201c75e98701ecdf0f1e67a55" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta__cash__karp54_8hpp" name="boost/numeric/odeint/stepper/runge_kutta_cash_karp54.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54" name="runge_kutta_cash_karp54"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">boost::numeric::odeint::explicit_error_generic_rk&lt; StageCount, Order, StepperOrder, ErrorOrder, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</inherit><purpose>The Runge-Kutta Cash-Karp method. </purpose><description><para>The Runge-Kutta Cash-Karp method is one of the standard methods for solving ordinary differential equations, see <ulink url="http://en.wikipedia.org/wiki/Cash%E2%80%93Karp_methods">en.wikipedia.org/wiki/Cash-Karp_methods</ulink>. The method is explicit and fulfills the Error Stepper concept. Step size control is provided but continuous output is not available for this method.</para><para>This class derives from explicit_error_stepper_base and inherits its interface via CRTP (current recurring template pattern). Furthermore, it derivs from <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk">explicit_error_generic_rk</link> which is a generic Runge-Kutta algorithm with error estimation. For more details see explicit_error_stepper_base and <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk">explicit_error_generic_rk</link>.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a8ee1116d11b6d41ae6d7374cd008b8a8" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a28962825c25195c6cda92fcfab7775b7" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a7f6a92dd0651463cc8a5f093f461e211" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a149268f8b86e511a593e79df87034f9a" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a564abd47635dae70c9c5d3e4350c8d4d" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1adbe773b975fbfeab73caeddea14bba1b" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a0c9235156ef05db9071c84527566d83f" name="resizer_typ"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54_1a7d1b1a6c5e06eaac73240d1b4e205189"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54">runge_kutta_cash_karp54</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype><description><para>The result of the error estimation is written in xerr. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Futhermore, an estimation of the error is stored in <computeroutput>xerr</computeroutput>. <computeroutput>do_step_impl</computeroutput> is used by explicit_error_stepper_base. </purpose><description><para>
</para></description></method>
<method name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta__cash__karp54__classic_8hpp" name="boost/numeric/odeint/stepper/runge_kutta_cash_karp54_classic.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic" name="runge_kutta_cash_karp54_classic"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_error_stepper_base</inherit><purpose>The Runge-Kutta Cash-Karp method implemented without the generic Runge-Kutta algorithm. </purpose><description><para>The Runge-Kutta Cash-Karp method is one of the standard methods for solving ordinary differential equations, see <ulink url="http://en.wikipedia.org/wiki/Cash%E2%80%93Karp_method">en.wikipedia.org/wiki/Cash-Karp_method</ulink>. The method is explicit and fulfills the Error Stepper concept. Step size control is provided but continuous output is not available for this method.</para><para>This class derives from explicit_error_stepper_base and inherits its interface via CRTP (current recurring template pattern). This class implements the method directly, hence the generic Runge-Kutta algorithm is not used.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1acb41902a8598db5074b908224039dec1" name="stepper_base_type"><type>explicit_error_stepper_base&lt; <classname>runge_kutta_cash_karp54_classic</classname>&lt; ... &gt;,... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a5f532989a92abb21120b22927ec02dc4" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a8573ba4697c852356f6cd337934e8d74" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1ab7245b8929c541c3875124614067ec16" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a67df0c4eb9a3e597dc319a932a20252f" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1aa2a7c4f6568ac7d7935f1bfbfa5b3e91" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a8368355160fca030dceab3beefc6d570" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1ac207fb957bb1fe3f20963c0e3d04a0e8" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a84265915cf8695f187df23490f6cbe46"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic">runge_kutta_cash_karp54_classic</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1ae3b5b63bbf4942c4813b8246e5066b39" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype><description><para>The result of the error estimation is written in xerr. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. </purpose><description><para>The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Futhermore, an estimation of the error is stored in <computeroutput>xerr</computeroutput>. Access to this step functionality is provided by explicit_error_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly.</para><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a17cd724ad3a3b78fd4cab18114334fc7" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_error_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1ad6db6220791e2eaae7bbd734d118e74d" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__cash__karp54__classic_1a2ba16d8d31821990a4883daef4c8acd6" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta__dopri5_8hpp" name="boost/numeric/odeint/stepper/runge_kutta_dopri5.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5" name="runge_kutta_dopri5"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">explicit_error_stepper_fsal_base</inherit><purpose>The Runge-Kutta Dormand-Prince 5 method. </purpose><description><para>The Runge-Kutta Dormand-Prince 5 method is a very popular method for solving ODEs, see <ulink url=""/>. The method is explicit and fulfills the Error Stepper concept. Step size control is provided but continuous output is available which make this method favourable for many applications.</para><para>This class derives from explicit_error_stepper_fsal_base and inherits its interface via CRTP (current recurring template pattern). The method possesses the FSAL (first-same-as-last) property. See explicit_error_stepper_fsal_base for more details.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a224320467c48076b6e758d5ec5427a5a" name="stepper_base_type"><type>explicit_error_stepper_fsal_base&lt; <classname>runge_kutta_dopri5</classname>&lt; ... &gt;,... &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a9dc0dd4c985553be844ff373890fe492" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a8a6a7fc4fd2617028a2299d69c858f2f" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a1c22f970929a09031faf39f620e6a7d5" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a5f43825808b12cc21852dfea1897edd7" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1ad6be9d31e4b020c150a2c5ee57e2bd70" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a545875e259bd43c81feb1b8c1e2bb0b7" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a4bfc79b415da2a616a22c3c570e07e03" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a8b6dd2866eb442ffb9c0c9e770697db6"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5">runge_kutta_dopri5</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a2499073087cdde5981f362e8cd424c6b" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="DerivOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt_in"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. dxdt_in is not modified by this method </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dxdt_out"><paramtype>DerivOut &amp;</paramtype><description><para>The result of the new derivative at time t+dt. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt_in</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Furthermore, the derivative is update out-of-place, hence the input is assumed to be in <computeroutput>dxdt_in</computeroutput> and the output in <computeroutput>dxdt_out</computeroutput>. Access to this step functionality is provided by explicit_error_stepper_fsal_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a2b9a4baffa7c7c521d1b4a72c887f0ee" name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="DerivOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt_in"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. dxdt_in is not modified by this method </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dxdt_out"><paramtype>DerivOut &amp;</paramtype><description><para>The result of the new derivative at time t+dt. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype><description><para>An estimation of the error. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt_in</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Furthermore, the derivative is update out-of-place, hence the input is assumed to be in <computeroutput>dxdt_in</computeroutput> and the output in <computeroutput>dxdt_out</computeroutput>. Access to this step functionality is provided by explicit_error_stepper_fsal_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. An estimation of the error is calculated. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a24a001b493456ed9574aa22a6764ecbd" name="calc_state" cv="const"><type>void</type><template>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="StateIn1"/>
          <template-type-parameter name="DerivIn1"/>
          <template-type-parameter name="StateIn2"/>
          <template-type-parameter name="DerivIn2"/>
        </template><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="x"><paramtype>StateOut &amp;</paramtype></parameter><parameter name="x_old"><paramtype>const StateIn1 &amp;</paramtype></parameter><parameter name="deriv_old"><paramtype>const DerivIn1 &amp;</paramtype></parameter><parameter name="t_old"><paramtype>time_type</paramtype></parameter><parameter name=""><paramtype>const StateIn2 &amp;</paramtype></parameter><parameter name="deriv_new"><paramtype>const DerivIn2 &amp;</paramtype></parameter><parameter name="t_new"><paramtype>time_type</paramtype></parameter><purpose>This method is used for continuous output and it calculates the state <computeroutput>x</computeroutput> at a time <computeroutput>t</computeroutput> from the knowledge of two states <computeroutput>old_state</computeroutput> and <computeroutput>current_state</computeroutput> at time points <computeroutput>t_old</computeroutput> and <computeroutput>t_new</computeroutput>. It also uses internal variables to calculate the result. Hence this method must be called after two successful <computeroutput>do_step</computeroutput> calls. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a7c6f25efc08e3023af10937380d8e793" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a134b1c63a9fbba9d2c0ca9a657b931a0" name="resize_k_x_tmp_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__dopri5_1a90cd97b230417faf7cef7fc9efb9911a" name="resize_dxdt_tmp_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.runge__kutta__fehlberg78_8hpp" name="boost/numeric/odeint/stepper/runge_kutta_fehlberg78.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78" name="runge_kutta_fehlberg78"><template>
      <template-type-parameter name="State"><purpose><para>The state type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Deriv"><default>State</default><purpose><para>The type representing the time derivative of the state. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; State &gt;::algebra_type</default><purpose><para>The algebra type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; State &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">boost::numeric::odeint::explicit_error_generic_rk&lt; StageCount, Order, StepperOrder, ErrorOrder, State, Value, Deriv, Time, Algebra, Operations, Resizer &gt;</inherit><purpose>The Runge-Kutta Fehlberg 78 method. </purpose><description><para>The Runge-Kutta Fehlberg 78 method is a standard method for high-precision applications. The method is explicit and fulfills the Error Stepper concept. Step size control is provided but continuous output is not available for this method.</para><para>This class derives from explicit_error_stepper_base and inherits its interface via CRTP (current recurring template pattern). Furthermore, it derivs from <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk">explicit_error_generic_rk</link> which is a generic Runge-Kutta algorithm with error estimation. For more details see explicit_error_stepper_base and <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1explicit__error__generic__rk">explicit_error_generic_rk</link>.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a51d5dbbbea8414b00d949516a27ac51f" name="state_type"><type>stepper_base_type::state_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a2c47dc307365b530a0b941f75e0a78b1" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a60ee03ea955943c6705560417bcf3c44" name="deriv_type"><type>stepper_base_type::deriv_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a32756efbe4197280b76ce1d909d95af5" name="time_type"><type>stepper_base_type::time_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a72e2caecb517133f1ad21c0aa58e79a9" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a38a33034ca7bfcfadac26de114ef0566" name="operations_type"><type>stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1ae90503426e4010c54d129e7ecc7e74a2" name="resizer_type"><type>stepper_base_type::resizer_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1runge__kutta__fehlberg78_1a64cdde59e80aff6198d0081a6602c585"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the runge_kutta_cash_fehlberg78 class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
          <template-type-parameter name="Err"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><parameter name="xerr"><paramtype>Err &amp;</paramtype><description><para>The result of the error estimation is written in xerr. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Futhermore, an estimation of the error is stored in <computeroutput>xerr</computeroutput>. <computeroutput>do_step_impl</computeroutput> is used by explicit_error_stepper_base. </purpose><description><para>
</para></description></method>
<method name="do_step_impl"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateIn"/>
          <template-type-parameter name="DerivIn"/>
          <template-type-parameter name="StateOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ODE. It must fulfill the Simple System concept. </para></description></parameter><parameter name="in"><paramtype>const StateIn &amp;</paramtype><description><para>The state of the ODE which should be solved. in is not modified in this method </para></description></parameter><parameter name="dxdt"><paramtype>const DerivIn &amp;</paramtype><description><para>The derivative of x at t. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="out"><paramtype>StateOut &amp;</paramtype><description><para>The result of the step is written in out. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. The derivative <computeroutput>dxdt</computeroutput> of <computeroutput>in</computeroutput> at the time <computeroutput>t</computeroutput> is passed to the method. The result is updated out-of-place, hence the input is in <computeroutput>in</computeroutput> and the output in <computeroutput>out</computeroutput>. Access to this step functionality is provided by explicit_stepper_base and <computeroutput>do_step_impl</computeroutput> should not be called directly. </purpose><description><para>
</para></description></method>
<method name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.stepper__categories_8hpp" name="boost/numeric/odeint/stepper/stepper_categories.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag" name="base_tag"><template>
      <template-type-parameter name="tag"/>
    </template></struct><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01controlled__stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>controlled_stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01controlled__stepper__tag_01_4_1ab20e55844fd4ac65a85f1aa4e2d323e5" name="type"><type>controlled_stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01dense__output__stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>dense_output_stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01dense__output__stepper__tag_01_4_1a8f3b8101ffcbcff1e18d7e1feaedd2e6" name="type"><type>dense_output_stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01error__stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>error_stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01error__stepper__tag_01_4_1a5e017dd49b0a2f49dec3609eba919b8d" name="type"><type>stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__controlled__stepper__fsal__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>explicit_controlled_stepper_fsal_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__controlled__stepper__fsal__tag_01_4_1af5072d0c7fc765e357170b18e538e915" name="type"><type>controlled_stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__controlled__stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>explicit_controlled_stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__controlled__stepper__tag_01_4_1a7c423fcdd60635f53365bc3d862899c7" name="type"><type>controlled_stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__error__stepper__fsal__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>explicit_error_stepper_fsal_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__error__stepper__fsal__tag_01_4_1aa3cc7ef22cb6f3f3014882335d1cd64a" name="type"><type>stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__error__stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>explicit_error_stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01explicit__error__stepper__tag_01_4_1a8760ee32ef4b8c7b953df45ffb876d3d" name="type"><type>stepper_tag</type></typedef>
</struct-specialization><struct-specialization id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01stepper__tag_01_4" name="base_tag"><template>
    </template><specialization><template-arg>stepper_tag</template-arg></specialization><typedef id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1base__tag_3_01stepper__tag_01_4_1a9436d1d9082ec9e021dedb94c1179681" name="type"><type>stepper_tag</type></typedef>
</struct-specialization><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1controlled__stepper__tag" name="controlled_stepper_tag"/><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1dense__output__stepper__tag" name="dense_output_stepper_tag"/><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1error__stepper__tag" name="error_stepper_tag"><inherit access="public">boost::numeric::odeint::stepper_tag</inherit></struct><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1explicit__controlled__stepper__fsal__tag" name="explicit_controlled_stepper_fsal_tag"><inherit access="public">boost::numeric::odeint::controlled_stepper_tag</inherit></struct><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1explicit__controlled__stepper__tag" name="explicit_controlled_stepper_tag"><inherit access="public">boost::numeric::odeint::controlled_stepper_tag</inherit></struct><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1explicit__error__stepper__fsal__tag" name="explicit_error_stepper_fsal_tag"><inherit access="public">boost::numeric::odeint::error_stepper_tag</inherit></struct><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1explicit__error__stepper__tag" name="explicit_error_stepper_tag"><inherit access="public">boost::numeric::odeint::error_stepper_tag</inherit></struct><struct id="doxygen.odeint_reference.structboost_1_1numeric_1_1odeint_1_1stepper__tag" name="stepper_tag"/>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.symplectic__euler_8hpp" name="boost/numeric/odeint/stepper/symplectic_euler.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__euler" name="symplectic_euler"><template>
      <template-type-parameter name="Coor"><purpose><para>The type representing the coordinates q. </para></purpose></template-type-parameter>
      <template-type-parameter name="Momentum"><default>Coor</default><purpose><para>The type representing the coordinates p. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The basic value type. Should be something like float, double or a high-precision type. </para></purpose></template-type-parameter>
      <template-type-parameter name="CoorDeriv"><default>Coor</default><purpose><para>The type representing the time derivative of the coordinate dq/dt. </para></purpose></template-type-parameter>
      <template-type-parameter name="MomentumDeriv"><default>Coor</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The type representing the time t. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; Coor &gt;::algebra_type</default><purpose><para>The algebra. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; Coor &gt;::operations_type</default><purpose><para>The operations. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy. </para></purpose></template-type-parameter>
    </template><inherit access="public">symplectic_nystroem_stepper_base</inherit><purpose>Implementation of the symplectic Euler method. </purpose><description><para>The method is of first order and has one stage. It is described HERE.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__euler_1a1f4545b6ad1529a689e7bcd11ac304ff" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__euler_1af613fbbfd365fddbb547b87e3071e08a" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__euler_1a6093429c048ca400ede540a7543ec7b8"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__euler">symplectic_euler</link>. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.symplectic__rkn__sb3a__m4__mclachlan_8hpp" name="boost/numeric/odeint/stepper/symplectic_rkn_sb3a_m4_mclachlan.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__m4__mclachlan" name="symplectic_rkn_sb3a_m4_mclachlan"><template>
      <template-type-parameter name="Coor"><purpose><para>The type representing the coordinates q. </para></purpose></template-type-parameter>
      <template-type-parameter name="Momentum"><default>Coor</default><purpose><para>The type representing the coordinates p. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The basic value type. Should be something like float, double or a high-precision type. </para></purpose></template-type-parameter>
      <template-type-parameter name="CoorDeriv"><default>Coor</default><purpose><para>The type representing the time derivative of the coordinate dq/dt. </para></purpose></template-type-parameter>
      <template-type-parameter name="MomentumDeriv"><default>Coor</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The type representing the time t. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; Coor &gt;::algebra_type</default><purpose><para>The algebra. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; Coor &gt;::operations_type</default><purpose><para>The operations. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy. </para></purpose></template-type-parameter>
    </template><inherit access="public">symplectic_nystroem_stepper_base</inherit><purpose>Implementation of the symmetric B3A Runge-Kutta Nystroem method of fifth order. </purpose><description><para>The method is of fourth order and has five stages. It is described HERE. This method can be used with multiprecision types since the coefficients are defined analytically.</para><para>ToDo: add reference to paper.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__m4__mclachlan_1a901c2b01ca7e912e32637f36c46a4fb4" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__m4__mclachlan_1a4f307e09499dd33998da6807dd1101b1" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__m4__mclachlan_1af5197845951e886622bd6dee4d1522a6"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__m4__mclachlan">symplectic_rkn_sb3a_m4_mclachlan</link>. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.symplectic__rkn__sb3a__mclachlan_8hpp" name="boost/numeric/odeint/stepper/symplectic_rkn_sb3a_mclachlan.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__mclachlan" name="symplectic_rkn_sb3a_mclachlan"><template>
      <template-type-parameter name="Coor"><purpose><para>The type representing the coordinates q. </para></purpose></template-type-parameter>
      <template-type-parameter name="Momentum"><default>Coor</default><purpose><para>The type representing the coordinates p. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The basic value type. Should be something like float, double or a high-precision type. </para></purpose></template-type-parameter>
      <template-type-parameter name="CoorDeriv"><default>Coor</default><purpose><para>The type representing the time derivative of the coordinate dq/dt. </para></purpose></template-type-parameter>
      <template-type-parameter name="MomentumDeriv"><default>Coor</default></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The type representing the time t. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; Coor &gt;::algebra_type</default><purpose><para>The algebra. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; Coor &gt;::operations_type</default><purpose><para>The operations. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy. </para></purpose></template-type-parameter>
    </template><inherit access="public">symplectic_nystroem_stepper_base</inherit><purpose>Implement of the symmetric B3A method of Runge-Kutta-Nystroem method of sixth order. </purpose><description><para>The method is of fourth order and has six stages. It is described HERE. This method cannot be used with multiprecision types since the coefficients are not defined analytically.</para><para>ToDo Add reference to the paper.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__mclachlan_1a2f4c4523a7273466e87245d59d4c4f16" name="algebra_type"><type>stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__mclachlan_1a855c765b59cb9eb32614c242358d8a39" name="value_type"><type>stepper_base_type::value_type</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__mclachlan_1ace431be2e79cd7e016ab98d01dc158db"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored inside explicit_stepper_base. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1symplectic__rkn__sb3a__mclachlan">symplectic_rkn_sb3a_mclachlan</link>. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
<header id="doxygen.odeint_reference.velocity__verlet_8hpp" name="boost/numeric/odeint/stepper/velocity_verlet.hpp">
<namespace name="boost">
<namespace name="numeric">
<namespace name="odeint">
<class id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet" name="velocity_verlet"><template>
      <template-type-parameter name="Coor"><purpose><para>The type representing the coordinates. </para></purpose></template-type-parameter>
      <template-type-parameter name="Velocity"><default>Coor</default><purpose><para>The type representing the velocities. </para></purpose></template-type-parameter>
      <template-type-parameter name="Value"><default>double</default><purpose><para>The type value type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Acceleration"><default>Coor</default><purpose><para>The type representing the acceleration. </para></purpose></template-type-parameter>
      <template-type-parameter name="Time"><default>Value</default><purpose><para>The time representing the independent variable - the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="TimeSq"><default>Time</default><purpose><para>The time representing the square of the time. </para></purpose></template-type-parameter>
      <template-type-parameter name="Algebra"><default>typename algebra_dispatcher&lt; Coor &gt;::algebra_type</default><purpose><para>The algebra. </para></purpose></template-type-parameter>
      <template-type-parameter name="Operations"><default>typename operations_dispatcher&lt; Coor &gt;::operations_type</default><purpose><para>The operations type. </para></purpose></template-type-parameter>
      <template-type-parameter name="Resizer"><default>initially_resizer</default><purpose><para>The resizer policy type. </para></purpose></template-type-parameter>
    </template><inherit access="public">algebra_stepper_base&lt; typename algebra_dispatcher&lt; Coor &gt;::algebra_type, typename operations_dispatcher&lt; Coor &gt;::operations_type &gt;</inherit><purpose>The Velocity-Verlet algorithm. </purpose><description><para><ulink url="http://en.wikipedia.org/wiki/Verlet_integration">The Velocity-Verlet algorithm</ulink> is a method for simulation of molecular dynamics systems. It solves the ODE a=f(r,v',t) where r are the coordinates, v are the velocities and a are the accelerations, hence v = dr/dt, a=dv/dt.</para><para>
</para></description><typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a08e8ee6f2a06525d2f73dcf1a765587f" name="algebra_stepper_base_type"><type>algebra_stepper_base&lt; Algebra, Operations &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a6de81360bee9cfe899058e279aae654d" name="algebra_type"><type>algebra_stepper_base_type::algebra_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a1dd1bbb2baf0f6b50d209b50041f9702" name="operations_type"><type>algebra_stepper_base_type::operations_type</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a46aff487fb131dedc09564bc6f52c0a5" name="coor_type"><type>Coor</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a270c9ca6abdcb9c9f99c8fc576fcc0c8" name="velocity_type"><type>Velocity</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a0a998e2734ba677b2a90c2bb58eb1ec8" name="acceleration_type"><type>Acceleration</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a7a050aa06c38ac34e0ac583ca30b1a5d" name="state_type"><type>std::pair&lt; coor_type, velocity_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a749841f583a17b178b4f2d86baf84437" name="deriv_type"><type>std::pair&lt; velocity_type, acceleration_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a297a74cfc921fff2c037fdbd2cab1eb7" name="wrapped_acceleration_type"><type>state_wrapper&lt; acceleration_type &gt;</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a4f1a456114add78f09b490eb480f12ef" name="value_type"><type>Value</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a6e73a7216eb09b05fd20bdff43ae6fab" name="time_type"><type>Time</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a6832ca3d3e31fc40fb2a177fab37eae3" name="time_square_type"><type>TimeSq</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a5bebc8c5d80e64b42deb18b0eb475dfa" name="resizer_type"><type>Resizer</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a44c095862566b27addc77b3c77d958f5" name="stepper_category"><type>stepper_tag</type></typedef>
<typedef id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a3fae458e92fc36cafcb82ba1545bc929" name="order_type"><type>unsigned short</type></typedef>
<data-member id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1ac8eb5b8206e708c4b681871c40a7f22c" name="order_value" specifiers="static"><type>const order_type</type></data-member>
<method-group name="public member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1afeee91cd3f07126eee920ed26bc28ec9" name="order" cv="const"><type>order_type</type><parameter name=""><paramtype>void</paramtype></parameter><description><para>
</para></description><returns><para>Returns the order of the stepper. </para>
</returns></method>
<constructor id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a8711a6a0457c97b6ce68dad2edfadf75"><parameter name="algebra"><paramtype>const algebra_type &amp;</paramtype><default>algebra_type()</default><description><para>A copy of algebra is made and stored. </para></description></parameter><purpose>Constructs the <link linkend="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet">velocity_verlet</link> class. This constructor can be used as a default constructor if the algebra has a default constructor. </purpose><description><para>
</para></description></constructor>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a31d87eb1f5f37938b9737f38d86992e4" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Second Order System concept. </para></description></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. The state is pair of Coor and Velocity. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. It transforms the result in-place. </purpose><description><para>It can be used like <programlisting language="c++">pair&lt; coordinates , velocities &gt; state;
stepper.do_step( sys , x , t , dt );
</programlisting></para><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1ade515ec7d5ae19974af19ee59150b8a5" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Second Order System concept. </para></description></parameter><parameter name="x"><paramtype>const StateInOut &amp;</paramtype><description><para>The state of the ODE which should be solved. The state is pair of Coor and Velocity. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. It transforms the result in-place. </purpose><description><para>It can be used like <programlisting language="c++">pair&lt; coordinates , velocities &gt; state;
stepper.do_step( sys , x , t , dt );
</programlisting></para><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a15b6cebcb7bad47bb8b87905fb98c7ce" name="do_step"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="CoorIn"/>
          <template-type-parameter name="VelocityIn"/>
          <template-type-parameter name="AccelerationIn"/>
          <template-type-parameter name="CoorOut"/>
          <template-type-parameter name="VelocityOut"/>
          <template-type-parameter name="AccelerationOut"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function to solve, hence the r.h.s. of the ordinary differential equation. It must fulfill the Second Order System concept. </para></description></parameter><parameter name="qin"><paramtype>CoorIn const &amp;</paramtype></parameter><parameter name="pin"><paramtype>VelocityIn const &amp;</paramtype></parameter><parameter name="ain"><paramtype>AccelerationIn const &amp;</paramtype></parameter><parameter name="qout"><paramtype>CoorOut &amp;</paramtype></parameter><parameter name="pout"><paramtype>VelocityOut &amp;</paramtype></parameter><parameter name="aout"><paramtype>AccelerationOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The value of the time, at which the step should be performed. </para></description></parameter><parameter name="dt"><paramtype>time_type</paramtype><description><para>The step size. </para></description></parameter><purpose>This method performs one step. It transforms the result in-place. Additionally to the other methods the coordinates, velocities and accelerations are passed directly to do_step and they are transformed out-of-place. </purpose><description><para>It can be used like <programlisting language="c++">coordinates qin , qout;
velocities pin , pout;
accelerations ain, aout;
stepper.do_step( sys , qin , pin , ain , qout , pout , aout , t , dt );
</programlisting></para><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a3fefe8b671b04d8b7508b44cef662bb0" name="adjust_size"><type>void</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype><description><para>A state from which the size of the temporaries to be resized is deduced. </para></description></parameter><purpose>Adjust the size of all temporaries in the stepper manually. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a8ce6c3ac30bfb4acb28a556a93310211" name="reset"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter><purpose>Resets the internal state of this stepper. After calling this method it is safe to use all <computeroutput>do_step</computeroutput> method without explicitly initializing the stepper. </purpose></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a38ff6182cabd4acb3cfd2f978441b930" name="initialize"><type>void</type><template>
          <template-type-parameter name="AccelerationIn"/>
        </template><parameter name="ain"><paramtype>const AccelerationIn &amp;</paramtype></parameter><purpose>Initializes the internal state of the stepper. </purpose><description><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a2a10e4b259d4dfb22890618c979fa639" name="initialize"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="CoorIn"/>
          <template-type-parameter name="VelocityIn"/>
        </template><parameter name="system"><paramtype>System</paramtype><description><para>The system function for the next calls of <computeroutput>do_step</computeroutput>. </para></description></parameter><parameter name="qin"><paramtype>const CoorIn &amp;</paramtype><description><para>The current coordinates of the ODE. </para></description></parameter><parameter name="pin"><paramtype>const VelocityIn &amp;</paramtype><description><para>The current velocities of the ODE. </para></description></parameter><parameter name="t"><paramtype>time_type</paramtype><description><para>The current time of the ODE. </para></description></parameter><purpose>Initializes the internal state of the stepper. </purpose><description><para>This method is equivalent to <programlisting language="c++">Acceleration a;
system( qin , pin , a , t );
stepper.initialize( a );
</programlisting></para><para>
</para></description></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1adcc40e0724337b12ce2bac935770c2f4" name="is_initialized" cv="const"><type>bool</type><parameter name=""><paramtype>void</paramtype></parameter><description><para>
</para></description><returns><para>Returns if the stepper is initialized. </para>
</returns></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1ab5761f07fc2d2aaef3a7cff9b90b11b4" name="initialize_acc"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="CoorIn"/>
          <template-type-parameter name="VelocityIn"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="qin"><paramtype>const CoorIn &amp;</paramtype></parameter><parameter name="pin"><paramtype>const VelocityIn &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a3bcacb1a7cbbfea2943c76f37c37123a" name="do_step_v1"><type>void</type><template>
          <template-type-parameter name="System"/>
          <template-type-parameter name="StateInOut"/>
        </template><parameter name="system"><paramtype>System</paramtype></parameter><parameter name="x"><paramtype>StateInOut &amp;</paramtype></parameter><parameter name="t"><paramtype>time_type</paramtype></parameter><parameter name="dt"><paramtype>time_type</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a35920562b475fbfdbdde02bdeb5dbd44" name="resize_impl"><type>bool</type><template>
          <template-type-parameter name="StateIn"/>
        </template><parameter name="x"><paramtype>const StateIn &amp;</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a435aa66e10ba6144312aa08f19876503" name="get_current_acc"><type>acceleration_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a952e0e0e4954e0185d98810795dedcc7" name="get_current_acc" cv="const"><type>const acceleration_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1aa7731d7305898dab34f3665b66bb0496" name="get_old_acc"><type>acceleration_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1a63b165becd58d14291234ec7e8f86ea7" name="get_old_acc" cv="const"><type>const acceleration_type &amp;</type><parameter name=""><paramtype>void</paramtype></parameter></method>
<method id="doxygen.odeint_reference.classboost_1_1numeric_1_1odeint_1_1velocity__verlet_1ad8d70da12bf05e1ee7773719fdd36341" name="toggle_current_acc"><type>void</type><parameter name=""><paramtype>void</paramtype></parameter></method>
</method-group>
</class>



















































</namespace>
</namespace>
</namespace>
</header>
</library-reference>