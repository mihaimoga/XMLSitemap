[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1model_1_1polyhedral__surface.xml]
[section:model_polyhedral_surface model::polyhedral_surface]

'''<indexterm><primary>model</primary></indexterm><indexterm><primary>polyhedral_surface</primary></indexterm>'''
A Polyhedral Surface is a contiguous collection of polygons in 3-dimensional space, which share common boundary segments. The concepts and the constructors don't check if the boundary segments are common but is_valid() does. 

[heading Model of]
[link geometry.reference.concepts.concept_polyhedral_surface PolyhedralSurface Concept]

[heading Synopsis]
``template<typename Polygon, template< typename, typename > class Container, template< typename > class Allocator>
class model::polyhedral_surface
      : public std::vector< Polygon, std::allocator< Polygon > >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Polygon] [] [polygon type ]]
[[template< typename, typename > class Container] [std::vector] [container type for polygons, default std::vector ]]
[[template< typename > class Allocator] [std::allocator] [container-allocator-type, for the polygons]]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``polyhedral_surface()``

] [Default constructor, creating an empty polyhedron. ] [

]]
[[``polyhedral_surface(std::initializer_list< Polygon > l)``

] [\constructor_initialized_list{polyhedron} ] [[* std::initializer_list< Polygon >]: ['l]:  



]]
]

[heading Header]
Either

`#include <boost/geometry/geometries/geometries.hpp>`


Or

`#include <boost/geometry/geometries/polyhedral_surface.hpp>`

[include reference/geometries/polyhedral_surface.qbk]

[endsect]

