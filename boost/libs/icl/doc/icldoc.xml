<?xml version="1.0" standalone="yes"?>
<library-reference id="interval_container_library_reference"><title>Interval Container Library Reference</title><header id="doxygen.interval_container_library_reference.associative__element__container_8hpp" name="boost/icl/associative_element_container.hpp">
</header>
<header id="doxygen.interval_container_library_reference.associative__interval__container_8hpp" name="boost/icl/associative_interval_container.hpp">
</header>
<header id="doxygen.interval_container_library_reference.closed__interval_8hpp" name="boost/icl/closed_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval" name="closed_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1ac51d775e2ba4c1acf7276b3e5cdd8c78" name="type"><type><classname>closed_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1aa7dcd18ce45323e551d30073d397641d" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1acdb2fd8e908b0e0ec7b10b8ecbf26955" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a6666799e6de65e7f7003eeaf3dc061bf"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a9a62d3f025479fd23db2d5ffdb3f085b" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1ac9d31338c3413fa22061ebf919af2b01"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a9697aaf5db95bd0a8bdadd99c99fb643" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1af05aef6c1bb47a5ecc4c24fcb61cbba6" name="upper" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a73c10f48934ba3c5addc583d1a45d1a5" name="first" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1closed__interval_1a5dc28179f3b030a2360ce6342680f12b" name="last" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a219fe6077869d988a6781a8910012d21" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a28ecc6dedc965f38f4151e1405679371" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_closed</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1bbe39fb52e9aef4a5c0b5f8e61eb9e1" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac4fde446ab0643f4b05aa8715451550b" name="interval_type"><type><classname>icl::closed_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac74eaeeaaabdf169c0d37c9abd775468" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a9812fffee17d2b294547cb653319f1af" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1af244c91707f8a4a64301101e855c8af7" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab4f33fdcf4a40e298dda97bac9c1cf33" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1closed__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6665276bba5a570e5dea2fb64cf6f2ce" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1closed__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::closed_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1closed__interval_3_01DomainT_01_4_01_4_1a65ff518631650880a93dc8ba332fbd3c" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::closed_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.continuous__interval_8hpp" name="boost/icl/continuous_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval" name="continuous_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a1bd43b0bd0bf4eeb895430e81aa937f6" name="type"><type><classname>continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1abf1faef14008d1c61289c716f05b5e41" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a76637da57d8bee3337a83e26f285b9e8" name="bounded_domain_type"><type><classname>bounded_value</classname>&lt; DomainT &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a2bb6436417b7a544553534547cd778fb" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a119d9854decdfb6eabecac539df2de92"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a44eb0948540b76b84fbbf4132a7226a2" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1ac4a6a107887ae44813be7ede72a3c4e7"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype><default>interval_bounds::right_open()</default></parameter><parameter name=""><paramtype><classname>continuous_interval</classname> *</paramtype><default>0</default></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a701e03faccff5ad1b5806205300639d4" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1adcb1276aa7e3d2abb10d12e6650a97fc" name="upper" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a77e2ad72a3062d0b9b60c285b29d2567" name="bounds" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a5af93efafce4a3729ed24275d8ca77b7" name="open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a02644d54aa640633ce72d493f86823ce" name="right_open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1a0db6d486751fe422c2742db63d7bc6f9" name="left_open" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1continuous__interval_1aa4038363ffdbe7743e203eec0754bb73" name="closed" specifiers="static"><type><classname>continuous_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="dynamic_interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>boost::icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a50676bf11cd0ebc2fc2f1cffaeaa3d00" name="type"><type><classname>dynamic_interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab9d2fb4c2af08915e8c8b916f714473a" name="interval_type"><type><classname>boost::icl::continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a95eaa04339b2169f46e316cc4e9a3beb" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ad85c87f8ce1f60de8caf2bf0be535a27" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a8d1c504fb1929dd3576a2fdac43b9e42" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type</paramtype></parameter><parameter name="up"><paramtype>const domain_type</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab072179fae5acc71cbb0250a85f63766" name="construct_bounded" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a9ecd06c40d4155ff47e6cda925323da4" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a098b589d805636ade37bdb69f15bc2cd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::dynamic</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1acb91a937dfb126512afb64d12830f6a0" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6b1cfcddcee3f11b955d91c4b75bb152" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a489249c64444197d406034f6c5534ef1" name="interval_type"><type><classname>icl::continuous_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0ed10027ea6ac91c967d9b003fb8216c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac3a9049ce1e06e85b5c95b852e33f5ee" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7c1462b118c0084d18fe1cf00ab59b2c" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a69745f96bbadcbae59b96bc593618f48" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="is_continuous_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1af68618244567c354176f96f3334804a4" name="type"><type>is_continuous_interval&lt; <classname>continuous_interval</classname>&lt; DomainT, Compare &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous__interval_3_01continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1aa7110eebc3fda60293a693c0e5cf51d4" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1continuous__interval_3_01DomainT_00_01Compare_01_4_01_4_1a19b750ecd90a025c91f33f2bbd2c23b5" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1continuous__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::continuous_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1continuous__interval_3_01DomainT_01_4_01_4_1a5e8dd0f66a17b8720eadbbff93e96871" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::continuous_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.discrete__interval_8hpp" name="boost/icl/discrete_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval" name="discrete_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1af5a2268e1e44c48a0b52616ed2fc5623" name="type"><type><classname>discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a357378b4ee7a80e6ae60b74794d9dc57" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad57c58d044e3cac84991b608284ccfa9" name="bounded_domain_type"><type><classname>bounded_value</classname>&lt; DomainT &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ab13795f748004fd8f866e68dd7e4b09f" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1afaefda0b85d1cf0307fbdcf431b91041"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a95e4747b097a68d8b55be8194410b2c8" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a closed singleton interval <computeroutput>[val,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad947dc12c8a5342f4664eda78ed0fe60"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype><default>interval_bounds::right_open()</default></parameter><parameter name=""><paramtype><classname>discrete_interval</classname> *</paramtype><default>0</default></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1aa7d3838ba4fb03c48b7933491173274e" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad04f2ccd0bd520bce134922bc69bb134" name="upper" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ad1fb240d22bd5e5ea2117664aad8529c" name="bounds" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a8a62b297ea129044ff1319231c558f7e" name="open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a1966f8c1697e05d7e060b89aa16ea072" name="right_open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1ac7ff001d78347e99e9f9190fa12bf873" name="left_open" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1discrete__interval_1a5cbd485de2fb73848a62cdd5c63d9013" name="closed" specifiers="static"><type><classname>discrete_interval</classname></type><parameter name="lo"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="dynamic_interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>boost::icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a01562c5b01544da8caa4ffdeee7337b0" name="type"><type><classname>dynamic_interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0c0144dcce556ecca5bdf5970e2a9ed0" name="interval_type"><type><classname>boost::icl::discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a463fde937c1f246676e8faf29c98f0fc" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1af1991230e5c445aeb562113c7e9e1411" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac530487ca6e7e0c11407c92bb2f09569" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_3_01boost_1_1icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a8e21bfc42156cc727e6cae38d265e6e9" name="construct_bounded" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ab51100fe2c76a49b3f1848347ddbb6da" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae86b8b5c960ad4e81db0d371e3a82b5e" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::dynamic</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a94aa7e6cea962b8efa4c0d4c213cdf07" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a78d29ce18187916caac21a9a6ba9515d" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4b271be34e4eed72ce445f9b08135ef6" name="interval_type"><type><classname>icl::discrete_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ad576c84fecc647ab37546c2560766430" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4221e4ee43e5793118cfeee0c8cafd72" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4b2cdb24d2f83fcd4dc707c4552cf70f" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a559d7ef459741cc4bb25c0e2dd73fb96" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="is_discrete_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1a18548921ea593e6c207d4158ac18759d" name="type"><type>is_discrete_interval&lt; <classname>discrete_interval</classname>&lt; DomainT, Compare &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete__interval_3_01discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1af1ba234ce1bd54f52f04a05e1d9ce4ed" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>is_discrete&lt; DomainT &gt;::value</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1discrete__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac67a819980826cf30de32486a2cb9c13" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1discrete__interval_3_01DomainT_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
    </template><specialization><template-arg>icl::discrete_interval&lt; DomainT &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1discrete__interval_3_01DomainT_01_4_01_4_1a83c361c6304661394be1f942c7a907cc" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::discrete_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.dynamic__interval__traits_8hpp" name="boost/icl/dynamic_interval_traits.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits" name="dynamic_interval_traits"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1ab93ff2660e141edcba517fb1c498006b" name="domain_type"><type>Type::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1a16368fa1af8a47bc07b28d3bb988b0aa" name="domain_compare"><type>Type::domain_compare</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1aff05fdcf1ee92a2d678d38125091734e" name="construct" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bounds"><paramtype><classname>interval_bounds</classname></paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1dynamic__interval__traits_1a8124713954b1881511f497205c22aba2" name="construct_bounded" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const <classname>bounded_value</classname>&lt; domain_type &gt; &amp;</paramtype></parameter><parameter name="up"><paramtype>const <classname>bounded_value</classname>&lt; domain_type &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.functors_8hpp" name="boost/icl/functors.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion" name="conversion"><template>
      <template-type-parameter name="Combiner"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1aaffd846db73b351bf98e14c5e53d99cc" name="type"><type><classname>conversion</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1aaf7c60ee0932c7d2e7d6d221a7826e0b" name="argument_type"><type>remove_const&lt; typenameremove_reference&lt; typenameCombiner::first_argument_type &gt;::type &gt;::type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1a10de5ae7421e8926268c55571815dd28" name="proversion" specifiers="static"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1conversion_1aee4bc89ab0f18e12e47ccecf38690a50" name="inversion" specifiers="static"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine" name="identity_based_inplace_combine"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1a9df4820138e4e03e3da2cc4b079cff81" name="first_argument_type"><type>Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1a70dd557d83a162a4bf896371cb2a054f" name="second_argument_type"><type>const Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1aef7ad795b6fd3a035b545e40bd2e3880" name="result_type"><type>void</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__based__inplace__combine_1a9092fb2e8321cbfd76bf5eb040ffe497" name="identity_element" specifiers="static"><type>Type</type></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add" name="inplace_bit_add"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1aaa9f1b8308c5f5dac81eb17d876e4515" name="type"><type><classname>inplace_bit_add</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1a85fa6bdab068b0f89ea503351b89bf4e" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__add_1a7c58ef4527d90bfef488ed69a2f59f19" name="version" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and" name="inplace_bit_and"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and_1a48d1a982c1512b01913d3775a7af50d0" name="type"><type><classname>inplace_bit_and</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__and_1a0b54de21aa76b4cf1c8e44007c644880" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract" name="inplace_bit_subtract"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract_1a0c602d7f298717b43613fdb8d240806f" name="type"><type><classname>inplace_bit_subtract</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__subtract_1a74a140404318a5bb6c87019da7b7e38a" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor" name="inplace_bit_xor"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor_1ac0036033179f60799228edc960d5be99" name="type"><type><classname>inplace_bit_xor</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__bit__xor_1ad33c7178ca784205578317c6e8330d08" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret" name="inplace_caret"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret_1a449ca3b7278116a18db2901664369964" name="type"><type><classname>inplace_caret</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__caret_1aa4be116ce86b061e6588fb48e49c38a1" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase" name="inplace_erase"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase_1a1fac1d483db36e0a98f2031dc3038f67" name="type"><type><classname>inplace_erase</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erase_1a642684114298e670f00e2dca0a112380" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure" name="inplace_erasure"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1ae6f20c6cd204b6d63dc07c779cc99c47" name="type"><type><classname>inplace_erasure</classname>&lt; Type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1a89926c2e7af71f6c118aa8ba7c6bc652" name="base_type"><type><classname>identity_based_inplace_combine</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__erasure_1a03adeb90759434adcc9a67c0906e218d" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et" name="inplace_et"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et_1a37537d5a541f9e52abbbf9b68f511d15" name="type"><type><classname>inplace_et</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__et_1aa5d8335da7013e061b10a205a72b8f35" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity" name="inplace_identity"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity_1a71aaf5b1543d31b8e33b2dc391ab857c" name="type"><type><classname>inplace_identity</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__identity_1ab3e69b9f7ce57576dd54648f07def6d5" name="operator()" cv="const"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert" name="inplace_insert"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert_1ac8b4eb4fa758135be3bc9655135ad2a8" name="type"><type><classname>inplace_insert</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__insert_1a089a2b5b15ef7e8cdfe008f2b03aad32" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max" name="inplace_max"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max_1a0d6028002e7d575d1aa7ff57764fead5" name="type"><type><classname>inplace_max</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__max_1a44c327c714063d62a0d166da4905ad40" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min" name="inplace_min"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min_1af19cdd15a5916cec273ce93760096a5a" name="type"><type><classname>inplace_min</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__min_1a553398034b937d93d92f2f3272ba1cd9" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus" name="inplace_minus"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus_1a3a148df39051f5b30430eab5e2a107a3" name="type"><type><classname>inplace_minus</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__minus_1a23af80030e38eb60df35764513c3e925" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus" name="inplace_plus"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a08d57828d6ad33869fe1c7785c8bf2f8" name="type"><type><classname>inplace_plus</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a05f6dc21b327defb2fb6c8b9700ad0a5" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__plus_1a488e598722f13553d3126969a849a270" name="version" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash" name="inplace_slash"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash_1ad4c735584b2692dbe4298caa52349f98" name="type"><type><classname>inplace_slash</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__slash_1a6749b1594a5481cbebc1b90dd0427335" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star" name="inplace_star"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star_1a8f5c4f11af93004e5fa83ec2fdb894e9" name="type"><type><classname>inplace_star</classname>&lt; Type &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inplace__star_1a6667f56b76933aaf67a9c96b7faaff26" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section" name="inter_section"><template>
      <template-type-parameter name="Type"/>
    </template><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section_1a48c2e91f751ad9c37b106e705cb8bc9a" name="type"><type>boost::mpl::if_&lt; has_set_semantics&lt; Type &gt;, <classname>icl::inplace_et</classname>&lt; Type &gt;, <classname>icl::inplace_plus</classname>&lt; Type &gt; &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inter__section_1a3f1e2b98c708ced7df0520e9af1e0a17" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse" name="inverse"><template>
      <template-type-parameter name="Functor"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_1a64bd74d10aeb35e8bced242cd52ea8f6" name="argument_type"><type>remove_reference&lt; typenameFunctor::first_argument_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_1a058d3c02b60b4eb3c570dc2568f51924" name="type"><type><classname>icl::inplace_erasure</classname>&lt; argument_type &gt;</type></typedef>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__add_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_add&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__add_3_01Type_01_4_01_4_1aeda5488069331c38374e1c50cc76aad8" name="type"><type><classname>icl::inplace_bit_subtract</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__and_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_and&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__and_3_01Type_01_4_01_4_1a4b204c0f91c60193c38df9b5c0a027f2" name="type"><type><classname>icl::inplace_bit_xor</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_subtract&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1aea9f61b1ac5672b363b6d6867485ab8b" name="type"><type><classname>icl::inplace_bit_add</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__xor_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_xor&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__bit__xor_3_01Type_01_4_01_4_1ae67ef3e89988f6b9672316c8da7f4238" name="type"><type><classname>icl::inplace_bit_and</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__caret_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_caret&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__caret_3_01Type_01_4_01_4_1a7e644b975a7be4861be94b279f5693b2" name="type"><type><classname>icl::inplace_et</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__et_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_et&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__et_3_01Type_01_4_01_4_1ae8a3bb1c41dbc0cb60bb79f89292bb59" name="type"><type><classname>icl::inplace_caret</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__identity_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_identity&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__identity_3_01Type_01_4_01_4_1a9608532193bc4608e4faf035ca763e65" name="type"><type><classname>icl::inplace_erasure</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__max_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_max&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__max_3_01Type_01_4_01_4_1abf8176b228bbff4725067de32d5b4f80" name="type"><type><classname>icl::inplace_min</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__min_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_min&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__min_3_01Type_01_4_01_4_1a57a4d03d1eb3321c6207da719b7aa1b9" name="type"><type><classname>icl::inplace_max</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a4851ed4479b86a8c0b33cecad0079982" name="type"><type><classname>icl::inplace_plus</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__plus_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_plus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__plus_3_01Type_01_4_01_4_1a8b9c6e4aafcc841192a042a017367082" name="type"><type><classname>icl::inplace_minus</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__slash_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_slash&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__slash_3_01Type_01_4_01_4_1a570a55c52bf4ff8011b677da96159028" name="type"><type><classname>icl::inplace_star</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__star_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_star&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inplace__star_3_01Type_01_4_01_4_1a733727a64fa61c4b54f4ceefeffc7a9f" name="type"><type><classname>icl::inplace_slash</classname>&lt; Type &gt;</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4" name="inverse"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inter_section&lt; Type &gt;</template-arg></specialization><inherit access="public">boost::icl::identity_based_inplace_combine&lt; Type &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4_1af571b2bd1092e84e86cca27f0b5d89b8" name="type"><type>boost::mpl::if_&lt; has_set_semantics&lt; Type &gt;, <classname>icl::inplace_caret</classname>&lt; Type &gt;, <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1inverse_3_01icl_1_1inter__section_3_01Type_01_4_01_4_1ab06009a5705cef40d449073e9ca8b333" name="operator()" cv="const"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative" name="is_negative"><template>
      <template-type-parameter name="Functor"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_1a5d4a11b66f950c9111482ee02933327d" name="type"><type><classname>is_negative</classname>&lt; Functor &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_1a7bc88a9d708959f598c2b210918994bc" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>false</default></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4" name="is_negative"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_bit_subtract&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1ac227d2638e64b68843392e1d05fe2a75" name="type"><type><classname>is_negative</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__bit__subtract_3_01Type_01_4_01_4_1a161d61298f1c96a6b742f957ea739296" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="is_negative"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a7802ec9eab34b0334c9d29475e33dc63" name="type"><type><classname>is_negative</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__negative_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a917e2870af3148ec72fc4188129c9881" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine" name="unit_element_based_inplace_combine"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a089b175a2dbf8d7169d22911104a1206" name="first_argument_type"><type>Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a3475b470bbe3550ddd39b67d25a1aa90" name="second_argument_type"><type>const Type &amp;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1a7eb3c45711a30a94ea9af1f2c1d93af9" name="result_type"><type>void</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1unit__element__based__inplace__combine_1ac01b39af79237c45828bd10b8e8953cf" name="identity_element" specifiers="static"><type>Type</type></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version" name="version"><template>
      <template-type-parameter name="Combiner"/>
    </template><inherit access="public">boost::icl::conversion&lt; Combiner &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1a6639ff3a71d0ca5206f1a175b6e3f437" name="type"><type><classname>version</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1aee1ee356c48885d67202e03b86a91c97" name="base_type"><type><classname>conversion</classname>&lt; Combiner &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1ac0964d492eee880f44b1f43259871449" name="argument_type"><type>base_type::argument_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_1aeef3b602469a3f73acc201daa885053c" name="operator()"><type>argument_type</type><parameter name="value"><paramtype>const argument_type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01double_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; double &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01double_01_4_01_4_1ab6d86c8864931a1eb5f7150de38ed182" name="operator()"><type>double</type><parameter name="val"><paramtype>double</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01float_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; float &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01float_01_4_01_4_1a7782cee3cf0507c350f5b67b5bc4ffb0" name="operator()"><type>float</type><parameter name="val"><paramtype>float</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01int_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; int &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01int_01_4_01_4_1aa74250df0ecf76fb72a083e27f3a2638" name="operator()"><type>int</type><parameter name="val"><paramtype>int</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01_4_01_4_1ac6a808ebac2c639aff314c245a0e510c" name="operator()"><type>long</type><parameter name="val"><paramtype>long</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01double_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long double &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01double_01_4_01_4_1a182034764dea5858db33f406eb6ce84c" name="operator()"><type>long double</type><parameter name="val"><paramtype>long double</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01long_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; long long &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01long_01long_01_4_01_4_1aa7ced2f95655d4ee14446ad4e6cc3b01" name="operator()"><type>long long</type><parameter name="val"><paramtype>long long</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01short_01_4_01_4" name="version"><template>
    </template><specialization><template-arg>icl::inplace_minus&lt; short &gt;</template-arg></specialization><method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01short_01_4_01_4_1a2a4194e97c66a4d152c53ab52b34899e" name="operator()"><type>short</type><parameter name="val"><paramtype>short</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4" name="version"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>icl::inplace_minus&lt; Type &gt;</template-arg></specialization><inherit access="public">boost::icl::conversion&lt; icl::inplace_minus&lt; Type &gt; &gt;</inherit><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1ac4a60ab4c4c618f52d68057cfafb5172" name="type"><type><classname>version</classname>&lt; <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a0f8eaf6dcecef9c1d21afc12a912656d" name="base_type"><type><classname>conversion</classname>&lt; <classname>icl::inplace_minus</classname>&lt; Type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a1379d3567ab4698d6bef6a2e8382a18b" name="argument_type"><type>base_type::argument_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1version_3_01icl_1_1inplace__minus_3_01Type_01_4_01_4_1a6f2ecc3e17c87849b0f982322bc9b30a" name="operator()"><type>Type</type><parameter name="value"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.gregorian_8hpp" name="boost/icl/gregorian.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1gregorian_1_1date_01_4" name="difference_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1gregorian_1_1date_01_4_1aaae238559fbd7df1b653b270d61840af" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4_1a784e99129177a57de4cc1981cd9a205d" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date_01_4_1a972ba647bca2986a90a3c6a0f695b901" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4_1aa2b86badf489edf0ce8ab3da7b22f7cc" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1gregorian_1_1date__duration_01_4_1a3acc26eabcaffb699c28c59eca089bd2" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__element_3_01boost_1_1gregorian_1_1date__duration_01_4" name="identity_element"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1identity__element_3_01boost_1_1gregorian_1_1date__duration_01_4_1af1d9ed652fab79e3032f28adf7fa3e3f" name="value" specifiers="static"><type>boost::gregorian::date_duration</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4_1ae47589842f95c6d9d8ef3bf49ab0ce57" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date_01_4_1a30ab97779a793ea3e1db42d9bd2edcf0" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4_1a70665f0ced66f937f5d22fae0fafd9f4" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1gregorian_1_1date__duration_01_4_1a7054352a0293ad6e547445a84920e2ea" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date_01_4_1a4c5fefce123de1cfa4140a9cd7722f29" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date__duration_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::gregorian::date_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1gregorian_1_1date__duration_01_4_1a806a98153acaefced687ae240911b0a1" name="type"><type>boost::gregorian::date_duration</type></typedef>
</struct-specialization>





<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1aeef60672fc652f3147762c309d5eb27d" name="operator++"><type>boost::gregorian::date</type><parameter name="x"><paramtype>boost::gregorian::date &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1a92d61708c18d96cddda87aeeb1f61f08" name="operator--"><type>boost::gregorian::date</type><parameter name="x"><paramtype>boost::gregorian::date &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1afd551c7225759365c82b46fbceca30d9" name="operator++"><type>boost::gregorian::date_duration</type><parameter name="x"><paramtype>boost::gregorian::date_duration &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.gregorian_8hpp_1a213cb4177a8e834f9dcdc52da0ca5a82" name="operator--"><type>boost::gregorian::date_duration</type><parameter name="x"><paramtype>boost::gregorian::date_duration &amp;</paramtype></parameter></function>
</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.impl__config_8hpp" name="boost/icl/impl_config.hpp">
<macro id="doxygen.interval_container_library_reference.impl__config_8hpp_1a85881bcdeb2b78994091f803f63a33a5" name="ICL_IMPL_SPACE"/>
</header>
<header id="doxygen.interval_container_library_reference.interval_8hpp" name="boost/icl/interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval" name="interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a705ee10db93b12b8a8bedcbeaab6f15d" name="interval_type"><type>interval_type_default&lt; DomainT, Compare &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1af5c16b36dbf73d755c3fcdaf8c9fabd1" name="type"><type>interval_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a7004983e08bd0479a123aa14e1565755" name="right_open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a851ece6bbeb902e6ee755458a433dea1" name="left_open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a54d7d45e8be1bc3fef8e09794b683377" name="open" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a9dfe93a0e1dbed167b3d314f6e543408" name="closed" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval_1a5750ef09e3d3c90d94c8b6193ef7fc2f" name="construct" specifiers="static"><type>interval_type</type><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter></method>
</method-group>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="IsDiscrete"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template><specialization><template-arg>IntervalT</template-arg><template-arg>false</template-arg><template-arg>PretendedBounds</template-arg><template-arg>RepresentedBounds</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4_1a157a0d1407baa0dae04d8e8ba77c56a1" name="domain_type"><type><classname>interval_traits</classname>&lt; IntervalT &gt;::domain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01false_00_01PretendedBounds_00_01RepresentedBounds_01_4_1aa56c31255dd4410403529dda8561a4b6" name="construct" specifiers="static"><type>IntervalT</type><parameter name="low"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4" name="static_interval"><template>
      <template-type-parameter name="IntervalT"/>
      <template-nontype-parameter name="PretendedBounds"><type>bound_type</type></template-nontype-parameter>
      <template-nontype-parameter name="RepresentedBounds"><type>bound_type</type></template-nontype-parameter>
    </template><specialization><template-arg>IntervalT</template-arg><template-arg>true</template-arg><template-arg>PretendedBounds</template-arg><template-arg>RepresentedBounds</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4_1ab9f05fc338ef2eeae1ee2fa0664dadc2" name="domain_type"><type><classname>interval_traits</classname>&lt; IntervalT &gt;::domain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1static__interval_3_01IntervalT_00_01true_00_01PretendedBounds_00_01RepresentedBounds_01_4_1ae2169ffdbc5b674f27d822e432ab2566" name="construct" specifiers="static"><type>IntervalT</type><parameter name="low"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__base__map_8hpp" name="boost/icl/interval_base_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c" name="absorbs_identities"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c_1a25f2236eec0fb2a588024a00ea2754ef" name="type"><type>absorbs_identities&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__base__map_3_01SubType_00_01Domain7b979512ccde65cb63a71ba44b15b23c_1ad78fd74764734afb5d40c23a4e8db179" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6" name="has_inverse"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6_1a3ec329b24ba03114fcd325cf2dfc1d89" name="type"><type>has_inverse&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_014ceb07d16f902f3f9fa1858a0fd158e6_1add049d007fe1fcb595a6e88484f55245" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map" name="interval_base_map"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><purpose>Implements a map as a map of intervals (base class) </purpose><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="has_set_semantics"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a12583c3c5ce35dcaf5c2f7ea0d1b3f2b" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a8334d7515e033d0b60896dbf09d1b0c3" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a90ea7ac4fc7a0a9bd0c94a614961c695" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a7f99970581a765e514b6dd97f257ceae" name="codomain_combine"><type>Type::codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01false_01_4_1a6a558e044d54c06358b90cd7eb0e7a3f" name="add" specifiers="static"><type>void</type><parameter name="intersection"><paramtype>Type &amp;</paramtype></parameter><parameter name="common_interval"><paramtype>interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const codomain_type &amp;</paramtype></parameter><parameter name=""><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a6ad0c386fae836913ca9c97042d1f80f" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a7e5fbd73786a08083fecd3aa22fbbb37" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a05c3f8aed7b2e29fb28c1156a3edcbda" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1aa88c0f3e084e2d0cae2baab1b67551fa" name="codomain_combine"><type>Type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a1fdbe2b382011cdff6b29637e1b8067e" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__codomain__model_3_01Type_00_01true_01_4_1a72f222fd9b4148d957d2b6b980bf9d49" name="add" specifiers="static"><type>void</type><parameter name="intersection"><paramtype>Type &amp;</paramtype></parameter><parameter name="common_interval"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="flip_value"><paramtype>const codomain_type &amp;</paramtype></parameter><parameter name="co_value"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01false_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01false_01_4_1ad92eddfd8e4c28d68734a9fd1db3669b" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01true_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__definedness_3_01Type_00_01true_01_4_1a3a780ff6d33eb489a48bdddde4b2a05a" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total_invertible"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1a4a32f3694a7f23c0d4b82f64e37ad8b7" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1a903fdfc3883907103d6ca03863b66f6e" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01false_01_4_1aed7635c999d5f9a781b1d288c45c0870" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1a980abd7689501da744ebc103d84f72a8" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1afb7846f72b90593b7fd5953f14da94b0" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__invertible_3_01Type_00_01true_01_4_1ad25622d51f7d1ec6cba475b4fd76138a" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>absorbs_identities</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a345df2467e2dfeb9628c90ce86508579" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a59a74681be0d45db450e526649d02c42" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1acffe87af1bb63c77d4606bb309212dbc" name="interval_type"><type>Type::interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ae6e73b4ca4466f1e753fcd1769b7304b" name="value_type"><type>Type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a83aff1c7ca06f5522bfb138040bad557" name="const_iterator"><type>Type::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ad9d4b29957820e712cdce1ec9ed840a8" name="set_type"><type>Type::set_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1a344752913b09379a1dc50838cbe10d63" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01false_00_01absorbs__identities_01_4_1ac7572bd10d0b622a404b98ed5ed36616" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1afe1c4f336996eb60063ec79c3238b38f" name="segment_type"><type>Type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a978676778f2b9fc89504f9c90cbcc26d" name="codomain_type"><type>Type::codomain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1abb9fc8ec40e3ca87bf50155ed08445cf" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__base__map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1a8c04f23e012f7cd2eb76b2bad6b38db7" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const typename Type::segment_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2e5d54e474e5a8094be53ee304919159" name="type"><type><classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af1d60cb2b6f0f35186819c01472af620" name="sub_type"><purpose>The designated <emphasis>derived</emphasis> or <emphasis>sub_type</emphasis> of this base class. </purpose><type>SubType</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6879bafe7db0bed4cfb1a52df5362cbc" name="overloadable_type"><purpose>Auxilliary type for overloadresolution. </purpose><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a8b4a266c66bd05249a24fbadd17fdb2b" name="traits"><purpose>Traits of an itl map. </purpose><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a84fa96f734d7ff46db22f035ae6af089" name="atomized_type"><purpose>The atomized type representing the corresponding container of elements. </purpose><type><classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a73abcb0404b463ab499641e9f9ebf2c4" name="domain_type"><purpose>Domain type (type of the keys) of the map. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a5567e20dc506e50336e2eedb05af5853" name="domain_param"><type>boost::call_traits&lt; DomainT &gt;::param_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aef39fdc09e1ccc6c64220521ef8b013e" name="codomain_type"><purpose>Domain type (type of the keys) of the map. </purpose><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6e333a1957072b24ddb20e667f63cb61" name="domain_mapping_type"><purpose>Auxiliary type to help the compiler resolve ambiguities when using std::make_pair. </purpose><type><classname>mapping_pair</classname>&lt; domain_type, codomain_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1abd23f913e0cfcb28a194edbef17dae1d" name="element_type"><purpose>Conceptual is a map a set of elements of type <computeroutput>element_type</computeroutput>. </purpose><type>domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a15b038675fb390483cb68d8a3b0b6a2e" name="interval_mapping_type"><purpose>Auxiliary type for overload resolution. </purpose><type>std::pair&lt; interval_type, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae264a509651c57a4e7e28a0ab82c7463" name="segment_type"><purpose>Type of an interval containers segment, that is spanned by an interval. </purpose><type>std::pair&lt; interval_type, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2573aaf057b710b970ad0c7a77148774" name="difference_type"><purpose>The difference type of an interval which is sometimes different form the domain_type. </purpose><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab3796c1a8def62b9536c47b446105045" name="size_type"><purpose>The size type of an interval which is mostly std::size_t. </purpose><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a809bc697cb000980a3f5dac7e5a28dcf" name="inverse_codomain_combine"><purpose>Inverse Combine functor for codomain value aggregation. </purpose><type><classname>inverse</classname>&lt; codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a048365d04771449b34581d0394b013fa" name="codomain_intersect"><purpose>Intersection functor for codomain values. </purpose><type>mpl::if_&lt; has_set_semantics&lt; codomain_type &gt;, ICL_SECTION_CODOMAIN(Section, CodomainT), codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a14a296edc7a841c64b1b5c3c57e4d81c" name="inverse_codomain_intersect"><purpose>Inverse Combine functor for codomain value intersection. </purpose><type><classname>inverse</classname>&lt; codomain_intersect &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2ae6f87b24eaa923bd2289ddd14d5637" name="interval_compare"><purpose>Comparison functor for intervals which are keys as well. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a80461b875bd11246a31f2b2393697ac3" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a073be35a1fb580047bc8475226be071c" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; std::pair&lt; const interval_type, codomain_type &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aec2585337d0d0775d46e45cb25933780" name="ImplMapT"><purpose>Container type for the implementation. </purpose><type>ICL_IMPL_SPACE::map&lt; interval_type, codomain_type, key_compare, allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ac4a101dadcd5f6ee83218a8ea897c3a3" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplMapT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3a2e2c522e1da427774bf3719fe8bbb4" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplMapT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aee2c75c78a8ca70faa669a5e158107c1" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplMapT::value_type::second_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a23526da30e13996f2e17c9306226a88e" name="pointer"><purpose>pointer type </purpose><type>ImplMapT::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a31cb0e289222bde402508ef6fc335bdc" name="const_pointer"><purpose>const pointer type </purpose><type>ImplMapT::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af1c8caaaed0f62d99ad9ca2824bb897e" name="reference"><purpose>reference type </purpose><type>ImplMapT::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa8387258ef952525ae2233b5d4fc5d95" name="const_reference"><purpose>const reference type </purpose><type>ImplMapT::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a1dacc6bed30c24ca2eae7af9885a1b5a" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplMapT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aae1b0f3a3555b1e509403cb91d749f7f" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplMapT::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a7696c1f18f55fae95b4ff7e0c8e6676c" name="reverse_iterator"><purpose>iterator for reverse iteration over intervals </purpose><type>ImplMapT::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a7105456879117ddfe05bbdf0fd4f1a44" name="const_reverse_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplMapT::const_reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a56ec9dc3c0a9328de9b71b34a03e8853" name="element_iterator"><purpose>element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a264febf39012a6b650d0e31cb1200096" name="element_const_iterator"><purpose>const element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a934ce650af07f37bb7e22be779aff488" name="element_reverse_iterator"><purpose>element reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa3da1f29cb39cbe8c296eabac6d9857a" name="element_const_reverse_iterator"><purpose>element const reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad423f315adaab7772578d94eac875994" name="on_codomain_absorbtion"><type>on_absorbtion&lt; <classname>type</classname>, codomain_combine, Traits::absorbs_identities &gt;::type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a57f5404fb18acf376c77218af92e216c" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the map. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6ff5e4c1a570723fab3381eb82046a80" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af7803a72b88f02d36967d0252d5eab50" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>segment_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a632bf3301719f883363cd1ff7cafccca" name="ICL_COMBINE_CODOMAIN"><type>typedef</type><parameter name=""><paramtype>Combine</paramtype></parameter><parameter name=""><paramtype>CodomainT</paramtype></parameter><purpose>Combine functor for codomain value aggregation. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a35a7d31ffe7fbf98b602d4fd08874775" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>is_total_invertible</paramtype><default>(Traits::is_total &amp;&amp;has_inverse&lt; codomain_type &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a976beafe011b926bdfa1d3f97a50b033" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>0</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad8f079a0a0556a9eea56270512937710"><description><para>Default constructor for the empty object </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab48df1bc4d49110f6766b66a8dcfdc9d"><parameter name="src"><paramtype>const <classname>interval_base_map</classname> &amp;</paramtype></parameter><description><para>Copy constructor </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9842c673f059e10abedf053a39ee9172"><parameter name="src"><paramtype><classname>interval_base_map</classname> &amp;&amp;</paramtype></parameter><description><para>Move constructor </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a403085ff5e545601bf1e1e463103cfdb"><type><classname>interval_base_map</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_base_map</classname></paramtype></parameter><description><para>Move assignment operator </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a1fcf7e4b35ab0b58dede85363756f1f8" name="swap"><type>void</type><parameter name="object"><paramtype><classname>interval_base_map</classname> &amp;</paramtype></parameter><description><para>swap the content of containers </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3b26c1511da47d27b5cf2b0e1278e274" name="clear"><type>void</type><description><para>clear the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a2ee12b4368770aa4faef5a21c77e412b" name="empty" cv="const"><type>bool</type><description><para>is the map empty? </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a37bcbf08b2501c5c677f04f80ec82eec" name="size" cv="const"><type>size_type</type><description><para>An interval map's size is it's cardinality </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab6686de539364171682669d1c24744f2" name="iterative_size" cv="const"><type>std::size_t</type><description><para>Size of the iteration over this container </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1acdcdbf6752f0789cd09f82297921dbcc" name="find" cv="const"><type>const_iterator</type><parameter name="key_value"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Find the interval value pair, that contains <computeroutput>key</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a8773d40a8fef0e565639da9889523473" name="find" cv="const"><type>const_iterator</type><parameter name="key_interval"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Find the first interval value pair, that collides with interval <computeroutput>key_interval</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4bce109667a274fb6f3b94c6237664fe" name="operator()" cv="const"><type>codomain_type</type><parameter name="key_value"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Total select function. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a6d11dabaafbbacd2b4804700f05161c0" name="add"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Addition of a key value pair to the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af69cbc9b415302b21a41f58a6522bacb" name="add"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Addition of an interval value pair to the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a938a63a9b17f628e728ca0a4d46b642b" name="add"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Addition of an interval value pair <computeroutput>interval_value_pair</computeroutput> to the map. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>interval_value_pair</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a99b58655471f7669897bcf9f0141f438" name="subtract"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Subtraction of a key value pair from the map </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a8733a15185d84921790544cd60603401" name="subtract"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Subtraction of an interval value pair from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a94c05e440c470501d296444d9e6d55cb" name="insert"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Insertion of a <computeroutput>key_value_pair</computeroutput> into the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1acc569f02328cd50a31b2415a22e10310" name="insert"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insertion of an <computeroutput>interval_value_pair</computeroutput> into the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a5c4512a22b35f770f6fbf4f3585a3b12" name="insert"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insertion of an <computeroutput>interval_value_pair</computeroutput> into the map. Iterator <computeroutput>prior_</computeroutput>. serves as a hint to insert after the element <computeroutput>prior</computeroutput> point to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ab60fcc2d4206abe9cee34085be8bd25e" name="set"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>With <computeroutput>key_value_pair = (k,v)</computeroutput> set value <computeroutput>v</computeroutput> for key <computeroutput>k</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad6e8c1cc087fea491847362ccf25a1aa" name="set"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>With <computeroutput>interval_value_pair = (I,v)</computeroutput> set value <computeroutput>v</computeroutput> for all keys in interval <computeroutput>I</computeroutput> in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a12faa0dc808fa7342893fcc78dbbe7c3" name="erase"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Erase a <computeroutput>key_value_pair</computeroutput> from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae2cbb097b754fc75e365ad5f2b5ff090" name="erase"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Erase an <computeroutput>interval_value_pair</computeroutput> from the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa52ad78294d8ad6c4667986d176b09b0" name="erase"><type>SubType &amp;</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Erase a key value pair for <computeroutput>key</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa5058d3e42303b0a0b5347ce26fd5fc5" name="erase"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Erase all value pairs within the range of the interval <computeroutput>inter_val</computeroutput> from the map. <sbr/>
 </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9e9aae317c2b2179fe8038e63b5263ed" name="erase"><type>void</type><parameter name="position"><paramtype>iterator</paramtype></parameter><description><para>Erase all value pairs within the range of the interval that iterator <computeroutput>position</computeroutput> points to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a925550c218d6772ffd60c778f14e00ee" name="erase"><type>void</type><parameter name="first"><paramtype>iterator</paramtype></parameter><parameter name="past"><paramtype>iterator</paramtype></parameter><description><para>Erase all value pairs for a range of iterators <computeroutput>[first,past)</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad6f6fa2c308f8264948b8b5425058fed" name="add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>The intersection of <computeroutput>interval_value_pair</computeroutput> and <computeroutput>*this</computeroutput> map is added to <computeroutput>section</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a3ee69d4747d112a68e59c1f5c976fb10" name="flip"><type>SubType &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> map contains <computeroutput>key_value_pair</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a5a3cb97d8258bf93ce7a8b092bff398d" name="flip"><type>SubType &amp;</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> map contains <computeroutput>interval_value_pair</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aeb3c893156108e2ef7b888b849c86bb4" name="lower_bound"><type>iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a23faf72a8f7bf1eb931475450d8b10dd" name="upper_bound"><type>iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a63a1da8fa2d4dd8da68ab12e2b57361a" name="lower_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9d7afd8b016d439769663a3a46b237a7" name="upper_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aa20bdaab90caf9a02bacc6765949d18b" name="equal_range"><type>std::pair&lt; iterator, iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a18889231398f5b835843ab487d5146cd" name="equal_range" cv="const"><type>std::pair&lt; const_iterator, const_iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a847aca809bb9b734a504106002e699d0" name="begin"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad8c26d23d4da0a0ac3ab6a485e1905af" name="end"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a62d43e7c1b5040c121aad6fcb126272a" name="begin" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a460772eec36067709c2e8ac0a67b11ec" name="end" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae6221b780c9282406f0a6708c15284fe" name="rbegin"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ac43d2079c0f72600f1934f536297ae07" name="rend"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a478588c2bbe7feec34770bd2063dee4e" name="rbegin" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad40a941c9c09e95ca854ef2c53f3781d" name="rend" cv="const"><type>const_reverse_iterator</type></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a701562d8184e9b6af44527aaa6ffc294" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae34b2ff916dbafaec9e070b5b4294ed8" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aeb100a3cdc9b5bd43d08f9bc592c4e05" name="_subtract"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a05fbcf3b9313719df206d26d3d025635" name="_insert"><type>iterator</type><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1abea58719b9002e1f067aaaf4c4fad574" name="_insert"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="interval_value_pair"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a9ab350e4f50b5e8a151a5c478c16d802" name="add_segment"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a26b4a21e38173f268f92d2ba862f6893" name="add_main"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4c4b2cbe08a00bec62fa46c22cd41748" name="add_rear"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af5433926ec5cc8e05fed47296137f844" name="add_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a251f2ad44979e41cd6159f1434c1f2cd" name="subtract_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a65e90d1e700cca4f3478875052f1f399" name="subtract_main"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a105f92d327cbc1fd5d7437aa5c455939" name="subtract_rear"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ad9a1bca2f66043674191ac753dff9612" name="insert_main"><type>void</type><parameter name=""><paramtype>const interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name=""><paramtype>iterator &amp;</paramtype></parameter><parameter name=""><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1adee4e225199d2b500fb88d7be3c1d1b1" name="erase_rest"><type>void</type><parameter name=""><paramtype>interval_type &amp;</paramtype></parameter><parameter name=""><paramtype>const CodomainT &amp;</paramtype></parameter><parameter name=""><paramtype>iterator &amp;</paramtype></parameter><parameter name=""><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a456dd07942eac044d775ee79b91376c1" name="total_add_intersection" cv="const"><type>void</type><template>
          <template-type-parameter name="FragmentT"/>
        </template><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="fragment"><paramtype>const FragmentT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a4ba6c06aa687346c5e7c3a2e3f6e22f0" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="operand"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a32fec06fde44dd0fb331402d35e54770" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype>SubType &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1aaea239e6681622756b53c51814fe8b22" name="gap_insert"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1af9a419ef75948d7c0d2bda95ef768c6a" name="add_at"><type>std::pair&lt; iterator, bool &gt;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>const iterator &amp;</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a03a19f889ee1fa5c6d8571f2e6cc9b7c" name="insert_at"><type>std::pair&lt; iterator, bool &gt;</type><parameter name="prior_"><paramtype>const iterator &amp;</paramtype></parameter><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1a7a0d41b1517e86832190c70658de236f" name="that"><type>sub_type *</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__map_1ae5f86a789f45bf6439661d0a667867ee" name="that" cv="const"><type>const sub_type *</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177" name="is_interval_container"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177_1abe705104fc4aada174ff6f72e5860181" name="type"><type>is_interval_container&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__map_3_01SubType_00_01Do826435365e0587c56160fcb563dca177_1a63db43f86591f9cff36ba846d70284de" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324" name="is_map"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324_1aea27c39ad87bffa1835c9d553893496a" name="type"><type>is_map&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Codom4a637ac132b118a57737b98b8b3fb324_1a8e95e4773f26707e478bfdc2458a8e56" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e" name="is_total"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_map&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e_1a1ce3c97d3acc7cefd7b8774407c93e67" name="type"><type>is_total&lt; <classname>icl::interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__base__map_3_01SubType_00_01DomainT_00_01Cod56bf03d61fff8322e8d0ea0e97da725e_1afa5c762e00e05404bc1fe143553657b5" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair" name="mapping_pair"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
    </template><data-member id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1aab4f1ced369d75a9913f63a42d251a25" name="key"><type>DomainT</type></data-member>
<data-member id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a5839ed31b421598ad8c4f894d3258393" name="data"><type>CodomainT</type></data-member>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a5303cdaf273a17175a24a0f0c70a54ae"/>
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1a0d5685da4dec61a5d8ef792a0d338bcc"><parameter name="key_value"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="data_value"><paramtype>const CodomainT &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1mapping__pair_1ad7fde42144fb0c84f0b65f51002fce59"><parameter name="std_pair"><paramtype>const std::pair&lt; DomainT, CodomainT &gt; &amp;</paramtype></parameter></constructor>
</method-group>
</struct>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__base__set_8hpp" name="boost/icl/interval_base_set.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set" name="interval_base_set"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><purpose>Implements a set as a set of intervals (base class) </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a2d6e1c19377c963253e15900381df20c" name="type"><type><classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a45e0b1e6cdbbc8d3b5308e14a4e52063" name="sub_type"><purpose>The designated <emphasis>derived</emphasis> or <emphasis>sub_type</emphasis> of this base class. </purpose><type>SubType</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a3f4fc81a055dc64d37425c4c0751ebbb" name="overloadable_type"><purpose>Auxilliary type for overloadresolution. </purpose><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab5c59fd99cd64b490a371b7fa398aa0d" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a95fe3a8c54ed011bcf4bd4d0eab552d3" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1acfb523b794a7b66b2db708910906af15" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a550a97fe7209818d8c28bfa9d91869c4" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a489a7addfd38f33cb22d5b05ba8215c3" name="difference_type"><purpose>The difference type of an interval which is sometimes different form the data_type. </purpose><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae2e10f074f4a55822e01329532bd8364" name="size_type"><purpose>The size type of an interval which is mostly std::size_t. </purpose><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4099cc90d7245b54a149d9223c2573b6" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a17477722425b4c239296e2046bee426d" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aafdd499112d57bfb948615908f11633e" name="atomized_type"><purpose>The atomized type representing the corresponding container of elements. </purpose><type>ICL_IMPL_SPACE::set&lt; DomainT, domain_compare, Alloc&lt; DomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aee9cad661c4fa3af9d0f48e9d1436d47" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a264a7794d3b50e99d5466ff76e78e610" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae951455bdc18985574471bcc64525066" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>ICL_IMPL_SPACE::set&lt; interval_type, key_compare, allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a92e32ce07592837a37541fe83699ad41" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab08c9f5c7b75dca0f1804de1cdb42387" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae52d151996a002064f8313de4136c6f7" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aaaaae320ff304489189a6f439452dc63" name="pointer"><purpose>pointer type </purpose><type>ImplSetT::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7872e93064aef3cbc1d840343661b97a" name="const_pointer"><purpose>const pointer type </purpose><type>ImplSetT::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1afac6a63f21a8f508cdfb28c8bbfb5b68" name="reference"><purpose>reference type </purpose><type>ImplSetT::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aff1dd64fe665a491d2cf25143d8e6b8c" name="const_reference"><purpose>const reference type </purpose><type>ImplSetT::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a2edb2fb3079c968f8093f10e4c0cd11b" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae3f6809f0ad42ffc417de7e6254e1b75" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a5441a72acf72540d03d82b21b04e0368" name="reverse_iterator"><purpose>iterator for reverse iteration over intervals </purpose><type>ImplSetT::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1abddb6fd58f21f8f8e2b9be108c24bf41" name="const_reverse_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a48eea88f9f92d656dde4a89bbaa5d081" name="element_iterator"><purpose>element iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a8d5ba1756fe24b74fda387f11101470d" name="element_const_iterator"><purpose>element const iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1abe1529515fa1ad057a58ab28c293a0d3" name="element_reverse_iterator"><purpose>element reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; reverse_iterator &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a5772a3466a582828a7c0d6b4deb38837" name="element_const_reverse_iterator"><purpose>element const reverse iterator: Depreciated, see documentation. </purpose><type>boost::icl::element_iterator&lt; const_reverse_iterator &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a03a718a8756cedc4cd849a46d82f35fa" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aebf10586dc479cba1ee6dad33076a8d1" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7a8657f6fb636edb6f767348f47e8e5d" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>segment_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a484951f03bdc3773a3263b658269e058" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>0</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7b0e222f3a9e354f58044fe49907c6b9"><description><para>Default constructor for the empty object </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae5f01040beadb698bfc9d6d44ee2336c"><parameter name="src"><paramtype>const <classname>interval_base_set</classname> &amp;</paramtype></parameter><description><para>Copy constructor </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0e04ac348413e07ba1563bf9c4bf9242"><parameter name="src"><paramtype><classname>interval_base_set</classname> &amp;&amp;</paramtype></parameter><description><para>Move constructor </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4d6eebe373c48bf1765f69ee9ea52fe0"><type><classname>interval_base_set</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_base_set</classname></paramtype></parameter><description><para>Move assignment operator </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae9106773a3cc06b167ed3c656b1a1756" name="swap"><type>void</type><parameter name="operand"><paramtype><classname>interval_base_set</classname> &amp;</paramtype></parameter><description><para>swap the content of containers </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a5321181cbd953271aa82ee7371f7117b" name="clear"><type>void</type><description><para>sets the container empty </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a110393140e543beb275d8dcf2dc6c226" name="empty" cv="const"><type>bool</type><description><para>is the container empty? </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab6fbfa781ec82d0b8098e6f0604765d8" name="size" cv="const"><type>size_type</type><description><para>An interval set's size is it's cardinality </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aff276f05d6e56f829dba5623bef75db3" name="iterative_size" cv="const"><type>std::size_t</type><description><para>Size of the iteration over this container </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a843ed0b703ed259716f4c38c808e02ec" name="find" cv="const"><type>const_iterator</type><parameter name="key_value"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Find the interval, that contains element <computeroutput>key_value</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a7c8c5f49952de1d3935728cfd2f7e0fd" name="find" cv="const"><type>const_iterator</type><parameter name="key_interval"><paramtype>const interval_type &amp;</paramtype></parameter><description><para>Find the first interval, that collides with interval <computeroutput>key_interval</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a4fd985a6bc4af6bed8f025c74e198374" name="add"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Add a single element <computeroutput>key</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a08537e02f2a20bfd118a113608cb35b3" name="add"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Add an interval of elements <computeroutput>inter_val</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a68aba510fd1cd3d0b93352115d6ced62" name="add"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Add an interval of elements <computeroutput>inter_val</computeroutput> to the set. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>inter_val</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6f4830a8094c884a3d2263c1f6b577e0" name="subtract"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Subtract a single element <computeroutput>key</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a072c23576200093b5ddd4e8fd91d0e6e" name="subtract"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Subtract an interval of elements <computeroutput>inter_val</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a3242bfb49c41189e086a382d4a2dd98e" name="insert"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Insert an element <computeroutput>key</computeroutput> into the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6a23daeba3c61668f73b33c78de11fbc" name="insert"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insert an interval of elements <computeroutput>inter_val</computeroutput> to the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a82346b1c2c40930118eae44b9ae9d0fb" name="insert"><type>iterator</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Insert an interval of elements <computeroutput>inter_val</computeroutput> to the set. Iterator <computeroutput>prior_</computeroutput> is a hint to the position <computeroutput>inter_val</computeroutput> can be inserted after. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a44e91eefac46ea9adb30e578d0c62040" name="erase"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>Erase an element <computeroutput>key</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a3ebdadd99e183e707ca2b31e29fcc7b1" name="erase"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>Erase an interval of elements <computeroutput>inter_val</computeroutput> from the set </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a9d4f77853076bed6141f02c311986b49" name="erase"><type>void</type><parameter name="position"><paramtype>iterator</paramtype></parameter><description><para>Erase the interval that iterator <computeroutput>position</computeroutput> points to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a412859094a7887135519e6e15bcd0f93" name="erase"><type>void</type><parameter name="first"><paramtype>iterator</paramtype></parameter><parameter name="past"><paramtype>iterator</paramtype></parameter><description><para>Erase all intervals in the range <computeroutput>[first,past)</computeroutput> of iterators. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1acf6cbb5247c6d8ba1487c1000e5551c8" name="flip"><type>SubType &amp;</type><parameter name="key"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> set contains <computeroutput>key</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1adc9ea94806fcb107776b11cbcba03b2c" name="flip"><type>SubType &amp;</type><parameter name="inter_val"><paramtype>const segment_type &amp;</paramtype></parameter><description><para>If <computeroutput>*this</computeroutput> set contains <computeroutput>inter_val</computeroutput> it is erased, otherwise it is added. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1af521213c29f400eeb9fda2cdf5c8cab6" name="begin"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aaf4ea31f8c55e33aee3651ff4bf0d176" name="end"><type>iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab99e77c8212f6f718d4d5235b383282b" name="begin" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a551a32982e5878b974305720e7f135d0" name="end" cv="const"><type>const_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a08d1f023b9f67777cc67a57b6cfecc40" name="rbegin"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ac6fd4227f2ea8ea7773e36b9b1f92536" name="rend"><type>reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a090b35b2ce8228c5c0553b2d6983ae26" name="rbegin" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a85b08aee3d10b2880fe34539b756442a" name="rend" cv="const"><type>const_reverse_iterator</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a740dece9c6cc62cceea71c903ea6339e" name="lower_bound"><type>iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ab7ed72b64e4123ab90bc0de74a443425" name="upper_bound"><type>iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0a213f82390148e490905d2be2c2c6dc" name="lower_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6c80d477f1275701a6b346305f357eaf" name="upper_bound" cv="const"><type>const_iterator</type><parameter name="interval"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad0a4c44d7e0a4beba6eed05b0bd64438" name="equal_range"><type>std::pair&lt; iterator, iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1aaac5d6d427122ee073c388570df877e2" name="equal_range" cv="const"><type>std::pair&lt; const_iterator, const_iterator &gt;</type><parameter name="interval"><paramtype>const key_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1acfbe56b7013522899a4025fe913a5305" name="_add"><type>iterator</type><parameter name="addend"><paramtype>const segment_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a0c8f0f011a53884f35bd7b97d7f9e9ce" name="_add"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="addend"><paramtype>const segment_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="protected member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a6d4edc29ffaee3cb5231f996e3f726f2" name="add_front"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="first_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ae56c736d22442881e39f9393d6a571e6" name="add_main"><type>void</type><parameter name="inter_val"><paramtype>interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="last_"><paramtype>const iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a2e6f8ed17289de920c116957a3e00d16" name="add_segment"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1ad85d263cc14a13791b2d5073d1fc2d0a" name="add_rear"><type>void</type><parameter name="inter_val"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a12ddb37830d22880d9bba44fcad417fe" name="that"><type>sub_type *</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__base__set_1a50e808f6943256417b981c29db9e08a0" name="that" cv="const"><type>const sub_type *</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd" name="is_interval_container"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_set&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd_1ab7ebc18c5f1d221e8dbb090f75e79637" name="type"><type>is_interval_container&lt; <classname>icl::interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__base__set_3_01SubType_00_01Do99bbd9aad5220eb86661d87a9c3d46fd_1af3aee327f7dc773370801fe7ddeac6d2" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9" name="is_set"><template>
      <template-type-parameter name="SubType"/>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_base_set&lt; SubType</template-arg><template-arg>DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9_1a3ac0da1e3360a98aa79d2ef2a7277731" name="type"><type>is_set&lt; <classname>icl::interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__base__set_3_01SubType_00_01DomainT_00_01Compa80ac73431226a07619128214a2a27ab9_1a1d196dd190cd37598f0c1c2c95db0d35" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__bounds_8hpp" name="boost/icl/interval_bounds.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value" name="bounded_value"><template>
      <template-type-parameter name="DomainT"/>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1aec952f457a26cf46e0fc4b355862f495" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1ad7e4eb5e0380862fd2bb744e22e5cc4e" name="type"><type><classname>bounded_value</classname>&lt; DomainT &gt;</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1ae8321dec60fd1f36c73bc27e00090452"><parameter name="value"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="bound"><paramtype><classname>interval_bounds</classname></paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1aad964a5eca5e144515973b352ca9a72a" name="value" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1bounded__value_1aeea051f0cd4edc10d9f51a2c1f28f490" name="bound" cv="const"><type><classname>interval_bounds</classname></type></method>
</method-group>
</class><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds" name="interval_bounds"><data-member id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae6aef1cb63c174feb976d6d95f6b82d1" name="_bits"><type>bound_type</type></data-member>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1af804a0753644dcae691669d4a00bdd07" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_open</paramtype><default>0</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1af5de5906b7ee53d9a4f8e1b3dde62276" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_left_open</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a19db6f0358abce7eb09f202bd250f448" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_right_open</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3011ae07969fa08ab4cc3b0691f57f91" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>static_closed</paramtype><default>3</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1adaa4e0e6d58a5f283dee6642b97a01f4" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>dynamic</paramtype><default>4</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a62e0a4e7a43ee9a648a662493008c47f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>undefined</paramtype><default>5</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a2f27e46c5981efbdd391bad978f24617" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_open</paramtype><default>0</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a2bedc834cef3aede17aee9068122f914" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_left_open</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae7f3eb9bdd7d11e6c9cdef7a53804cfd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_right_open</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a36310e79409fcd3b3d314ced82b491cf" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_closed</paramtype><default>3</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1abf2807793683bc93176a95552475b90b" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_right</paramtype><default>1</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a968e336758660e38aa5759ead848db2c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_left</paramtype><default>2</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ae775c0eee4f599ee09cd1a2c5e274b2f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>_all</paramtype><default>3</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a81dd533c1895705ce7baca65ceda2fc4"/>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1aaed1677ba103799abcc14332d28dba24" specifiers="explicit"><parameter name="bounds"><paramtype>bound_type</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a4aea75ef01f0d23c8585c5ce5319aca8" name="all" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a66521990d853966234b81e4be0d6998c" name="left" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3f299943efd252e716dc4bcde36f941d" name="right" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a0701475d1c933a5a7f51c712e4e764fc" name="reverse_left" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1afa4f8e29b2721e0d29b8e2bf040cc6dd" name="reverse_right" cv="const"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a88b480711d3afd143cd9424df7700852" name="bits" cv="const"><type>bound_type</type></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1addfbaa597f1d5237c2f25bc6ae3001a4" name="open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a3ff0c868e02bd5de6f2e99dbf246f000" name="left_open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1a4c595c0a9daa95691d5939d09a538f92" name="right_open" specifiers="static"><type><classname>interval_bounds</classname></type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__bounds_1ade28514135d1ea3e3d956ae275da9c10" name="closed" specifiers="static"><type><classname>interval_bounds</classname></type></method>
</method-group>
</class><typedef id="doxygen.interval_container_library_reference.interval__bounds_8hpp_1a2fa3dfe7b8630d9e38779e8de1e99141" name="bound_type"><type>unsigned char</type></typedef>










</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__combining__style_8hpp" name="boost/icl/interval_combining_style.hpp">
<namespace name="boost">
<namespace name="icl">
<namespace name="interval_combine">
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a192277578fd35507f4a16b86d6e7cf29" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>unknown</paramtype><default>0</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a141f8dfee63f073c6447a430e5c2c834" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>joining</paramtype><default>1</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a01401b3da29677747cbbcc9234cc1d20" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>separating</paramtype><default>2</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a77b5823a6906b7fddc1465ca19034175" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>splitting</paramtype><default>3</default></parameter></function>
<function id="doxygen.interval_container_library_reference.interval__combining__style_8hpp_1a9c68f882304f760e09b58610b578b1d5" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>elemental</paramtype><default>4</default></parameter></function>
</namespace>










</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__map_8hpp" name="boost/icl/interval_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849_1a238d1a169b5b352301b667e01dc05e7a" name="type"><type>absorbs_identities&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00af6da27e2f03f4e16b9b488f09ae9849_1ae10a90debc14342debcfbdc9ed13d700" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26_1a712d3ea15a8e68b70498b2bf35a01409" name="type"><type>has_inverse&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Trai505cad5f452d30e2463d5167f0c61e26_1a956463eff21c28616155602b0145d76d" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map" name="interval_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_map&lt; interval_map&lt; DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>implements a map as a map of intervals - on insertion overlapping intervals are split and associated values are combined. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5fda4b74a1276add155782286e43990f" name="@12"><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5fda4b74a1276add155782286e43990faaacfdc0ff87978ac8e580ef1ba396736" name="fineness"><default>1</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1aef28af1822b082dbdb46884f6b3dd73a" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a5e1dd48f36a07ce00d60dad1654d83e2" name="type"><type><classname>interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a6c2634e6a8350e7a1bac964cffc0c543" name="split_type"><type><classname>split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a0a25853998b36f1fcfa2edfef3d1f7ff" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a79e2742151b782e0162a6a09fc2c18cd" name="joint_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a6cfdb181d77674c50cb947f7fb786be4" name="base_type"><type><classname>interval_base_map</classname>&lt; <classname>type</classname>, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a10d1d1c8bd98b900b9ebd916ef2cbe1b" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a2a9672ff02960aacf24e0eb1b0ee63e5" name="value_type"><type>base_type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a462122dd1bb63fd1751bf06ad700a661" name="element_type"><type>base_type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a2f87c3eee164281cd7a05730d17c9adb" name="segment_type"><type>base_type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a69af5fd90b9d863f79b7aaea7829f587" name="domain_type"><type>base_type::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a00532820491fdd3461ce9115f0c6d32b" name="codomain_type"><type>base_type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ad921cbd1a4a7c78d610b024572ef9721" name="domain_mapping_type"><type>base_type::domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a38e26e9067fd17f3f5a354d69a13063b" name="interval_mapping_type"><type>base_type::interval_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1afc19b7622ef6d34105a292ae8b2d189d" name="ImplMapT"><type>base_type::ImplMapT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab71de837e17ee831094adb0865283413" name="size_type"><type>base_type::size_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a73e5805d7d0e9fe14dc17d93b2e23825" name="codomain_combine"><type>base_type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ace6d642c7bfdecdc96f6ec34ab9f2f23" name="interval_set_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a02c14efd6b880ff19802bfa9168e4977" name="set_type"><type><classname>interval_set_type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1aa5d91899fc03a6bfeb7c9014acc51182" name="key_object_type"><type><classname>set_type</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a3c6c5a2a05cbe6bb8f229064c0efebb2" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a34c2861aab55f0e52783754458552c6c"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a75cc2a9c4866a4cfaf139c139be12334"><parameter name="src"><paramtype>const <classname>interval_map</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ad75e2a429b69b05ad1498128397ad9a0" specifiers="explicit"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a7ffc50cf1a33fd7111b59563683e0ce4" specifiers="explicit"><parameter name="base_pair"><paramtype>const <classname>domain_mapping_type</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a818d266bfd7365952d9022de3b72def2" specifiers="explicit"><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a75d9429bb92c250ff65534da313af9cb" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map">interval_map</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a3496b25f6e252bf6bbdcd073684a6498"><type><classname>interval_map</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ac1d9a66931ea8ceda4cf526b6a79dbe7"><parameter name="src"><paramtype><classname>interval_map</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ae0aa7fc8feafa2a745c4dbc9bac83559"><type><classname>interval_map</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_map</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ae4f09bfe8105f37df4dfa40796ca2070" name="handle_inserted"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a434ba9d254ad3bf2c8fe960031563a90" name="handle_inserted"><type>void</type><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a13fb37053aa9b9f41f1e24a393c5423a" name="handle_left_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab01eb0710229477ac362e56ae550cc15" name="handle_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a512fca1dc849ebaab605b0e60e6e279c" name="handle_preceeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a0956bc16c0f906cabdef3bd965484111" name="handle_succeeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter><parameter name="next_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1a4a847df46f2de6b479d6726d95cf440a" name="handle_reinserted"><type>void</type><parameter name="insertion_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map_1ab937d31cd446709464ceca695255aaf9" name="gap_insert_at"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="end_gap"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6_1aa246995f63dd01b461e4d862280c9dc2" name="type"><type>is_interval_container&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__map_3_01DomainT_00_01Codomaine6d8f97b4dcc5c305375e8001dca02a6_1a8a709c9aaea7e1772caeb56a9be5c1ff" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965_1a71194c20e5e2d72f062bf3393524512f" name="type"><type>is_map&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_006f66ab580086c99fbe9343a60a9d3965_1a4af505ff4883432abf8bec63823c98c0" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49_1a4829e908bc0544a9de5b1d6d9515aa75" name="type"><type>is_total&lt; <classname>icl::interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_01Traits_6dd8973d4f0938b0632946babba13c49_1aca505faf171c6e8e33f0c4331a829aa1" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_015f6da6c01bc55bb82d3e2094851d0267" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__map_3_01DomainT_00_01CodomainT_00_015f6da6c01bc55bb82d3e2094851d0267_1ac1b614920d721b792b76b7246dc95823" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__set_8hpp" name="boost/icl/interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set" name="interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>Implements a set as a set of intervals - merging adjoining intervals. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9a53a4119742cd8c03299d2412a9686a" name="@11"><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9a53a4119742cd8c03299d2412a9686aa58f6354f8458574adfe20e35fcb167e1" name="fineness"><default>1</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a0f650a4943aef8b24bd8a8f35be7c63e" name="type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aae575dc41f975e6ff69fa9fea50570eb" name="base_type"><purpose>The base_type of this class. </purpose><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ac420df739b4528d4a8fa5d78c4909ddf" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a57f5dfcef78ec81aad7348ca52d23126" name="joint_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a1b1cc36c25d76fee6002a49954f79d9c" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a5d5449ac3a9e2b3c842a887123baf570" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ab7cf3b72244c5f7a4ace05cde3f307b7" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a4bffa0819c370d741817c799886ef717" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ae4501ed8abc50cbddaa38b9a2d04d8b6" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a489ff8bed8e3ed2249637fba95ebbec5" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a5ac0ec9bbf7a1d6107d9f104ee8e4e24" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a8c0f38bc44b558961b7820e8912a9881" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1af28d2fb36d17dcdbcb69437355a68836" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a7c6b31beb3349e5d28903472d3e5cdbc" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a7eaf7f7d1e038ec40a7a875d06a86c4b" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1af7d18f0d0c355d137bd4b99fa90ffb1e" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ae25e0223e05d9ec1d36fcc38d4a4b4de" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a1ad00d5d0571819e9ae3fd444dd8dc55" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a07cc53b2cf45d5ae20bb9e5acf6397e4" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a4d15b0e7afcd579a32177799ec100285" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a333a533a34a642bf115d254e31eb7127" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a50577a9f0af1f23daf9440556f3011be" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ad21a16581d0ad58e91f7cb585e3cfc3c"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a695e48fe630e229c9e9db85423dddb36"><parameter name="src"><paramtype>const <classname>interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a9187f36a8f39d3e4e5cbb99ffef9ce85" specifiers="explicit"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aded993f4961bf80e7681f639cfadc1f3" specifiers="explicit"><parameter name="value"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a3420cdfdb7887bafdfc241710eac2e80" specifiers="explicit"><parameter name="itv"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a838eaa5feab77c738e941c919c829712" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a2d0125bfbf2229e0ea9b15d567cdf674"><type><classname>interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1ab5214206f73516698e0934baa9d9492d"><parameter name="src"><paramtype><classname>interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1aa39bb43defd635eec5536a493bb17156"><type><classname>interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a0c92b82507e78839d49160ef2f819cdd" name="handle_inserted"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a44f563fc84523b139b8aa6d350b9fb3e" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set_1a0b342bca965b9436d1987a90fbf967da" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655_1a1a9ce0ebd3280765d7f6b502dc3a7aca" name="type"><type>is_interval_container&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_1f9e54d138dc81647418dc5850e3c655_1a5bde895f144a5176e478c581701d3a05" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_interval_joiner"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1ab75eff75537cb901ee19dc03aa496b90" name="type"><type>is_interval_joiner&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__joiner_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a30b1949129bff63aaeb06a90f8087b9c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1afc5acd716b8c1d59366be5a12afb8216" name="type"><type>is_set&lt; <classname>icl::interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a253d703b35a8961b4e1200e4bcde2af8" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1abbb921a0ade134784dd3f0b010768dbe" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.interval__traits_8hpp" name="boost/icl/interval_traits.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="difference_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4_1a15988babdacf7dbeb5fd3bb6bb7ade0c" name="domain_type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01interval__traits_3_01Type_01_4_01_4_1aee42e033e10e9e1e9de35c928c399cc5" name="type"><type>difference_type_of&lt; domain_type &gt;::type</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1domain__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="domain_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1domain__type__of_3_01interval__traits_3_01Type_01_4_01_4_1a5ae2d8a21c6a790cfd67928a683ad171" name="type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits" name="interval_traits"><template>
      <template-type-parameter name="Type"/>
    </template><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1ad3c4055c6ede3ec7e5fda3efa0ea8f6d" name="type"><type><classname>interval_traits</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1afacc51e128aff21893f234cf8dd5262c" name="domain_type"><type>domain_type_of&lt; Type &gt;::type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a26ae4eaf01a6219e29ff2d553ebc00fa" name="construct" specifiers="static"><type>Type</type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a69cfa2ef0a508c4dbdc2e7155ea94cf1" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const Type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_1a66d56233dd785aa04ea64224a117fb8c" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const Type &amp;</paramtype></parameter></method>
</method-group>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4" name="size_type_of"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>interval_traits&lt; Type &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4_1ac2a31a85aef9fd22b83ec0562c470693" name="domain_type"><type><classname>interval_traits</classname>&lt; Type &gt;::domain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01interval__traits_3_01Type_01_4_01_4_1ac1a6fd8c8cfaf8633d4922a43f6288e3" name="type"><type>size_type_of&lt; domain_type &gt;::type</type></typedef>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.iterator_8hpp" name="boost/icl/iterator.hpp">
<namespace name="boost">
<namespace name="icl">
<class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator" name="add_iterator"><template>
      <template-type-parameter name="ContainerT"/>
    </template><purpose>Performes an addition using a container's memberfunction add, when operator= is called. </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a1a577b6896fbb512e7b4a2f3bd8d9f5c" name="container_type"><purpose>The container's type. </purpose><type>ContainerT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1adf7617cd3fa3fc594a3885bc4316f222" name="iterator_category"><type>std::output_iterator_tag</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a8e050332165fe9d49594b99580b96e25" name="value_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1affdbd94ecb410069bc283b42311d4fb4" name="difference_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1aa8e51e014e8bcc199e59a66d660d4003" name="pointer"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a354e6a74394499395a57f8adfe5e4698" name="reference"><type>void</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1afa1670fa1e0a1beff909e121f37ded1a"><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter"><paramtype>typename ContainerT::iterator</paramtype></parameter><description><para>An <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator">add_iterator</link> is constructed with a container and a position that has to be maintained. </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1aa5b3e523c40acaa2fcbc81b80104dc25"><type><classname>add_iterator</classname> &amp;</type><parameter name="value"><paramtype>typename ContainerT::const_reference</paramtype></parameter><description><para>This assignment operator adds the <computeroutput>value</computeroutput> before the current position. It maintains it's position by incrementing after addition. <sbr/>
 </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a28235007154cc452580f20e71446ee90" name="operator*"><type><classname>add_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a408435f1fca79b9a22a7200d570bdf47" name="operator++"><type><classname>add_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator_1a654ff758e6c501d2b032ce1d7c203595" name="operator++"><type><classname>add_iterator</classname> &amp;</type><parameter name=""><paramtype>int</paramtype></parameter></method>
</method-group>
</class><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator" name="insert_iterator"><template>
      <template-type-parameter name="ContainerT"/>
    </template><purpose>Performes an insertion using a container's memberfunction add, when operator= is called. </purpose><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a0b2fd6e40fa6def810cc5ca719a0d82b" name="container_type"><purpose>The container's type. </purpose><type>ContainerT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1af2d86d03167bb3ad77f2c53de38a364b" name="iterator_category"><type>std::output_iterator_tag</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1af7f6861d526ef097bd77db7ec8c540c8" name="value_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a3c4d940d910785daa7b3a50f8f67b9ef" name="difference_type"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a0d87c578a2b202b85f0ce0742f5ce865" name="pointer"><type>void</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a1ded0a6a253216fe6a76fa0b98721a96" name="reference"><type>void</type></typedef>
<method-group name="public member functions">
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a09e18dc67bf801de4ebdf3b60a99f21d"><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter"><paramtype>typename ContainerT::iterator</paramtype></parameter><description><para>An <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator">insert_iterator</link> is constructed with a container and a position that has to be maintained. </para></description></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1adcb608fae8820de59cd1336d0781bf6f"><type><classname>insert_iterator</classname> &amp;</type><parameter name="value"><paramtype>typename ContainerT::const_reference</paramtype></parameter><description><para>This assignment operator adds the <computeroutput>value</computeroutput> before the current position. It maintains it's position by incrementing after addition. <sbr/>
 </para></description></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a94e679fa5519c815de2ef89698b98b0e" name="operator*"><type><classname>insert_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1ad00718c56bd949b51c1ca8f4823941d1" name="operator++"><type><classname>insert_iterator</classname> &amp;</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator_1a6f86f4b98d00ddfdcfb5abfada169c68" name="operator++"><type><classname>insert_iterator</classname> &amp;</type><parameter name=""><paramtype>int</paramtype></parameter></method>
</method-group>
</class>



<function id="doxygen.interval_container_library_reference.iterator_8hpp_1a263c3021400b9da6addea4346bb6d2e7" name="adder"><type><classname>add_iterator</classname>&lt; ContainerT &gt;</type><template>
          <template-type-parameter name="ContainerT"/>
          <template-type-parameter name="IteratorT"/>
        </template><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter_"><paramtype>IteratorT</paramtype></parameter><description><para>Function adder creates and initializes an <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1add__iterator">add_iterator</link> </para></description></function>
<function id="doxygen.interval_container_library_reference.iterator_8hpp_1abf2acdf82fc5926c2d3defdf2d1a46c5" name="inserter"><type><classname>insert_iterator</classname>&lt; ContainerT &gt;</type><template>
          <template-type-parameter name="ContainerT"/>
          <template-type-parameter name="IteratorT"/>
        </template><parameter name="cont"><paramtype>ContainerT &amp;</paramtype></parameter><parameter name="iter_"><paramtype>IteratorT</paramtype></parameter><description><para>Function inserter creates and initializes an <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1insert__iterator">insert_iterator</link> </para></description></function>




</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.left__open__interval_8hpp" name="boost/icl/left_open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2941413041681eb3c2300c543ca5f0ba" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1f72fc7052bde3987c79cf59fcd1f39a" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_left_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1acd06823221971e699b566246d50f7f99" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a154180748aa6f19758ea37eac334a87f" name="interval_type"><type><classname>icl::left_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0014e3129fa1850cd588a855a2efc89c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1b4b53511a0ea069cc67826fec0c7e70" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1af99871b61344a3445eca679d888fbf2f" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1affa09ea5352c997e03233815d42c8029" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval" name="left_open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a6de77af28cfddbb8f686e5b5702b1896" name="type"><type><classname>left_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a9aefead5581f81b193f29efc468a2068" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1ae56333303a78c9e175dbed4ac9149fb2" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a36fbe665856f2b5005f2ebf0619c702b"><description><para>Default constructor; yields an empty interval <computeroutput>(0,0]</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a86f0f5e8bf20efd425bb7c3373c46ed9" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a left-open singleton interval <computeroutput>(val-1,val]</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1a2e695169f7d391fd236aee89078a1333"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1aeb579374fb7e5b93f07f382befcee1ba" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1left__open__interval_1aa2b981cca3515d2121aace7be9d0fdea" name="upper" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a4c54e5202f2218c1b47a0cce560261fc" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::left_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1left__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2898b0205d047e445b562bd893eebcb6" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::left_open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.map_8hpp" name="boost/icl/map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e_1a5c3cadd9d06dc36667e21e2db942dd84" name="type"><type>absorbs_identities</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_d848903fce2dcb02058418d551525a3e_1a1fcd90b70d83a7fd2e3518f04eff19ec" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>Traits::absorbs_identities</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b_1a9fb5e00049c46929d72777c7f2515ed4" name="type"><type>has_inverse&lt; <classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Co8cdfe4b7c33a741b02e3d008f445e81b_1a54ee86ebf006fa50f0f2335be5e8c56f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2_1ae2afabede979bcc0778854b92fa44550" name="type"><type>is_map&lt; <classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compare08b317b44f13dc95a3a2eb000dfd90b2_1a1c448589f07a35816cc27db9e65e9a45" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3_1a7a45dcc62eb9610b2a9ea4ba48d4fba1" name="type"><type>is_total</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_01Compaf73d73db6aca601aa482cf3b6104f7a3_1adf08bcb9a78eba8b01249b9cd0f5bb39" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>Traits::is_total</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map" name="map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="private">ICL_IMPL_SPACE::map&lt; DomainT, CodomainT, ICL_COMPARE_DOMAIN(ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), DomainT), std::allocator&lt; std::pair&lt; const DomainT, CodomainT &gt; &gt; &gt;</inherit><purpose>Addable, subractable and intersectable maps. </purpose><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="has_set_semantics"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01false_01_4_1a753f0817c3406740bae7e85a312bc63a" name="subtract" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name=""><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01false_00_01true_01_4_1a2295b4580b492b8e6684fc5209ffcda7" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name=""><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4_1a399b070368d51783e824685bd5eaedfd" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01false_01_4_1ad2b886f01b68cdbe1c5deb01a67da164" name="subtract" specifiers="static"><type>void</type><parameter name=""><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name="co_value"><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4" name="on_codomain_model"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4_1a622fcd7846acf6120d3c40f39310ffdc" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__codomain__model_3_01Type_00_01true_00_01true_01_4_1a86901684c3c5473020ac4b887b93c5b4" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="it_"><paramtype>typename Type::iterator</paramtype></parameter><parameter name="co_value"><paramtype>const typename Type::codomain_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01false_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01false_01_4_1a12fcad0e63601eb1f1a8104ca6e29636" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01true_01_4" name="on_definedness"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__definedness_3_01Type_00_01true_01_4_1a130883f96f62a3c740492c9f7c1f8e33" name="add_intersection" specifiers="static"><type>void</type><parameter name="section"><paramtype>Type &amp;</paramtype></parameter><parameter name="object"><paramtype>const Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total_invertible"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1a48c095fc247a54669964397ee1d9f628" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1af33eddb58b1f3b0904fd8940b868069a" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01false_01_4_1ab56832f360208c24585c325645143df5" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4" name="on_invertible"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1a131bde9e1ea5d14ff7bd921d3d5e560a" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1a75b3f20cac9dedc108b98ecad70e0f2a" name="inverse_codomain_combine"><type>Type::inverse_codomain_combine</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__invertible_3_01Type_00_01true_01_4_1a32184a6ab4e0dd59b707811df1967e4a" name="subtract" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
      <template-nontype-parameter name="is_total"><type>bool</type></template-nontype-parameter>
      <template-nontype-parameter name="absorbs_identities"><type>bool</type></template-nontype-parameter>
    </template></struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a2cf91d724e51bbb17a0fc117000d1b65" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1ae415cec9a44af863b6cd5d710aef9346" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1ad702397ba546254e7f7c790d1fd67b5b" name="iterator"><type>Type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a0b223b87332509dad0e4573decf0e8ab" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01false_01_4_1a74b68b6d59626e5b16e2f37a36c1aa9c" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>false</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a918b2cd771d63cb12ca1a06629324c94" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1ab7795aae0df7bdcff423105e725514a5" name="codomain_type"><type>Type::codomain_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1ac78be9087fc77bb06374bb62afb27906" name="iterator"><type>Type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a78909cdc7cb0028b905dda1bfc95e190" name="inverse_codomain_intersect"><type>Type::inverse_codomain_intersect</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01false_00_01true_01_4_1a7861e56f61fb4341f0159abd0fc7c9e8" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>false</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a84645ba7330fa93896bd9f05b7f9e388" name="element_type"><type>Type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1af5bdd7ae832fd04138794ee03020db63" name="codomain_type"><type>Type::codomain_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01false_01_4_1a40705b7210b2f0b2b3156614183e74d0" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4" name="on_total_absorbable"><template>
      <template-type-parameter name="Type"/>
    </template><specialization><template-arg>Type</template-arg><template-arg>true</template-arg><template-arg>true</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1a6add3f10b46027856a17107cbd179b83" name="element_type"><type>Type::element_type</type></typedef>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1map_1_1on__total__absorbable_3_01Type_00_01true_00_01true_01_4_1ab27e102eb81e0c609ed33e38e30bd91a" name="flip" specifiers="static"><type>void</type><parameter name="object"><paramtype>Type &amp;</paramtype></parameter><parameter name=""><paramtype>const typename Type::element_type &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a71f72caa4aa521231803956f167f0fc0" name="allocator_type"><type>Alloc&lt; typename std::pair&lt; const DomainT, CodomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aec37dd5377d001ca07047a5a14763264" name="type"><type><classname>icl::map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a7024f59432ffd554c43d9dab17193792" name="base_type"><type>ICL_IMPL_SPACE::map&lt; DomainT, CodomainT, ICL_COMPARE_DOMAIN(Compare, DomainT), allocator_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1adb29eb658266c9cd2a2aa6728d62b1f7" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a6091c2a26a00083fd850974863eb343b" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a37e5b439ae730b609cba655c50334072" name="domain_param"><type>boost::call_traits&lt; DomainT &gt;::param_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a30227f23ef949632a540905c9347355c" name="key_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1af27a834a07dc96860925a593c094741c" name="codomain_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa00203759b55d40268f500c038fd8a48" name="mapped_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a5f5f507c7539d59e0c4c908fe8f097dd" name="data_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8d109da1ba43fabd1d682db70e713acd" name="element_type"><type>std::pair&lt; const DomainT, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab7cdcd0a5d24ece3af1218cd2e131951" name="value_type"><type>std::pair&lt; const DomainT, CodomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac1e6e50ff05fb942427c335e05dd4551" name="key_compare"><type>domain_compare</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afa0a3b08e9e94562293b16476159bd70" name="inverse_codomain_combine"><type><classname>inverse</classname>&lt; codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a9057da402d172322c13be5b524a6ae18" name="codomain_intersect"><type>mpl::if_&lt; has_set_semantics&lt; codomain_type &gt;, ICL_SECTION_CODOMAIN(Section, CodomainT), codomain_combine &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afa9ad4bcb061cb57b7949b17edbcf5bc" name="inverse_codomain_intersect"><type><classname>inverse</classname>&lt; codomain_intersect &gt;::type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a323d1acd842c6612e35e1e0d0576b5db" name="value_compare"><type>base_type::value_compare</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a2043183ee1f3c9e0133d119f7874b677" name="set_type"><type>ICL_IMPL_SPACE::set&lt; DomainT, domain_compare, Alloc&lt; DomainT &gt; &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a64c8c6c8212743dbdf84d162a753bf80" name="key_object_type"><type>set_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1adca8622874dc5b9b11ea300e49739073" name="on_identity_absorbtion"><type>on_absorbtion&lt; <classname>type</classname>, codomain_combine, Traits::absorbs_identities &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad66d817c75d1ac5012bb8d512c2a514b" name="pointer"><type>base_type::pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a19f03bcb2ebb181824463955c755b001" name="const_pointer"><type>base_type::const_pointer</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad1ddb294bbb381a375ceb2c06b083e89" name="reference"><type>base_type::reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a0a2cdd14c8b9b06ece8d39fa9d515631" name="const_reference"><type>base_type::const_reference</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa41a7f3679dba90fd386dd44009e663e" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a83bbd8facbf88e6b9b23182e954ba49d" name="const_iterator"><type>base_type::const_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abd0ff47daef0a238b6ae35cade36c6b8" name="size_type"><type>base_type::size_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aea4b3a4cc7e596e55bff619939362dd0" name="difference_type"><type>base_type::difference_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a760e099d7eade4132fd0090371d85531" name="reverse_iterator"><type>base_type::reverse_iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a13d1cf1f550bcaca938c1108fa63afaa" name="const_reverse_iterator"><type>base_type::const_reverse_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a450ef1131c1a47de15d30029c2989422" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a670de8639ea422cd993b624e7f21d5d6" name="ICL_COMBINE_CODOMAIN"><type>typedef</type><parameter name=""><paramtype>Combine</paramtype></parameter><parameter name=""><paramtype>CodomainT</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab0c73660c14c9c71bc1add5fa6772b04" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>element_type</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a372db6684944790ee73da82ad16b321c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>_total</paramtype><default>(Traits::is_total)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abd448b89c42877a75b67b386d061d05c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>_absorbs</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1adccbb3f10cc5a08c8ee71717a7c01994" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>total_invertible</paramtype><default>(mpl::and_&lt; is_total&lt; type &gt;, has_inverse&lt; codomain_type &gt; &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a15d4eb07a3f45b4f5375e6dccb7e7595" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>is_total_invertible</paramtype><default>(Traits::is_total &amp;&amp;has_inverse&lt; codomain_type &gt;::value)</default></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1af8429f16ab04006e60845fa179f5a7b3" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>int</paramtype></parameter><parameter name=""><paramtype>fineness</paramtype><default>4</default></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa9f57af05ed185dc4c02adc3cfeb3918"/>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab410f446c3b0dc5b89b22cae8b21b639"><parameter name="comp"><paramtype>const key_compare &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa184086cd491403817fe7e7516dce633"><template>
          <template-type-parameter name="InputIterator"/>
        </template><parameter name="first"><paramtype>InputIterator</paramtype></parameter><parameter name="past"><paramtype>InputIterator</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ab96434c751abee81d6d76e5671ce2ac7"><template>
          <template-type-parameter name="InputIterator"/>
        </template><parameter name="first"><paramtype>InputIterator</paramtype></parameter><parameter name="past"><paramtype>InputIterator</paramtype></parameter><parameter name="comp"><paramtype>const key_compare &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a8c0d115b2de9304c1d12233556154b64"><parameter name="src"><paramtype>const <classname>map</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ae32284da11ca5c516a7d79956a9b70fb" specifiers="explicit"><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a0672fd322b23beba610a556f037fc44b"><parameter name="src"><paramtype><classname>map</classname> &amp;&amp;</paramtype></parameter></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afc7faf2e5029c25159689f1bdca1c9e9"><type><classname>map</classname> &amp;</type><parameter name="src"><paramtype><classname>map</classname></paramtype></parameter></copy-assignment>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1afa941431ab31254b6ad4dd8959703140" name="swap"><type>void</type><parameter name="src"><paramtype><classname>map</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a1bae2e97d06ae6bdb2c3950f56d63988" name="contains" cv="const"><type>bool</type><template>
          <template-type-parameter name="SubObject"/>
        </template><parameter name="sub"><paramtype>const SubObject &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a66042a0cb7dc4a2cab0a14aa56baa624" name="within" cv="const"><type>bool</type><parameter name="super"><paramtype>const <classname>map</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21" name="iterative_size" cv="const"><type>std::size_t</type><description><para><computeroutput><link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21">iterative_size()</link></computeroutput> yields the number of elements that is visited throu complete iteration. For interval sets <computeroutput><link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a88f0618ca8f929849228619ee7b7ab21">iterative_size()</link></computeroutput> is different from <computeroutput>size()</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac60f976ed30982e8d893bf194e83b64f" name="operator()" cv="const"><type>codomain_type</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter><description><para>Total select function. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1acc83c29efbeee39d6da5a1c8609dde15" name="add"><type><classname>map</classname> &amp;</type><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter><description><para><computeroutput>add</computeroutput> inserts <computeroutput>value_pair</computeroutput> into the map if it's key does not exist in the map. If <computeroutput>value_pairs's</computeroutput> key value exists in the map, it's data value is added to the data value already found in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a686dc07e78206e48c77aba636e99d9c9" name="add"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter><description><para><computeroutput>add</computeroutput> add <computeroutput>value_pair</computeroutput> into the map using <computeroutput>prior</computeroutput> as a hint to insert <computeroutput>value_pair</computeroutput> after the position <computeroutput>prior</computeroutput> is pointing to. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad4c8fa8f14ac8c3c206ce6e1188594d9" name="subtract"><type><classname>map</classname> &amp;</type><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>If the <computeroutput>value_pair's</computeroutput> key value is in the map, it's data value is subtraced from the data value stored in the map. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a55063fdb30a715d5d1bc997f2347dcfb" name="subtract"><type><classname>map</classname> &amp;</type><parameter name="key"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a338b98324caeede0b8877a01adf69c34" name="insert"><type>std::pair&lt; iterator, bool &gt;</type><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1aa3c0023f3df6b37382f660f16699b4dc" name="insert"><type>iterator</type><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a4866790648077c795f569406d042610a" name="insert"><type>iterator</type><template>
          <template-type-parameter name="Iterator"/>
        </template><parameter name="first"><paramtype>Iterator</paramtype></parameter><parameter name="last"><paramtype>Iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a37c5a06161055bce7087441e40981f87" name="set"><type><classname>map</classname> &amp;</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>With <computeroutput>key_value_pair = (k,v)</computeroutput> set value <computeroutput>v</computeroutput> for key <computeroutput>k</computeroutput> </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ad3dd1d02c86a06f5674b47a2504bcbce" name="erase"><type>size_type</type><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>erase <computeroutput>key_value_pair</computeroutput> from the map. Erase only if, the exact value content <computeroutput>val</computeroutput> is stored for the given key. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a136f49340b7da692a4d605000926b1df" name="add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype><classname>map</classname> &amp;</paramtype></parameter><parameter name="key_value_pair"><paramtype>const element_type &amp;</paramtype></parameter><description><para>The intersection of <computeroutput>key_value_pair</computeroutput> and <computeroutput>*this</computeroutput> map is added to <computeroutput>section</computeroutput>. </para></description></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a797451316f888ff6ba400c1a5a98ef69" name="flip"><type><classname>map</classname> &amp;</type><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a7b3331e07fbd751c03eb0ceeff14b39d" name="_add"><type><classname>map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="addend"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a32e15c4adf85dd266979f1d580787721" name="_subtract"><type><classname>map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Alloc &gt; &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="minuend"><paramtype>const value_type &amp;</paramtype></parameter></method>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a54353a2ec56d7030397d6ea555b67c5e" name="_add"><type><classname>map</classname> &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a2426aeca96614823f6aff06bd749b6e0" name="_add"><type>iterator</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior"><paramtype>iterator</paramtype></parameter><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1ac1243d4cc9b7fa6f2f74e17c1a88ad27" name="_subtract"><type><classname>map</classname> &amp;</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="value_pair"><paramtype>const element_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1a23b2e2c92e335d7f223b72efadfb72fa" name="total_add_intersection" cv="const"><type>void</type><template>
          <template-type-parameter name="FragmentT"/>
        </template><parameter name="section"><paramtype><classname>type</classname> &amp;</paramtype></parameter><parameter name="fragment"><paramtype>const FragmentT &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1map_1abe746e6f274ba9fb8e16fac2337d4b15" name="partial_add_intersection" cv="const"><type>void</type><parameter name="section"><paramtype><classname>type</classname> &amp;</paramtype></parameter><parameter name="operand"><paramtype>const element_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber" name="partial_absorber"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1a6412dfa83b483450c6e0a94a93fa0bdd" name="@3"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1a6412dfa83b483450c6e0a94a93fa0bdda081fee5e0c9d3f04d1c2679e073c5573" name="absorbs_identities"><default>true</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1aa7f5f0eba3643ac7f59b9f1a5141f480" name="@4"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__absorber_1aa7f5f0eba3643ac7f59b9f1a5141f480aaedde500cdc54c75b00ff69a92f615d5" name="is_total"><default>false</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher" name="partial_enricher"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1a3fc135e997d183e7882495ea89158d6d" name="@5"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1a3fc135e997d183e7882495ea89158d6dab99f2900520e7c140e9206e1b3071605" name="absorbs_identities"><default>false</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1abbcb1e9131dadfde3dc3ce139ae8bea3" name="@6"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1partial__enricher_1abbcb1e9131dadfde3dc3ce139ae8bea3aad4f5f439c62254a6911271063ed98d5" name="is_total"><default>false</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber" name="total_absorber"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a455e72ad7b7fe5a2a3f5235345adcaa4" name="@7"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a455e72ad7b7fe5a2a3f5235345adcaa4a225e7b212b5561889924429b1364c916" name="absorbs_identities"><default>true</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a101f3d5972ca792a11b817dafb4f3242" name="@8"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__absorber_1a101f3d5972ca792a11b817dafb4f3242abcfbf239a3fe6bdf8bae6ddb9054cde3" name="is_total"><default>true</default></enumvalue></enum>
</struct><struct id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher" name="total_enricher"><enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a565524466425cd095918f1077a20d403" name="@9"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a565524466425cd095918f1077a20d403adafc4d31d6413fbcd656afd54b5a674d" name="absorbs_identities"><default>false</default></enumvalue></enum>
<enum id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a94ff38bc72e458fdf099eaaa4a60f305" name="@10"><enumvalue id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1total__enricher_1a94ff38bc72e458fdf099eaaa4a60f305a52b2a56bbd0fd16ea6ec7999fc56a914" name="is_total"><default>true</default></enumvalue></enum>
</struct><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_b94394d96f3b5ccca17e081d667ad073" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1map_3_01DomainT_00_01CodomainT_00_01Traits_00_b94394d96f3b5ccca17e081d667ad073_1a6b14f5b2f0970b85dcc802005a98f6b8" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.open__interval_8hpp" name="boost/icl/open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6cad5ceeeb7140916019eb911356f9ad" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a05889398ae6a7e10a5c947461f1867ed" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a85f6729a7469291be2206085f35f8e64" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a16add3e1b305caaad92796f7f6228615" name="interval_type"><type><classname>icl::open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7cf53435052165042c374d42b51dab22" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2ebb741bbd831b3e8c8f59b3fada9e53" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a7175d340d9df7130a320ce7fdf752741" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac3478041d4c6b2b77098eb5f8ac58890" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval" name="open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a1e22b065f474901bdf841f508c6399fa" name="type"><type><classname>open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1abd889e1c00a0294ddc64f04cff8116df" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a056f65361233d276e237a2b242261b2e" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1af739730dbd840e85ebe3c26a84563da3"><description><para>Default constructor; yields an empty interval <computeroutput>(0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1af563ab550396ed865b6ada8b32ff2d28" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for an open singleton interval <computeroutput>(val-1,val+1)</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a1f5aec79cf72695b722bc77a487b7959"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1a4ddcf95513dcadc497e419f0de7c6a61" name="lower" cv="const"><type>DomainT</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1open__interval_1ac5baa9fb3d63ab5f0413ee3aa19c6664" name="upper" cv="const"><type>DomainT</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a579bee96b8d088a0f03c08aa8ad35e7d" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ae2c07831b82f0778bf0a74217ffd0c96" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.ptime_8hpp" name="boost/icl/ptime.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1posix__time_1_1ptime_01_4" name="difference_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1difference__type__of_3_01boost_1_1posix__time_1_1ptime_01_4_1a7c639928031916e9b01d13e4d7cc8bd7" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4_1a78199572cb983fa198482bb95a56cb13" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1ptime_01_4_1a14a543fe8a1b719893bf4debc3996038" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4" name="has_difference"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4_1ad371a36df4dcefe72de54e3fdd556410" name="type"><type>has_difference</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__difference_3_01boost_1_1posix__time_1_1time__duration_01_4_1a7f1a5f8366d7e17fc300cc6506953b4c" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4_1a8be0e0047c1bac0e9018c4cf7c092f54" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1ptime_01_4_1aa29a9bae43ec17794d80db1e6e09b91a" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4" name="is_discrete"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4_1a962751eba5995b6c644857fc04126782" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1posix__time_1_1time__duration_01_4_1a32ce634b98a6c54457073241cb4c4e09" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1ptime_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::ptime</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1ptime_01_4_1aa764bb26672b5961cacc721f81e5e2d0" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1time__duration_01_4" name="size_type_of"><template>
    </template><specialization><template-arg>boost::posix_time::time_duration</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1size__type__of_3_01boost_1_1posix__time_1_1time__duration_01_4_1a7dd653decf3ee87b73cdca35655563e8" name="type"><type>boost::posix_time::time_duration</type></typedef>
</struct-specialization><function id="doxygen.interval_container_library_reference.ptime_8hpp_1aa7d00693fd41952db07bcbc8946243b0" name="operator++"><type>boost::posix_time::ptime</type><parameter name="x"><paramtype>boost::posix_time::ptime &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a520f469d73d8700fd9bce9bbb6584d92" name="operator--"><type>boost::posix_time::ptime</type><parameter name="x"><paramtype>boost::posix_time::ptime &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a309adf571b170d952c75e11dec1a1629" name="operator++"><type>boost::posix_time::time_duration</type><parameter name="x"><paramtype>boost::posix_time::time_duration &amp;</paramtype></parameter></function>
<function id="doxygen.interval_container_library_reference.ptime_8hpp_1a90ded08522f47ea99448ac453b886375" name="operator--"><type>boost::posix_time::time_duration</type><parameter name="x"><paramtype>boost::posix_time::time_duration &amp;</paramtype></parameter></function>






</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.rational_8hpp" name="boost/icl/rational.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="has_inverse"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a3e7b062c37129b7a39ffb3c41b2b9630" name="type"><type>has_inverse</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01boost_1_1rational_3_01Integral_01_4_01_4_1ae8c1fdad96c7cf86cd729f331f44ca39" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(boost::is_signed&lt; Integral &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_continuous"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a9fbe4b93184e4e8b668c9493c7b82049" name="type"><type>is_continuous</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__continuous_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a30865cef8db79a74e5c52c67c336ca91" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_discrete"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a3b973b568c399c4663725c00b5470787" name="type"><type>is_discrete</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__discrete_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a045d4a383725586dfe422ca800ab1b85" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>false</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4" name="is_numeric"><template>
      <template-type-parameter name="Integral"/>
    </template><specialization><template-arg>boost::rational&lt; Integral &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a4eaef40b84e0fc4fd7718dbc64ef2557" name="type"><type>is_numeric</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__numeric_3_01boost_1_1rational_3_01Integral_01_4_01_4_1a77dabd1cda283a7ee7bd5d2bad3e4476" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.right__open__interval_8hpp" name="boost/icl/right_open_interval.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_bound_type"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1af594af675097172de36a85415a27ffdf" name="type"><type>interval_bound_type</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__bound__type_3_01right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a998cd71c2f1d2a9c6c38c9667e8b21f1" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bound_type</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>interval_bounds::static_right_open</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="interval_traits"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac67d355cdf55c580890a5111967f41a6" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a1ce6aba34147f384c3db98a8296a75d6" name="interval_type"><type><classname>icl::right_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1ac72925b744e4e11f4a842b5ac75bd870" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
</method-group>
<method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a0775cee6a2fd08dac05456317647df80" name="construct" specifiers="static"><type><classname>interval_type</classname></type><parameter name="lo"><paramtype>const domain_type &amp;</paramtype></parameter><parameter name="up"><paramtype>const domain_type &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a2aa581dd05499927bc1f8bda3823bb31" name="lower" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1interval__traits_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a6e6f8930c5f7a80745549ff1317d8595" name="upper" specifiers="static"><type>domain_type</type><parameter name="inter_val"><paramtype>const <classname>interval_type</classname> &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval" name="right_open_interval"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
    </template><typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1af48fa1cdeba7758beeab903df5030469" name="type"><type><classname>right_open_interval</classname>&lt; DomainT, Compare &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a90b6a6fd5c79835024a84d4ef22344c8" name="domain_type"><type>DomainT</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1abfccbe2354d86432ca1200a16d1fda4c" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a6dedb62939bd1d5a38211313435d2d53"><description><para>Default constructor; yields an empty interval <computeroutput>[0,0)</computeroutput>. </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1aff33261f6109e7967326155c323e37e9" specifiers="explicit"><parameter name="val"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Constructor for a singleton interval <computeroutput>[val,val+1)</computeroutput> </para></description></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1af6a75838e31db44b8fc453b7c1bd2c58"><parameter name="low"><paramtype>const DomainT &amp;</paramtype></parameter><parameter name="up"><paramtype>const DomainT &amp;</paramtype></parameter><description><para>Interval from <computeroutput>low</computeroutput> to <computeroutput>up</computeroutput> with bounds <computeroutput>bounds</computeroutput> </para></description></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a0d65313b40ebbf8b9b6e64005c82356e" name="lower" cv="const"><type>domain_type</type></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1right__open__interval_1a24683247720a17ce8270d93911aa3ba8" name="upper" cv="const"><type>domain_type</type></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1adb5d7ca7ada9a801f36ac0bb15789bb4" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4" name="value_size"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::right_open_interval&lt; DomainT</template-arg><template-arg>Compare &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1value__size_3_01icl_1_1right__open__interval_3_01DomainT_00_01Compare_01_4_01_4_1a78d9450a9201e1587255a81762544ce5" name="apply" specifiers="static"><type>std::size_t</type><parameter name=""><paramtype>const <classname>icl::right_open_interval</classname>&lt; DomainT &gt; &amp;</paramtype></parameter></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.separate__interval__set_8hpp" name="boost/icl/separate_interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170_1a19444b224473f75cc208efbde1e0435c" name="type"><type>is_interval_container&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1separate__interval__set_3_01DomainT_00_71b40d20ff5772836b8a86132a267170_1ab0cee8d8023804b90dadfa3a3c85083f" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd" name="is_interval_separator"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd_1a282422aba30caf223d20be98d6cc6fbe" name="type"><type>is_interval_separator&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__separator_3_01icl_1_1separate__interval__set_3_01DomainT_00_6fb331b6ef835fa8d8547391adb530bd_1a53d79e572e8a585c38b152cb7600c759" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1a0db633292768be1a184be644f6a1983c" name="type"><type>is_set&lt; <classname>icl::separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1acb95b78860e03b1ca46bb18316af7adb" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set" name="separate_interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; separate_interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>Implements a set as a set of intervals - leaving adjoining intervals separate. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a41852dd4980472168867e39636081040" name="@2"><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a41852dd4980472168867e39636081040ae5583f630ca83a9b0be25d1c9fe09268" name="fineness"><default>2</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab51730f5be56f52a4c1af1dd88098a56" name="type"><type><classname>separate_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ace5e52264f159d8fe47f8339deb7de93" name="base_type"><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1adeea6002e049b8938c8c3262451279b1" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a3b5bdae02000b2e7a2a45b3b0286d9f8" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a2af458de17ade251670d3a80ea5ba77f" name="joint_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a2d1345b16a1ed41d07d3be85a0f06f87" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a50e0fab197aab11baae0a37175541140" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a3707a43b45cbc018b3f2b5689369b053" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a63b8508eb78485cb55c934731c2dc096" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a0ab57e61644b79879d16537916debbd3" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a6b179f8feb3196e24e73dbec7bc15b44" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a9bb2452c5d40e1cf1cd73ca0daee3cc7" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a3d2254d47e2180e9cf65e38d03da5cf2" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a77981336563aa43bcf4a82756f0fc273" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ad88139d1480375636ed5344f62eced04" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a8c034880f551250cdcaadb2b2b726651" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a86bda7637221d2de84ef7c4917ed3ca2" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab607f87abcc3d4fdf5eb619b3d48c34b" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a43a6b2ae77f39f293bfda982e401977c" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ae51ac3e0d2d1613a741b90dc91c3bd36" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ab5fbec0b861cdf8bad53dfc8c10eb53d" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a6b4550568177181e19d27da5a0654244" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ad7475e05e5fef6f0e01f20c43c3fb880"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa584e85f3ada5fc1b06a8f26e53df7ad"><parameter name="src"><paramtype>const <classname>separate_interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a6a5bd81170508706d18488ddd658543c"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa4e50c7cd226e10b8debd4fae6366b61" specifiers="explicit"><parameter name="elem"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a9920a1ba7e976123e807f513b84e2a1d" specifiers="explicit"><parameter name="itv"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1adf88c6697969e61bed379302ffbbce0e" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ae05ad60df303a20b76315814e90b1752"><type><classname>separate_interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1ad0d3d8ac618e758e71931ddfcbbdefbb"><parameter name="src"><paramtype><classname>separate_interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a74208a0b2d8573924625b6f430d21052"><type><classname>separate_interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>separate_interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a1180a1c1bb363a2a73e6fdb39fe5a404" name="handle_inserted"><type>iterator</type><parameter name="inserted_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1a23ac7cea7ac3c5ccf413c2cafe37638d" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1separate__interval__set_1aa5c176e5926fd90784e07abd299acc50" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compad7bee00e4ceddd45e626724bade5258a" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::separate_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1separate__interval__set_3_01DomainT_00_01Compad7bee00e4ceddd45e626724bade5258a_1afb091bf40aecc0395b185c40846643c0" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.set_8hpp" name="boost/icl/set.hpp">
</header>
<header id="doxygen.interval_container_library_reference.split__interval__map_8hpp" name="boost/icl/split_interval_map.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2" name="absorbs_identities"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2_1a019129f9c65517107d67f68510d60948" name="type"><type>absorbs_identities&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1absorbs__identities_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomc27163a55ef5ce9379475ac8d214dae2_1af172512737c0c68c334ce5f382fdc6aa" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::absorbs_identities)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145" name="has_inverse"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145_1af87763ca8f25b7b6cee0b5a4914a184a" name="type"><type>has_inverse&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1has__inverse_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_000e353e1e8911b2d5fd9a94369a40c145_1ad382822f0d00eb13eb8d74afcf2143c9" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(has_inverse&lt; CodomainT &gt;::value)</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb_1a86d08135089945dc5d068624d70ba6ac" name="type"><type>is_interval_container&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__map_3_01DomainT_00_01C2fd24e9829ef2ed3435435c826c696eb_1a7c3e991023f3ceb5dbe22d40c96debcd" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0" name="is_interval_splitter"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0_1a348bf069e6f9a82fe011d8f10a632702" name="type"><type>is_interval_splitter&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__map_3_01DomainT_00_01Co21376016c1d82cf2bf61357890481ad0_1a1f6d073f7c60ed6dc83cd95e72a45e61" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed" name="is_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed_1a587c3814288a147e779cdedaf32a1d4f" name="type"><type>is_map&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__map_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01Tr1ca637ca8e97f879c121d4a446c024ed_1a109561a7feacf58bae47d35bf188704e" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979" name="is_total"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979_1a4c468330fc8793f1b36ef8418b6936d7" name="type"><type>is_total&lt; <classname>icl::split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__total_3_01icl_1_1split__interval__map_3_01DomainT_00_01CodomainT_00_01740bd492ee95ddc97a08453c1963e979_1a6963e7648085c76ed4de083e00259e96" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>(Traits::is_total)</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map" name="split_interval_map"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"><default>icl::partial_absorber</default></template-type-parameter>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type><default>ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type><default>ICL_SECTION_INSTANCE(icl::inter_section, CodomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_map&lt; split_interval_map&lt; DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, CodomainT, icl::partial_absorber, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_COMBINE_INSTANCE(icl::inplace_plus, CodomainT), ICL_SECTION_INSTANCE(icl::inter_section, CodomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>implements a map as a map of intervals - on insertion overlapping intervals are split and associated values are combined. </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a817c69cf536375884168d16a67d9ef1b" name="@1"><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a817c69cf536375884168d16a67d9ef1ba07bfdfcb59a82fb4839da85f6a2ad2a8" name="fineness"><default>3</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a7bdec4a44472699eae0c71c8c5918a58" name="traits"><type>Traits</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a0c184207ce966034f64989e6d4f9a2e8" name="type"><type><classname>split_interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a2b7481ee02af7201195b1c200875f528" name="joint_type"><type><classname>interval_map</classname>&lt; DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a96759bf7a2941c0baa0a07763018d877" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1aa3f2a0c1ea937e8dc4b97d91e9f53b96" name="base_type"><type><classname>interval_base_map</classname>&lt; <classname>type</classname>, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a8e3e3a3bdc3b8a3a548e7d00f0797047" name="domain_type"><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a76fc7472682dbad0b98222a89c7149b0" name="codomain_type"><type>CodomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a4fa76491fe84478e8322ef61c222b390" name="iterator"><type>base_type::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1add5a124fb12a3ef92698b00bfb3e1c34" name="value_type"><type>base_type::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a5408ddacb9c6b5326abcc2a170194dd6" name="element_type"><type>base_type::element_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a2197e05b4d39ca8b9841437f99c4f496" name="segment_type"><type>base_type::segment_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ac14604d336f6b02c1790402769d2973a" name="domain_mapping_type"><type>base_type::domain_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1aac0f477cc485158d06c27bec3d7ef7ec" name="interval_mapping_type"><type>base_type::interval_mapping_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1aa02e76b84f4b2f511af16070f73bb801" name="ImplMapT"><type>base_type::ImplMapT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ad2551abcbb609fe5323a8f540bf43f2f" name="codomain_combine"><type>base_type::codomain_combine</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1acbcba33b3c265157826481714f6793f7" name="interval_set_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a98745216e6cbc9c9cdb8108b612ae3dd" name="set_type"><type><classname>interval_set_type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a423d4d4012e1fb51d3b2f6b07289a96a" name="key_object_type"><type><classname>set_type</classname></type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1abef26c60f21185de2cd215dee1277bf8" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a97c2487608c7c5ae1ce2112dff277ee5"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a4fe725e4506fc0784f4c1bced10dd7d3"><parameter name="src"><paramtype>const <classname>split_interval_map</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a81a3afa7d646306688de6fa0950d7daf" specifiers="explicit"><parameter name="base_pair"><paramtype>const <classname>domain_mapping_type</classname> &amp;</paramtype></parameter></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a1dbf67857dc252ab1ed955d7471b2058" specifiers="explicit"><parameter name="value_pair"><paramtype>const value_type &amp;</paramtype></parameter></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1affd63c8740d329a7296aaaa65c0fc630" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__map">interval_map</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ae8d296f929801bdbe26f8acaded52015"><type><classname>split_interval_map</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_map</classname>&lt; SubType, DomainT, CodomainT, Traits, Compare, Combine, Section, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6a1d797f90712b142eeccd1d109d61d2"><parameter name="src"><paramtype><classname>split_interval_map</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a0f0dafb59097f94cd892e23999c01653"><type><classname>split_interval_map</classname> &amp;</type><parameter name="src"><paramtype><classname>split_interval_map</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a7f8316cea61c1bc0c0ed4aa287299c59" name="handle_inserted" cv="const"><type>iterator</type><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a2e5573f6b63ab0cb4f908b52f32454de" name="handle_inserted" cv="const"><type>void</type><parameter name=""><paramtype>iterator</paramtype></parameter><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6daf822712a429513ff57461864bf037" name="handle_left_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a6e0e6a2e29d70e1f047f898082dca261" name="handle_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a036480ec01dc23904f01a2eb78338669" name="handle_preceeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a730a02838464743cb35df73732fefaa5" name="handle_succeeded_combined"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator</paramtype></parameter><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1a86d1a7756146b754e438164f8c171963" name="handle_reinserted"><type>void</type><parameter name=""><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__map_1ac4aed4356fd9c104a224d5900b67b7b1" name="gap_insert_at"><type>void</type><template>
          <template-type-parameter name="Combiner"/>
        </template><parameter name="it_"><paramtype>iterator &amp;</paramtype></parameter><parameter name="prior_"><paramtype>iterator</paramtype></parameter><parameter name="end_gap"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="co_val"><paramtype>const codomain_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomainaf72ad2f4d27b677b6f16edd4e104d83" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-type-parameter name="CodomainT"/>
      <template-type-parameter name="Traits"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Combine"><type>ICL_COMBINE</type></template-nontype-parameter>
      <template-nontype-parameter name="Section"><type>ICL_SECTION</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_map&lt; DomainT</template-arg><template-arg>CodomainT</template-arg><template-arg>Traits</template-arg><template-arg>Compare</template-arg><template-arg>Combine</template-arg><template-arg>Section</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__map_3_01DomainT_00_01Codomainaf72ad2f4d27b677b6f16edd4e104d83_1a96305df934bfaff5e8ba09e12e44cde6" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
<header id="doxygen.interval_container_library_reference.split__interval__set_8hpp" name="boost/icl/split_interval_set.hpp">
<namespace name="boost">
<namespace name="icl">
<struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652" name="is_interval_container"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652_1a2c397e0d9f787cf532cc5e41c6838974" name="type"><type>is_interval_container&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__container_3_01icl_1_1split__interval__set_3_01DomainT_00_01Cc670a6e1f207b111240cc68657f5c652_1a35b1acb192162744592e58196085968d" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee" name="is_interval_splitter"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee_1a6ec2725ec5a90c571ca46cf653377caa" name="type"><type>is_interval_splitter&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__interval__splitter_3_01icl_1_1split__interval__set_3_01DomainT_00_01Co7366f36a04af9dde493373d60a0101ee_1ae0a956173ed1f4cd734018e088cdca65" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4" name="is_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><typedef id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1aa3bc305bab26b76dc816bfe886e71020" name="type"><type>is_set&lt; <classname>icl::split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt; &gt;</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1is__set_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_00_01Interval_00_01Alloc_01_4_01_4_1ad8606635c2149731243b7efa4ca67f62" name="BOOST_STATIC_CONSTANT"><type/><parameter name=""><paramtype>bool</paramtype></parameter><parameter name=""><paramtype>value</paramtype><default>true</default></parameter></method>
</method-group>
</struct-specialization><class id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set" name="split_interval_set"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type><default>ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)</default></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type><default>ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, Compare)</default></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type><default>std::allocator</default></template-nontype-parameter>
    </template><inherit access="public">boost::icl::interval_base_set&lt; split_interval_set&lt; DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT), ICL_INTERVAL_INSTANCE(ICL_INTERVAL_DEFAULT, DomainT, ICL_COMPARE_INSTANCE(ICL_COMPARE_DEFAULT, DomainT)), std::allocator &gt;</inherit><purpose>implements a set as a set of intervals - on insertion overlapping intervals are split </purpose><enum id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a1132f5e39a074dcbc16cf5b9f4a098b1" name="@0"><enumvalue id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a1132f5e39a074dcbc16cf5b9f4a098b1aec9b4584482b208ec2ced86c83805662" name="fineness"><default>3</default></enumvalue></enum>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1aeb8a22d9a3727952c061688a98abcbe8" name="type"><type><classname>split_interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a248f21c91ebc04c493f6f1d0c615125e" name="base_type"><type><classname>interval_base_set</classname>&lt; <classname>type</classname>, DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a5f886b375725190cfc7c0a63be04c80f" name="joint_type"><type><classname>interval_set</classname>&lt; DomainT, Compare, Interval, Alloc &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ad72ddc18fedcc654de19d84aea49e573" name="overloadable_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a53e18d2f0faeb47037c0511eea04ec6f" name="key_object_type"><type><classname>type</classname></type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a55f6e52f8fb99589d6aaf5bc0ed3ff5c" name="domain_type"><purpose>The domain type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1aae4df2fbc4cf360065791aa4b2a497a6" name="codomain_type"><purpose>The codomaintype is the same as domain_type. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1af5b8d1c2e930e9f475b53d39b8d92f76" name="element_type"><purpose>The element type of the set. </purpose><type>DomainT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a99546f8da0d1e76ea310a5b3be44cf73" name="segment_type"><purpose>The segment type of the set. </purpose><type>interval_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1acc8bc7534b1fd77447d193d48e1be0c9" name="interval_compare"><purpose>Comparison functor for intervals. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a17e1e7fcbb36e2e84acfc2a2aade1407" name="key_compare"><purpose>Comparison functor for keys. </purpose><type>exclusive_less_than&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2da3402c5eca5d7eee4eedecdebd74e4" name="allocator_type"><purpose>The allocator type of the set. </purpose><type>Alloc&lt; interval_type &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ab7f3831110095c1dab456494d86dd39b" name="domain_allocator_type"><purpose>allocator type of the corresponding element set </purpose><type>Alloc&lt; DomainT &gt;</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1aa8bc8ce19a19a5029f28b99e22ec71c6" name="atomized_type"><purpose>The corresponding atomized type representing this interval container of elements. </purpose><type>base_type::atomized_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a5e013c2897189ef3f87a89fb9397381e" name="ImplSetT"><purpose>Container type for the implementation. </purpose><type>base_type::ImplSetT</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1aa2f390f3faf8c09cbc93afef9b9521bd" name="key_type"><purpose>key type of the implementing container </purpose><type>ImplSetT::key_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1af77db5968b3fef7d2eade8ecfef2b730" name="data_type"><purpose>data type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ae16d14f4c3498af35f87b0d3e0c2c061" name="value_type"><purpose>value type of the implementing container </purpose><type>ImplSetT::value_type</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a4586be541b2e4ca025882b940ff1379d" name="iterator"><purpose>iterator for iteration over intervals </purpose><type>ImplSetT::iterator</type></typedef>
<typedef id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1ac979f76f05815854ca4e84dff63b4eb3" name="const_iterator"><purpose>const_iterator for iteration over intervals </purpose><type>ImplSetT::const_iterator</type></typedef>
<method-group name="public member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1add3f492643f589f8ae2a64fb175dc0f6" name="ICL_INTERVAL_TYPE"><type>typedef</type><parameter name=""><paramtype>Interval</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><parameter name=""><paramtype>Compare</paramtype></parameter><purpose>The interval type of the set. </purpose></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a7761781af7eea8fce461e576de2dfbcf" name="ICL_COMPARE_DOMAIN"><type>typedef</type><parameter name=""><paramtype>Compare</paramtype></parameter><parameter name=""><paramtype>DomainT</paramtype></parameter><purpose>Comparison functor for domain values. </purpose></method>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1abc4a484eab2e1be76566b67ee74967ab"><purpose>Default constructor for the empty object. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a182b558adc711d3cd7e72c0554806f54"><parameter name="src"><paramtype>const <classname>split_interval_set</classname> &amp;</paramtype></parameter><purpose>Copy constructor. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2e171eef0141773623d75a2bba402d53"><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Copy constructor for base_type. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a7277a6a982762eb2923912395511c7c4" specifiers="explicit"><parameter name="elem"><paramtype>const interval_type &amp;</paramtype></parameter><purpose>Constructor for a single element. </purpose></constructor>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1adcc340e7c5ba2e4e7cf68b54c56392bf" specifiers="explicit"><parameter name="itv"><paramtype>const domain_type &amp;</paramtype></parameter><purpose>Constructor for a single interval. </purpose></constructor>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a65340b998e8394a4230918f7df7269d8" name="assign"><type>void</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment from a base <link linkend="doxygen.interval_container_library_reference.classboost_1_1icl_1_1interval__set">interval_set</link>. </purpose></method>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a668e78e478f1c79fdd88e5305fc99be7"><type><classname>split_interval_set</classname> &amp;</type><template>
          <template-type-parameter name="SubType"/>
        </template><parameter name="src"><paramtype>const <classname>interval_base_set</classname>&lt; SubType, DomainT, Compare, Interval, Alloc &gt; &amp;</paramtype></parameter><purpose>Assignment operator for base type. </purpose></copy-assignment>
<constructor id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a5c6bda6bcad996fc2c40c3679ec28232"><parameter name="src"><paramtype><classname>split_interval_set</classname> &amp;&amp;</paramtype></parameter><purpose>Move constructor. </purpose></constructor>
<copy-assignment id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a96cd126d47a70c8934716bab4b7905b3"><type><classname>split_interval_set</classname> &amp;</type><parameter name="src"><paramtype><classname>split_interval_set</classname></paramtype></parameter><purpose>Move assignment operator. </purpose></copy-assignment>
</method-group>
<method-group name="private member functions">
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a2d18d0435f67baa6328153af5ac618c4" name="handle_inserted"><type>iterator</type><parameter name="inserted_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1af9a189980ba692a116114c9ee2b44f60" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter><parameter name="last_"><paramtype>iterator</paramtype></parameter></method>
<method id="doxygen.interval_container_library_reference.classboost_1_1icl_1_1split__interval__set_1a8db11e0133e507816001746d121e52a8" name="add_over"><type>iterator</type><parameter name="addend"><paramtype>const interval_type &amp;</paramtype></parameter></method>
</method-group>
</class><struct-specialization id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_a9b72ef06ab1142bf57337895ae7b582" name="type_to_string"><template>
      <template-type-parameter name="DomainT"/>
      <template-nontype-parameter name="Compare"><type>ICL_COMPARE</type></template-nontype-parameter>
      <template-nontype-parameter name="Interval"><type>ICL_INTERVAL(ICL_COMPARE)</type></template-nontype-parameter>
      <template-nontype-parameter name="Alloc"><type>ICL_ALLOC</type></template-nontype-parameter>
    </template><specialization><template-arg>icl::split_interval_set&lt; DomainT</template-arg><template-arg>Compare</template-arg><template-arg>Interval</template-arg><template-arg>Alloc &gt;</template-arg></specialization><method-group name="public static functions">
<method id="doxygen.interval_container_library_reference.structboost_1_1icl_1_1type__to__string_3_01icl_1_1split__interval__set_3_01DomainT_00_01Compare_a9b72ef06ab1142bf57337895ae7b582_1a82b984d51effae574eb4e5488c3b0156" name="apply" specifiers="static"><type>std::string</type></method>
</method-group>
</struct-specialization>









</namespace>
</namespace>
</header>
</library-reference>